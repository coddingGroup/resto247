[{"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\index.js":"1","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\configureStore.js":"2","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\MainComponent.js":"3","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\auth.js":"4","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\recommanded.js":"5","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\comments.js":"6","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\MenuComponent.js":"7","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\HomeComponent.js":"8","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Login.js":"9","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\SignUp.js":"10","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\AboutComponent.js":"11","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\collections\\miscellaneous.js":"12","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\otherDailyReports.js":"13","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\dailyInvoiceDetails.js":"14","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\nonPaidInvoices.js":"15","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Main.js":"16","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\LoadingComponent.js":"17","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\SearchOutputDisplay.js":"18","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\functions\\getResourceWithId.js":"19","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\cartComponent\\AddedCart.js":"20","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\TabsMenu.js":"21","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\UIcomponents\\SideNavigation.js":"22","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\firebase\\config.js":"23","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\reports\\TempleteToDisplayDataInTableFromArray.js":"24","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DailyMiscellaneousComponent.js":"25","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DairyUsage.js":"26","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\ProductSold.js":"27","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\FilterMenu.js":"28","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Products\\IncreaseProduct.js":"29","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\shared\\carouselHome.js":"30","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\ReactInfiniteScroll.js":"31","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\marching\\MarchProductsCard.js":"32","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\hotdeals.js":"33","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\outOfStockProducts.js":"34","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\Cart.js":"35","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\FooterComponent.js":"36","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\ActionCreator2.js":"37","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\reports.js":"38","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\HeaderComponent.js":"39","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\ActionTypes.js":"40","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\homepagecomponents\\RenderCard3.js":"41","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\reports\\ReportsMainComponent.js":"42","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\Dashboard.js":"43","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\FlippingCard.js":"44","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\reports\\ChooseMonth.js":"45","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DailyStockUp.js":"46","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DailyResourcesReportsComponent.js":"47","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\marching\\MarchResourceCard.js":"48","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\DishdetailComponent.js":"49","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\ContactComponent.js":"50","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\ActionCreators.js":"51","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\collections\\invoices.js":"52","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\dailyStockUp.js":"53","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\dailyInvoices.js":"54","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\shared\\ProductsCategories.js":"55","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\homepagecomponents\\FistScreen.js":"56","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\NonPaidInvoicesComponent.js":"57","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\UIcomponents\\ItemsSold.js":"58","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\cartComponent\\TableAddedCarts.js":"59","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Navigation.js":"60"},{"size":724,"mtime":1627925563449,"results":"61","hashOfConfig":"62"},{"size":2949,"mtime":1627925563464,"results":"63","hashOfConfig":"62"},{"size":19957,"mtime":1627925563393,"results":"64","hashOfConfig":"62"},{"size":1520,"mtime":1627925563455,"results":"65","hashOfConfig":"62"},{"size":657,"mtime":1627925563473,"results":"66","hashOfConfig":"62"},{"size":642,"mtime":1627925563462,"results":"67","hashOfConfig":"62"},{"size":2208,"mtime":1627925563418,"results":"68","hashOfConfig":"62"},{"size":7323,"mtime":1627936171378,"results":"69","hashOfConfig":"62"},{"size":5461,"mtime":1627925563392,"results":"70","hashOfConfig":"62"},{"size":11918,"mtime":1627925563430,"results":"71","hashOfConfig":"62"},{"size":5456,"mtime":1627925563387,"results":"72","hashOfConfig":"62"},{"size":832,"mtime":1627925563460,"results":"73","hashOfConfig":"62"},{"size":1741,"mtime":1627925563470,"results":"74","hashOfConfig":"62"},{"size":1036,"mtime":1627925563466,"results":"75","hashOfConfig":"62"},{"size":699,"mtime":1627925563469,"results":"76","hashOfConfig":"62"},{"size":6671,"mtime":1627925563395,"results":"77","hashOfConfig":"62"},{"size":259,"mtime":1627925563391,"results":"78","hashOfConfig":"62"},{"size":440,"mtime":1627925563409,"results":"79","hashOfConfig":"62"},{"size":551,"mtime":1627925563446,"results":"80","hashOfConfig":"62"},{"size":426,"mtime":1627925563431,"results":"81","hashOfConfig":"62"},{"size":8805,"mtime":1627925563427,"results":"82","hashOfConfig":"62"},{"size":4469,"mtime":1627925563413,"results":"83","hashOfConfig":"62"},{"size":729,"mtime":1627936324436,"results":"84","hashOfConfig":"62"},{"size":8183,"mtime":1627925563408,"results":"85","hashOfConfig":"62"},{"size":8787,"mtime":1627925563400,"results":"86","hashOfConfig":"62"},{"size":1121,"mtime":1627925563403,"results":"87","hashOfConfig":"62"},{"size":9219,"mtime":1627925563404,"results":"88","hashOfConfig":"62"},{"size":555,"mtime":1627925563423,"results":"89","hashOfConfig":"62"},{"size":3006,"mtime":1627925563396,"results":"90","hashOfConfig":"62"},{"size":915,"mtime":1627925563478,"results":"91","hashOfConfig":"62"},{"size":1985,"mtime":1627925563425,"results":"92","hashOfConfig":"62"},{"size":5770,"mtime":1627925563415,"results":"93","hashOfConfig":"62"},{"size":631,"mtime":1627925563465,"results":"94","hashOfConfig":"62"},{"size":727,"mtime":1627925563471,"results":"95","hashOfConfig":"62"},{"size":1495,"mtime":1627925563454,"results":"96","hashOfConfig":"62"},{"size":2987,"mtime":1627925563389,"results":"97","hashOfConfig":"62"},{"size":14594,"mtime":1627925563451,"results":"98","hashOfConfig":"62"},{"size":1390,"mtime":1627925563470,"results":"99","hashOfConfig":"62"},{"size":4928,"mtime":1627925563390,"results":"100","hashOfConfig":"62"},{"size":7847,"mtime":1627925563452,"results":"101","hashOfConfig":"62"},{"size":3831,"mtime":1627925563438,"results":"102","hashOfConfig":"62"},{"size":5504,"mtime":1627925563406,"results":"103","hashOfConfig":"62"},{"size":8345,"mtime":1627925563403,"results":"104","hashOfConfig":"62"},{"size":10614,"mtime":1627925563394,"results":"105","hashOfConfig":"62"},{"size":2878,"mtime":1627925563405,"results":"106","hashOfConfig":"62"},{"size":9073,"mtime":1627925563402,"results":"107","hashOfConfig":"62"},{"size":8692,"mtime":1627925563401,"results":"108","hashOfConfig":"62"},{"size":3869,"mtime":1627925563417,"results":"109","hashOfConfig":"62"},{"size":8394,"mtime":1627925563388,"results":"110","hashOfConfig":"62"},{"size":11247,"mtime":1627925563387,"results":"111","hashOfConfig":"62"},{"size":52720,"mtime":1627925563452,"results":"112","hashOfConfig":"62"},{"size":1366,"mtime":1627925563458,"results":"113","hashOfConfig":"62"},{"size":676,"mtime":1627925563469,"results":"114","hashOfConfig":"62"},{"size":678,"mtime":1627925563466,"results":"115","hashOfConfig":"62"},{"size":314,"mtime":1627925563476,"results":"116","hashOfConfig":"62"},{"size":2486,"mtime":1627925563434,"results":"117","hashOfConfig":"62"},{"size":9398,"mtime":1627925563424,"results":"118","hashOfConfig":"62"},{"size":1272,"mtime":1627925563412,"results":"119","hashOfConfig":"62"},{"size":11786,"mtime":1627925563432,"results":"120","hashOfConfig":"62"},{"size":10005,"mtime":1627970869827,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"7olgfy",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"133"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"133"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"133"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"133"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\index.js",[],["257","258"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\configureStore.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\MainComponent.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\auth.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\recommanded.js",[],["259","260"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\comments.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\MenuComponent.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\HomeComponent.js",["261","262","263","264","265","266","267","268","269","270","271"],"import React, {useState} from \"react\";\r\nimport {Col, Nav, NavItem, NavLink, Row, TabContent, TabPane} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\nimport {ITEMS} from '../shared/ProductsCategories';\r\nimport '../css/home.css';\r\nimport Header from \"./HeaderComponent\";\r\nimport RenderCard3 from './homepagecomponents/RenderCard3';\r\nimport SearchFilterInM from \"./Manager/SearchFilterIn\";\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [cathegories] = useState(ITEMS);\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n\r\n    //this is important comment\r\n    // let allNavIntem = cathegories.map((cathegory) => {\r\n    //     return (\r\n    //\r\n    //         <NavItem>\r\n    //             <NavLink\r\n    //                 className={classnames({active: activeTab === cathegory.id})}\r\n    //                 onClick={() => {\r\n    //                     toggle(cathegory.id);\r\n    //                 }}>\r\n    //                 {cathegory.name}\r\n    //             </NavLink>\r\n    //         </NavItem>\r\n    //     )\r\n    // });\r\n\r\n    const menu = props.products.products.map((product) => {\r\n        return (\r\n            <div className=\"col-12 col-md-3 pl-1\">\r\n                <RenderCard3 item={product} addToCart={props.addToCart} cart={props.cart}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n\r\n        <React.Fragment>\r\n\r\n            <Header/>\r\n            <div className=\"container \">\r\n\r\n                {/*<Nav pills>*/}\r\n                {/*    {allNavIntem}*/}\r\n                {/*</Nav>*/}\r\n                {/*<TabContent activeTab={activeTab}>*/}\r\n                {/*    <TabPane tabId=\"1\">*/}\r\n                {/*        <Row>*/}\r\n                {/*            <Col sm=\"12\">*/}\r\n                {/*                <div className=\"row align-items-start\">*/}\r\n                {/*                    Upcomming*/}\r\n                {/*                    /!*<div className=\"col-12 col-md m-2\">*!/*/}\r\n                {/*                    /!*    <RenderCard item={props.dish}*!/*/}\r\n                {/*                    /!*                isLoading={props.dishesLoading}*!/*/}\r\n                {/*                    /!*                errMess={props.dishesErrMess}/>*!/*/}\r\n                {/*                    /!*</div>*!/*/}\r\n                {/*                    /!*<div className=\"col-12 col-md m-2\">*!/*/}\r\n                {/*                    /!*    <RenderCard item={props.promotion}*!/*/}\r\n                {/*                    /!*                isLoading={props.promosLoading}*!/*/}\r\n                {/*                    /!*                errMess={props.promosErrMess}/>*!/*/}\r\n                {/*                    /!*</div>*!/*/}\r\n                {/*                    /!*<div className=\"col-12 col-md m-2\">*!/*/}\r\n                {/*                    /!*    <RenderCard item={props.hotdeal}*!/*/}\r\n                {/*                    /!*                isLoading={props.hotdealsLoading}*!/*/}\r\n                {/*                    /!*                errMess={props.hotdealsErrMess}/>*!/*/}\r\n                {/*                    /!*</div>*!/*/}\r\n                {/*                </div>*/}\r\n                {/*            </Col>*/}\r\n                {/*        </Row>*/}\r\n                {/*    </TabPane>*/}\r\n                {/*    <TabPane tabId=\"2\">*/}\r\n                {/*        <Row>*/}\r\n\r\n                {/*            {menu}*/}\r\n\r\n                {/*        </Row>*/}\r\n                {/*    </TabPane>*/}\r\n                {/*</TabContent>*/}\r\n                <section className=\"about-section\">\r\n                    <article>\r\n                        <h3>\r\n                            Section for the text why your restaurant is the best.\r\n                        </h3>\r\n                        <p>\r\n                            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                            A quos, voluptatum illum mollitia dolores libero placeat\r\n                            nesciunt quasi adipisci impedit!Lorem ipsum dolor sit,\r\n                            amet consectetur adipisicing elit.\r\n                            A quos, voluptatum illum mollitia dolores libero placeat\r\n                            nesciunt quasi adipisci impedit!\r\n                            Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                            A quos, voluptatum illum mollitia dolores libero placeat\r\n                            nesciunt quasi adipisci impedit!Lorem ipsum dolor sit.\r\n                        </p>\r\n                    </article>\r\n                </section>\r\n                <div id=\"carouselExampleControls\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                    <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item active\">\r\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/restaurant-management-2a3f1.appspot.com/o/brooke-lark-aGjP08-HbYY-unsplash.jpg?alt=media&token=43e34223-e9d6-45ba-8aa5-b7c25e9b739a\" className=\"d-block w-100\" alt=\"food\"/>\r\n                        </div>\r\n                        <div className=\"carousel-item\">\r\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/restaurant-management-2a3f1.appspot.com/o/lily-banse--YHSwy6uqvk-unsplash.jpg?alt=media&token=c97d6974-caef-46f1-a208-2e1f3996b749\" className=\"d-block w-100\" alt=\"food\"/>\r\n                        </div>\r\n                        <div className=\"carousel-item\">\r\n                            <img src=\"https://firebasestorage.googleapis.com/v0/b/restaurant-management-2a3f1.appspot.com/o/rachel-park-hrlvr2ZlUNk-unsplash.jpg?alt=media&token=84c4a0cb-7742-4247-8baa-5928de31a94d\" className=\"d-block w-100\" alt=\"food\"/>\r\n                        </div>\r\n                    </div>\r\n                    <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\"\r\n                       data-slide=\"prev\">\r\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                    <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\"\r\n                       data-slide=\"next\">\r\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                        <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                    <div className=\" d-flex justify-content-center p-2 mt-3\">\r\n                        <h1> Our Products </h1>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <SearchFilterInM cardToRender={\"RenderCard3\"} allProducts={props.products.products}\r\n                                 isLoading={props.products.isLoading}\r\n                                 cart={props.cart}\r\n                                 addToCart={props.addToCart}\r\n                                 errMess={props.products.errMess}/>\r\n\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Login.js",["272","273","274","275"],"import React, {Component} from 'react';\r\nimport {Button, Col, Label, Row} from \"reactstrap\";\r\nimport {Control, Errors, Form} from \"react-redux-form\";\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);  //regular expression   \r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n\r\n        this.props.postFeedback(values.firstname, values.lastname, values.email, values.contactType, values.telnum, values.agree);\r\n\r\n        console.log(\"Curent state is: \" + JSON.stringify(values));\r\n\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"bg-light shadow-lg mt-5 mb-5 \">\r\n\r\n\r\n                    <div className=\"p-5\">\r\n                        <div className=\"\">\r\n                            <Form model=\"login\" onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"email\" md={2}> Email </Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, validEmail\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email address'\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}> Password</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.password model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                          placeholder=\"Password\"\r\n                                                          className=\"form-control\"\r\n                                                          validators={{\r\n                                                              required,\r\n                                                              minLength: minLength(3),\r\n                                                              maxLength: maxLength(15)\r\n                                                          }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10, offset: 2}}>\r\n                                        <div className=\"form-check\">\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"/> {' '}\r\n                                            <strong>Remember password? </strong>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 7, offset: 5}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Login\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\SignUp.js",["276","277","278","279","280","281","282"],"import React, {Component} from 'react';\r\nimport {Button, Col, Label, Row} from \"reactstrap\";\r\nimport {Control, Errors, Form} from \"react-redux-form\";\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);  //regular expression\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.signUp(values, 'client');\r\n\r\n        // this.props.postFeedback(values.firstname, values.lastname, values.email, values.contactType, values.telnum, values.agree);\r\n\r\n        console.log(\"Curent state is: \" + JSON.stringify(values));\r\n\r\n        // this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"bg-light shadow-lg mt-5 mb-5 \">\r\n\r\n\r\n                    <div className=\"p-5\">\r\n                        <div className=\"\">\r\n                            <Form model=\"signUp\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstName\" md={2}> First Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                                      placeholder=\"First Name\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstName\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"lastName\" md={2}> Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                                      placeholder=\"Last Name\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastName\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"telNum\" md={2}> Contact Tel</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".telNum\" id=\"telNum\" name=\"telNum\"\r\n                                                      placeholder=\"Tel. Number\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required,\r\n                                                          minLength: minLength(3),\r\n                                                          maxLength: maxLength(15),\r\n                                                          isNumber\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".telNum\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 numbers',\r\n                                                maxLength: 'Must be 15 numbers or less',\r\n                                                isNumber: 'Must be a number'\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"email\" md={2}> Email </Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, validEmail\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email address'\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"password\" md={2}> Password</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.password model=\".password\" id=\"password\" name=\"password\"\r\n                                                          placeholder=\"Password\"\r\n                                                          className=\"form-control\"\r\n                                                          validators={{\r\n                                                              required,\r\n                                                              minLength: minLength(3),\r\n                                                              maxLength: maxLength(15)\r\n                                                          }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".password\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"confirmPassword\" md={2}> Password</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.password model=\".confirmPassword\" id=\"confirmPassword\"\r\n                                                          name=\"confirmPassword\" placeholder=\"Confirm Password\"\r\n                                                          className=\"form-control\"\r\n                                                          validators={{\r\n                                                              required,\r\n                                                              minLength: minLength(3),\r\n                                                              maxLength: maxLength(15)\r\n                                                          }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".confirmPassword\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10, offset: 2}}>\r\n                                        <div className=\"form-check\">\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"/> {' '}\r\n                                            <strong>Remember password? </strong>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 7, offset: 5}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Sign Up\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\AboutComponent.js",["283","284"],"import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Fade, Stagger} from \"react-animation-components\";\r\nimport {Loading} from \"./LoadingComponent\";\r\n\r\nfunction RenderLeader(props) {\r\n\r\n    return (\r\n\r\n        <Stagger in>\r\n            <Fade in>\r\n                <Media className=\"mt-5\" tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src=\"\" alt=\"\"/>\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>upcomming</Media>\r\n                        <p>upcomming later</p>\r\n                        <p>upcomming</p>\r\n                    </Media>\r\n                </Media>\r\n\r\n            </Fade>\r\n        </Stagger>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nconst AboutStatic = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, RestoApp con Fusion quickly established itself as a culinary icon par\r\n                        excellence in kicukiro. With its unique brand of world fusion cuisine that can be found nowhere\r\n                        else, it enjoys delicious food cooked by experienced chef. Featuring four of the best\r\n                        three-star Michelin chefs in the world, you never know what will arrive on your plate the next\r\n                        time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain\r\n                        started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in\r\n                        a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n    // const leaders = props.leaders.leaders.map((leader) => {\r\n    //     return (\r\n    //         <RenderLeader leader={leader}/>\r\n    //     );\r\n    // });\r\n    // if (props.leaders.isLoading) {\r\n    //     return (\r\n    //         <div className='container'>\r\n    //             <AboutStatic/>\r\n    //             <div className=\"row\">\r\n    //                 <Loading/>\r\n    //             </div>\r\n    //         </div>\r\n    //     );\r\n    // } else if (props.leaders.errMess) {\r\n    //     return (\r\n    //         <div className='container'>\r\n    //             <AboutStatic/>\r\n    //             <div className=\"row\">\r\n    //                 <h4>{props.leaders.errMess}</h4>\r\n    //             </div>\r\n    //         </div>\r\n    //     );\r\n    // } else\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <AboutStatic/>\r\n                <div className=\"row row-content\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            upcomming\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default About;    ","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\collections\\miscellaneous.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\otherDailyReports.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\dailyInvoiceDetails.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\nonPaidInvoices.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Main.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\LoadingComponent.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\SearchOutputDisplay.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\functions\\getResourceWithId.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\cartComponent\\AddedCart.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\TabsMenu.js",["285","286","287"],"import React, {useState} from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardText,\r\n    CardTitle,\r\n    Col,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    TabPane\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport TableAddedCarts from '../../cartComponent/TableAddedCarts'\r\nimport AddedCarts from '../../cartComponent/AddedCart';\r\nimport '../../../css/home.css';\r\nimport FilterMenu from './FilterMenu';\r\nimport {Sticky, StickyContainer} from 'react-sticky'\r\n\r\n\r\nimport ScrollView from './ScrollView';\r\nimport RenderCard3 from \"../../homepagecomponents/RenderCard3\";\r\nimport NonPaidInvoicesComponent from \"./NonPaidInvoicesComponent\";\r\n\r\nlet numberOfItem = 12;\r\nconst TabsMenu = (props) => {\r\n\r\n\r\n\r\n    let opElement = props.products.products.slice(0, numberOfItem);\r\n    let menu = opElement.map((product) => {\r\n        return (\r\n            <div className=\"\">\r\n                <RenderCard3 item={product}\r\n                             key={product.id}\r\n                             cart={props.cart}\r\n                             addToCart={props.addToCart}\r\n                             removeToCart={props.removeToCart}\r\n\r\n                />\r\n            </div>\r\n        );\r\n    });\r\n    const arr = [\r\n        ...menu\r\n    ];\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState(localStorage.getItem('activeTab1')===null? '1': localStorage.getItem('activeTab1'));\r\n    const [productToDisplay, setProductToDisplay] = useState(props.products.products);\r\n    const [category, setCategory] = useState('All');\r\n\r\n\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(arr);\r\n\r\n\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n        localStorage.setItem('activeTab1',tab);\r\n    }\r\n\r\n\r\n    let handleReportsClick = () =>{\r\n        props.changeNonPaidInvoices(JSON.parse(localStorage.getItem('userCollection')).firstName);\r\n    }\r\n    let keysToUse = props.products.products.reduce(\r\n        (keysToUse, pr) => {\r\n            if (!keysToUse.includes(pr.category)) {\r\n                keysToUse = [...keysToUse, pr.category];\r\n            }\r\n\r\n            return keysToUse;\r\n\r\n        }, []\r\n    );\r\n    let funMenu = (products = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (products.length < last) ? products.length : last;\r\n        if (products.length >= lastIndex) {\r\n\r\n            let opElement = products.slice(start, lastIndex);\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menu = opElement.map((product) => {\r\n                return (\r\n                    <div className=\"\">\r\n                        <RenderCard3 key={product.id + \"op\"} cart={props.cart} addToCart={props.addToCart}\r\n                                     removeToCart={props.removeToCart} item={product}/>\r\n                    </div>\r\n                );\r\n            });\r\n            if (products.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menu;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n    let changeProductToDisplay = (newCategory = 'All') => {\r\n        let items = undefined;\r\n        if (newCategory === 'All') {\r\n            items = props.products.products;\r\n        } else {\r\n            items = props.products.products.reduce(\r\n                (item, pr) => {\r\n                    if (pr.category == newCategory) {\r\n                        item = [...item, pr];\r\n                    }\r\n\r\n                    return item;\r\n\r\n                }, []\r\n            );\r\n\r\n        }\r\n        setProductToDisplay(items);\r\n\r\n        setItemToStartOn(0);\r\n        let newItem = [...funMenu(items, true)]\r\n        setItems2(newItem);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Nav tabs>\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={classnames({active: activeTab === '1'})}\r\n                        onClick={() => {\r\n                            toggle('1');\r\n                        }}\r\n                    >\r\n                        Products\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={classnames({active: activeTab === '2'})}\r\n                        onClick={() => {\r\n                            toggle('2');\r\n                        }}\r\n                    >\r\n                        <span onClick={handleReportsClick}>Reports</span>\r\n\r\n                    </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={activeTab}>\r\n                <TabPane tabId=\"1\">\r\n                    <Row>\r\n\r\n                        <Col sm=\"8\">\r\n\r\n                            <StickyContainer>\r\n\r\n                                <Sticky>\r\n                                    {({\r\n                                          style,\r\n\r\n\r\n                                          isSticky,\r\n                                          wasSticky,\r\n                                          distanceFromTop,\r\n                                          distanceFromBottom,\r\n                                          calculatedHeight\r\n                                      }) => (\r\n                                        <header style={style}>\r\n                                            {<FilterMenu categories={keysToUse}\r\n                                                         category={category}\r\n                                                         changeProductToDisplay={changeProductToDisplay}\r\n                                                         setCategory={setCategory}/>\r\n\r\n                                            }\r\n                                        </header>\r\n                                    )}\r\n\r\n\r\n                                </Sticky>\r\n                                <ScrollView\r\n                                    funMenu={funMenu}\r\n                                    items2={items2} setItems2={setItems2}\r\n                                    hasMoreS={hasMoreS} setHasMoreS={setHasMoreS}\r\n                                    itemToFetch={itemToFetch} setItemToFetch={setItemToFetch}\r\n                                    itemToStartOn={itemToStartOn} setItemToStartOn={setItemToStartOn}\r\n                                    cart={props.cart}\r\n                                    addToCart={props.addToCart}\r\n                                    removeToCart={props.removeToCart}\r\n                                    products={productToDisplay}/>\r\n\r\n                            </StickyContainer>\r\n\r\n\r\n                        </Col>\r\n\r\n                        <Col sm=\"4\">\r\n                            <Card className=\"mt-2\">\r\n                                <CardTitle className=\"mt-1 col\">\r\n                                    <h3> Products on Cart <span class=\"float-right \"><AddedCarts\r\n                                        cart={props.cart}/> </span>\r\n                                        <span class=\"fa fa-print mt-2 float-right\"> </span>\r\n                                    </h3>\r\n                                </CardTitle>\r\n                                <CardBody> <TableAddedCarts pushInvoice={props.pushInvoice}\r\n                                                            waiters={props.waiters.waiters}\r\n                                                            removeToCart={props.removeToCart} cart={props.cart}/>\r\n                                </CardBody>\r\n                            </Card>\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>\r\n                <TabPane tabId=\"2\">\r\n                    <Row>\r\n                        <Col>\r\n                            <NonPaidInvoicesComponent changeNonPaidInvoices={props.changeNonPaidInvoices} nonPaidInvoices={props.nonPaidInvoices} />\r\n                        </Col>\r\n                    </Row>\r\n                </TabPane>\r\n            </TabContent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabsMenu;\r\n","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\UIcomponents\\SideNavigation.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\firebase\\config.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\reports\\TempleteToDisplayDataInTableFromArray.js",["288","289"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst TempleteToDisplayDataInTableFromArray = (props) => {\r\n    // props.reports.resourceMonthReport.map(report =>{\r\n    //     monthExpensesOnStock += report.totalCost;\r\n    // });\r\n    const [productToDisplay] = useState(props.dataToDisplay);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"resourceMonthReport is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((resourceMonthReport, index) => {\r\n            let allTh = [];\r\n            for(let key in props.data){\r\n                allTh.push(<td>{resourceMonthReport[key]}</td>);\r\n            }\r\n            return (\r\n                <tr key={resourceMonthReport.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    {allTh}\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    let allTh = [];\r\n    for(let key in props.data){\r\n        allTh.push(<th> {props.data[key]} </th>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>{props.displayName}</h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        {allTh}\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id={props.idToUse}\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={props.idToUse}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            {allTh}\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TempleteToDisplayDataInTableFromArray;\r\n","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DailyMiscellaneousComponent.js",["290","291"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyMiscellaneousComponent = (props) => {\r\n    const [productToDisplay] = useState(props.dailyMiscellaneous.dailyMiscellaneous);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"dailyStockUp is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((miscellaneous, index) => {\r\n            return (\r\n                <tr key={miscellaneous.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{miscellaneous.by}</td>\r\n                    <td>{miscellaneous.price}</td>\r\n                    <td> {miscellaneous.reason}</td>\r\n                    <td> {miscellaneous.description}</td>\r\n                    <td> proof </td>\r\n                    <td> --</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Miscellaneous </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>by</th>\r\n                                        <th>How much</th>\r\n                                        <th> Reason</th>\r\n                                        <th> Description</th>\r\n                                        <th> Proof </th>\r\n                                        <th>Created At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyMiscellaneous\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyMiscellaneous\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>by</th>\r\n                                                            <th>How much</th>\r\n                                                            <th> Reason</th>\r\n                                                            <th> Description</th>\r\n                                                            <th> Proof </th>\r\n                                                            <th>created At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyMiscellaneousComponent;\r\n","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DairyUsage.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\ProductSold.js",["292","293","294","295","296","297"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\FilterMenu.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Products\\IncreaseProduct.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\shared\\carouselHome.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\ReactInfiniteScroll.js",["298"],"import React, {Component} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nclass ReactInfiniteScroll extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        // this.state = {\r\n        //     items2: arr,\r\n        //     hasMoreS:true,\r\n        //     itemsToFetch: lastIndex,\r\n        //     itemToStartOn: lastIndex\r\n        // };\r\n\r\n    }\r\n\r\n\r\n    fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n            // this.setState({\r\n            //\r\n            //     items2: [...this.state.items2,...this.funMenu()]\r\n            //\r\n            // });\r\n            let item2 = [...this.props.items2, ...this.props.funMenu()];\r\n\r\n            this.props.setItems2(item2);\r\n        }, 1500);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-2\">\r\n                <InfiniteScroll\r\n                    scrollableTarget={this.props.scrollableDiv}\r\n                    dataLength={this.props.items2.length}\r\n                    next={this.fetchMoreData}\r\n                    hasMore={this.props.hasMoreS}\r\n                    loader={<h4>Loading...</h4>}\r\n                    endMessage={\r\n                        <p> no more results </p>\r\n                    }\r\n\r\n                >\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.props.items2.map(\r\n                                (item, i) => {\r\n                                    return (\r\n                                        <span>{item}\r\n                                \r\n                                </span>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </InfiniteScroll>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactInfiniteScroll;\r\n","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\marching\\MarchProductsCard.js",["299","300"],"import {Button, Card, CardBody, CardHeader, Col, Form, Input, Label, Row} from \"reactstrap\";\r\nimport React, {useState} from \"react\";\r\nimport '../../../css/march.css';\r\n\r\nlet MarchProductsCard = (props) => {\r\n\r\n    let [index,setIndex] =useState(0) ;\r\n    let [numberOfDelete, setNumberOfDelete] = useState(0);\r\n\r\n    const [marchProduct, setMarchProduct] = useState({});\r\n    let options = '';\r\n    if(props.products.products !== undefined){\r\n         options =  props.products.products.map(product =>{\r\n            return (\r\n                <option key={product.id} value={JSON.stringify({...product})}>{product.name} </option>\r\n            )\r\n        });\r\n\r\n    }\r\n\r\n\r\n    let changeChosenProduct = (event) =>{\r\n         let product = JSON.parse(event.target.value);\r\n            let prevChosen = props.chosenProducts;\r\n            let objKey = event.target.name;\r\n            let isNotChosen = true;\r\n            for(let i in prevChosen){\r\n                if( prevChosen[i].id === product.id ){\r\n                    isNotChosen = false;\r\n                    alert(\"product already chosen, please choose again \");\r\n                    break;\r\n                }\r\n            }\r\n            if(isNotChosen){\r\n                prevChosen[objKey] = product;\r\n                console.log(JSON.stringify(prevChosen));\r\n                props.setChosenProducts({...prevChosen});\r\n            }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let OneMarchProduct = ({indexOfProduct, deleteProductItem}) =>{\r\n        let [productQuantity, setProductQuantity] = useState(0);\r\n\r\n        let handleQuantityChange = (event) =>{\r\n            //let name = event.target.name;\r\n            //let index = name.slice(8);\r\n            let prev = props.chosenProducts;\r\n            if (prev[indexOfProduct] === undefined || prev[indexOfProduct] ===null){\r\n                alert(\"choose productFirst\");\r\n            }\r\n            else if(event.target.value < 0){\r\n                alert(\"only positive numbers\");\r\n            }\r\n            else{\r\n                setProductQuantity(event.target.value);\r\n                prev[indexOfProduct].matchProductQuantity = event.target.value;\r\n            }\r\n\r\n        }\r\n        let handleDeleteClick = (event) =>{\r\n            //deleteItem(indexOfProduct);\r\n\r\n\r\n            //alert(indexOfProduct);\r\n            let prev2 = marchProduct;\r\n             //prev2.slice(indexOfProduct-numberOfDelete,1);\r\n             delete prev2[indexOfProduct] ;\r\n             //alert(JSON.stringify(prev2));\r\n\r\n            setMarchProduct({...prev2});\r\n\r\n            setNumberOfDelete(numberOfDelete + 1);\r\n            deleteProductItem(indexOfProduct);\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <React.Fragment key={index + \"anotherKey\"}>\r\n            <Col>\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Options</label>\r\n                    </div>\r\n                    <select name={index} className=\"custom-select\" onChange={changeChosenProduct}>\r\n                        <option value=\"null\" selected>Choose...</option>\r\n                        {options}\r\n                    </select>\r\n                </div>\r\n            </Col>\r\n        <Col>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Qtn</span>\r\n                </div>\r\n                <input value={productQuantity} type=\"number\" min={0} name={\"quantity\"+index} onChange={handleQuantityChange} className=\"form-control\"\r\n                       aria-label=\"Amount (to the nearest dollar)\"/>\r\n            </div>\r\n        </Col>\r\n                <Col sm={2}>\r\n                    <span className=\"fa fa-lg fa-trash text-danger\" onClick={handleDeleteClick}>\r\n\r\n                    </span>\r\n                </Col>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    let addOtherProduct = () => {\r\n        let it =\r\n                    (<Form key={index +'addOtherProduct'}>\r\n\r\n                        <Row className=\"form-group\" >\r\n                            <OneMarchProduct indexOfProduct={index} deleteProductItem={props.deleteProductItem} />\r\n\r\n                        </Row>\r\n\r\n                    </Form>)\r\n\r\n        ;\r\n        let prevA = marchProduct;\r\n        prevA[index] = it;\r\n        setIndex(index+1);\r\n        setMarchProduct(prevA);\r\n    }\r\n\r\n    let marchProductDisplay = [];\r\n    for (let k in marchProduct){\r\n        marchProductDisplay.push(marchProduct[k]);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"march shadow-lg\">\r\n            <div className=\"marchBody\">\r\n                <Card>\r\n                    <CardHeader className=\"bg-primary text-white\">Marched Products</CardHeader>\r\n                    <CardBody>\r\n                        <div className=\"row p-1\">\r\n                            <Button onClick={addOtherProduct} className=\"btn-warning\"> <span className=\"fa fa-plus\"> Other Product</span>\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"row p-1\">\r\n                            <div className=\"col-6\">\r\n                                <h4>Names</h4>\r\n\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <h4>Quantity</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row p-1\">\r\n                                {marchProductDisplay}\r\n                        </div>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MarchProductsCard;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\hotdeals.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\outOfStockProducts.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\Cart.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\FooterComponent.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\ActionCreator2.js",["301"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\reports.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\HeaderComponent.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\ActionTypes.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\homepagecomponents\\RenderCard3.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\reports\\ReportsMainComponent.js",["302","303","304"],"\r\nimport React, {useState} from \"react\";\r\nimport ChooseMonth from \"./ChooseMonth\";\r\nimport ProfitCard from \"./ProfitCard\";\r\nimport TempleteToDisplayDataInTableFromArray from \"./TempleteToDisplayDataInTableFromArray\";\r\n\r\nconst ReportsMainComponent = (props) => {\r\n    let date = new Date();\r\n    const [month,setMonth] = useState(date.getMonth() + 1);\r\n    const [year, setYear] = useState(date.getFullYear());\r\n\r\n    let monthExpensesOnStock = 0;\r\n    props.reports.resourceMonthReport.map(report =>{\r\n        monthExpensesOnStock += report.totalCost;\r\n    });\r\n\r\n    let monthIncome = 0;\r\n    props.reports.productMonthReport.map(report =>{\r\n        monthIncome+= report.totalPrice;\r\n    })\r\n    let monthExpenseMiscellaneous = 0;\r\n    props.reports.miscellaneousMonthReport.map(report =>{\r\n        if(report.isExpanse){\r\n            monthExpenseMiscellaneous+= report.totalMoney;\r\n        }\r\n    })\r\n\r\n    let makeFetchingAction = (mth) =>{\r\n        props.fetchResourceMonthReport(year, mth);\r\n        props.fetchProductMonthReport(year,mth);\r\n        props.fetchMiscellaneousMonthReport(year,mth);\r\n    }\r\n\r\n        // let popularProductCalc = () =>{\r\n    //     let popularProduct = {\r\n    //         totalPrice:0,\r\n    //         totalQuantity: 0,\r\n    //         productName:''\r\n    //     };\r\n    //     if(props.dailyInvoiceDetails === null || props.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     else if(props.dailyInvoiceDetails.dailyInvoiceDetails === null || props.dailyInvoiceDetails.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     let products = props.dailyInvoiceDetails.products;\r\n    //      if(products === undefined || products ===null){\r\n    //         return\r\n    //     }\r\n    //     products.forEach((product) => {\r\n    //\r\n    //         let receptionist = Object.keys(props.dailyInvoices.dailyInvoices[product]);\r\n    //         let totalPrice = 0;\r\n    //         let totalQuantity = 0;\r\n    //         receptionist.forEach((rec) => {\r\n    //             totalPrice += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalPrice);\r\n    //             totalQuantity += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalQuantity);\r\n    //             if( popularProduct.totalQuantity <= totalQuantity){\r\n    //                 popularProduct.totalQuantity = totalQuantity;\r\n    //                 popularProduct.totalPrice = totalPrice;\r\n    //                 popularProduct.productName = product;\r\n    //             }\r\n    //\r\n    //\r\n    //         });\r\n    //\r\n    //\r\n    //     });\r\n    //     props.setDailyPopularProduct(popularProduct);\r\n    // }\r\n    //\r\n    //\r\n    //\r\n    // popularProductCalc();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2 mt-4\">\r\n                    <h3>Choose Date</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-8 \">\r\n                    <ChooseMonth  month={month} setMonth={setMonth} year={year}\r\n                                  setYear={setYear} makeFetchingAction={makeFetchingAction}   />\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <ProfitCard monthIncone={monthIncome} monthExpensesOnStock={monthExpensesOnStock} monthExpenseMiscellaneous={monthExpenseMiscellaneous} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n\r\n\r\n                    <TempleteToDisplayDataInTableFromArray reports={props.reports} dataToDisplay={props.reports.productMonthReport}\r\n                                                           data={{name:\"name\",totalPrice:\"total Price\",totalQuantity: 'Total quantity',month:\"month\",year:\"year\"}}\r\n                                                           displayName={\"product Month Report\"}\r\n                                                           idToUse={\"scrollableDivInProductMonthReport\"}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n\r\n\r\n                    <TempleteToDisplayDataInTableFromArray reports={props.reports} dataToDisplay={props.reports.resourceMonthReport}\r\n                                                           data={{name:\"name\",totalCost:\"total Cost\",totalQuantity: 'Total quantity',month:\"month\",year:\"year\"}}\r\n                                                           displayName={\"Resource Month Report\"}\r\n                                                           idToUse={\"scrollableDivInResourceMonthReport\"}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n\r\n\r\n                    <TempleteToDisplayDataInTableFromArray reports={props.reports} dataToDisplay={props.reports.miscellaneousMonthReport}\r\n                                                           data={{reason:\"reason\",totalMoney:\"total Money\",month:\"month\",year:\"year\"}}\r\n                                                           displayName={\"Miscellaneous Month Report\"}\r\n                                                           idToUse={\"scrollableDivInMiscellaneousMonthReport\"}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ReportsMainComponent;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\Dashboard.js",["305"],"import React from 'react';\r\nimport DairyUsage from './DairyUsage';\r\nimport ItemsSold from '../UIcomponents/ItemsSold';\r\nimport ReactDatePicker from '../UIcomponents/ReactDatePicker';\r\nimport ProductSold from \"./ProductSold\";\r\nimport DailyInvoicesComponent from \"./DailyInvoicesComponent\";\r\nimport DailyStockUp from \"./DailyStockUp\";\r\nimport DailyMiscellaneousComponent from \"./DailyMiscellaneousComponent\";\r\nimport DailyResourcesReportsComponent from \"./DailyResourcesReportsComponent\";\r\n\r\nconst Dashboard = (props) => {\r\n    let dailyTotals = [{\r\n        icon:\"fa fa-shopping-cart\",\r\n        name:\"Sold\",\r\n        color:'badge-warning',\r\n        unit:\"Products\",\r\n        value:props.otherDailyReports.totalQuantity===null ? \"--\": props.otherDailyReports.totalQuantity\r\n    },{\r\n        icon:\"fa fa-dollar\",\r\n        name:\"Earning\",\r\n        unit: 'rwf',\r\n        color:'',\r\n        value:props.otherDailyReports.totalEarn===null ? \"--\": props.otherDailyReports.totalEarn\r\n    },{\r\n        icon:\"fa fa-dollar\",\r\n        name:\"Orders\",\r\n        unit: 'Invoices',\r\n        color:'',\r\n        value:props.otherDailyReports.totalInvoices===null ? \"--\": props.otherDailyReports.totalInvoices\r\n    },\r\n        {\r\n            icon:\"fa fa-dollar\",\r\n            name:\"Stock up\",\r\n            unit: 'rwf',\r\n            color:'badge-primary',\r\n            value:props.otherDailyReports.totalStockUpMoney===null ? \"--\": props.otherDailyReports.totalStockUpMoney\r\n        },\r\n        {\r\n            icon:\"fa fa-dollar\",\r\n            name:\"Expanses \",\r\n            unit: 'rwf',\r\n            color:'badge-danger',\r\n            value:props.otherDailyReports.totalMiscellaneousMoney===null ? \"--\": props.otherDailyReports.totalMiscellaneousMoney\r\n        },\r\n        {\r\n            icon:\"fa fa-dollar\",\r\n            name:\"Stock out \",\r\n            unit: 'rwf',\r\n            color:'badge-warning',\r\n            value:props.otherDailyReports.totalStockOutMoney===null ? \"--\": props.otherDailyReports.totalStockOutMoney\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    // let popularProductCalc = () =>{\r\n    //     let popularProduct = {\r\n    //         totalPrice:0,\r\n    //         totalQuantity: 0,\r\n    //         productName:''\r\n    //     };\r\n    //     if(props.dailyInvoiceDetails === null || props.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     else if(props.dailyInvoiceDetails.dailyInvoiceDetails === null || props.dailyInvoiceDetails.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     let products = props.dailyInvoiceDetails.products;\r\n    //      if(products === undefined || products ===null){\r\n    //         return\r\n    //     }\r\n    //     products.forEach((product) => {\r\n    //\r\n    //         let receptionist = Object.keys(props.dailyInvoices.dailyInvoices[product]);\r\n    //         let totalPrice = 0;\r\n    //         let totalQuantity = 0;\r\n    //         receptionist.forEach((rec) => {\r\n    //             totalPrice += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalPrice);\r\n    //             totalQuantity += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalQuantity);\r\n    //             if( popularProduct.totalQuantity <= totalQuantity){\r\n    //                 popularProduct.totalQuantity = totalQuantity;\r\n    //                 popularProduct.totalPrice = totalPrice;\r\n    //                 popularProduct.productName = product;\r\n    //             }\r\n    //\r\n    //\r\n    //         });\r\n    //\r\n    //\r\n    //     });\r\n    //     props.setDailyPopularProduct(popularProduct);\r\n    // }\r\n    //\r\n    //\r\n    //\r\n    // popularProductCalc();\r\n\r\n\r\n    let allCardsOfTotal = dailyTotals.map(oneDailyTotal =>{\r\n        return(\r\n            <div className=\"col\">\r\n                <ItemsSold icon={oneDailyTotal.icon} color={oneDailyTotal.color} name={oneDailyTotal.name} unit={oneDailyTotal.unit} value={oneDailyTotal.value} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2 mt-4\">\r\n                    <h3>Choose Date</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-8 \">\r\n                    <ReactDatePicker changeDailyDetailsInvoices={props.changeDailyDetailsInvoices}\r\n                                     changeDailyStockUp={props.changeDailyStockUp}\r\n                                     changeDailyInvoices={props.changeDailyInvoices}\r\n                                     changeDailyResourcesReports={props.changeDailyResourcesReports}\r\n                                     changeDailyMiscellaneous={props.changeDailyMiscellaneous}\r\n                    />\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <DairyVisits/>*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <ItemsSold otherDailyReports={props.otherDailyReports} />*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <DairyEarning otherDailyReports={props.otherDailyReports} />*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <ItemsSold/>*/}\r\n                {/*</div>*/}\r\n                {allCardsOfTotal}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col\">\r\n                    <ProductSold dailyInvoices={props.dailyInvoices}\r\n                                 addToCart={props.addToCart}\r\n                                 removeToCart={props.removeToCart}\r\n                                 waiters={props.waiters}\r\n                                 cart={props.cart}\r\n                                 setDailyPopularProduct={props.setDailyPopularProduct}\r\n                                 dailyInvoiceDetails={props.dailyInvoiceDetails}\r\n                                 uploadMiscellaneous={props.uploadMiscellaneous}\r\n                                 pushInvoice={props.pushInvoice}\r\n                                 products={props.products}\r\n                                 changeDailyInvoices={props.changeDailyInvoices}/>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    <DailyMiscellaneousComponent dailyMiscellaneous={props.dailyMiscellaneous}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col\">\r\n                    <DailyStockUp\r\n                        dailyStockUp={props.dailyStockUp}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    <DailyResourcesReportsComponent dailyResourcesReports={props.dailyResourcesReports} />\r\n                </div>\r\n            </div>\r\n\r\n            {/*<div className=\"row\">*/}\r\n            {/*    <div className=\"col-12\">*/}\r\n            {/*        <div className=\"container\">*/}\r\n            {/*            <div className=\"row\">*/}\r\n            {/*                <div className=\"col-12\">*/}\r\n            {/*                    <DairyUsage popularProduct={props.otherDailyReports.popularProduct} />*/}\r\n            {/*                </div>*/}\r\n            {/*            </div>*/}\r\n            {/*        </div>*/}\r\n\r\n            {/*    </div>*/}\r\n\r\n            {/*</div>*/}\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n\r\n\r\n                    <DailyInvoicesComponent\r\n                        dailyInvoices={props.dailyInvoices}\r\n                        addToCart={props.addToCart}\r\n                        removeToCart={props.removeToCart}\r\n                        waiters={props.waiters}\r\n                        cart={props.cart}\r\n                        uploadMiscellaneous={props.uploadMiscellaneous}\r\n                        pushInvoice={props.pushInvoice}\r\n                        products={props.products}\r\n                        changeDailyInvoices={props.changeDailyInvoices}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\FlippingCard.js",["306","307","308"],"import React, {useState, useEffect} from \"react\";\r\nimport '../../css/Manager.css';\r\nimport {Form, FormGroup, Input, Label} from \"reactstrap\";\r\nimport {setImage} from \"../../functions/setImage\";\r\n\r\nconst FlippingCard = ({\r\n                          increaseStock, oneProduct, showPriceField = true,\r\n                          opName, handleSaving,\r\n                          behaviors, changeFlippingCardSaveBehavior\r\n                      }) => {\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n\r\n            <BlogCard oneProduct={oneProduct}\r\n                      behaviors={behaviors}\r\n                      opName={opName}\r\n                      handleSaving={handleSaving}\r\n                      changeFlippingCardSaveBehavior={changeFlippingCardSaveBehavior}\r\n                      increaseStock={increaseStock}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BlogCard = (props) => {\r\n\r\n    const [flipped, setFlipped] = useState(false);\r\n\r\n    let flipEnter = () => {\r\n        setFlipped(true);\r\n\r\n    }\r\n    let flipLeave = () =>{\r\n        setFlipped(false);\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div onMouseEnter={flipEnter} onMouseLeave={flipLeave} className={\"card-container\" + (flipped ? \" flipped\" : \"\")}>\r\n\r\n            <Front  opName={props.opName} oneProduct={props.oneProduct}/>\r\n\r\n            <Back oneProduct={props.oneProduct}\r\n                  behaviors={props.behaviors}\r\n                  opName={props.opName}\r\n                  handleSaving={props.handleSaving}\r\n                  changeFlippingCardSaveBehavior={props.changeFlippingCardSaveBehavior}\r\n                  increaseStock={props.increaseStock}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst Front = ({oneProduct, opName}) => {\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <ImageArea  opName={opName} oneProduct={oneProduct}/>\r\n            <MainArea  opName={opName} oneProduct={oneProduct}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Back = (props) => {\r\n    const [qtyN, setQtyN] = useState('');\r\n    const [unitPrice, setUnitPrice] = useState(0);\r\n    const [behavior, setBehavior] = useState('enable');\r\n    const [errorM, setErrorM] = useState(null);\r\n    const [comesFrom, setComesFrom] = useState('suppler');\r\n    const [goesTo, setGoesTo] = useState('kitchen');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [soldPrice, setSoldPrice] = useState(0);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === 'qtyN') {\r\n            setQtyN(value);\r\n        } else if (name === 'unitPrice') {\r\n            setUnitPrice(value);\r\n        } else if (name === 'goesTo') {\r\n            setGoesTo(value);\r\n        } else if (name === 'comesFrom') {\r\n            setComesFrom(value);\r\n        } else if (name === 'soldPrice') {\r\n            setSoldPrice(value);\r\n        }\r\n    }\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n        setBehavior('loading');\r\n        setTimeout(() => {\r\n            setBehavior('enable');\r\n        }, 2000);\r\n        if (props.opName === 'dailyUsage') {\r\n            props.handleSaving({\r\n                id: props.oneProduct.id,\r\n                unitPrice: unitPrice,\r\n                quantity: qtyN,\r\n                to: goesTo,\r\n                name: props.oneProduct.name\r\n            });\r\n        } else if (props.opName === 'resources') {\r\n            props.handleSaving({\r\n                id: props.oneProduct.id,\r\n                unitPrice: unitPrice,\r\n                quantity: qtyN,\r\n                from: comesFrom,\r\n                name: props.oneProduct.name\r\n            });\r\n            // props.increaseStock(props.oneProduct.id, unitPrice,qtyN,\"suppler\", props.oneProduct.name );\r\n        } else if (props.opName === 'products') {\r\n            props.handleSaving({\r\n                id: props.oneProduct.id,\r\n                buyUnitPrice: unitPrice,\r\n                category: props.oneProduct.category,\r\n                description: props.oneProduct.description,\r\n                featured: true,\r\n                image: props.oneProduct.image,\r\n                marched: props.oneProduct.marched,\r\n                name: props.oneProduct.name,\r\n                price: soldPrice,\r\n                quantity: qtyN\r\n            });\r\n        }\r\n    }\r\n    let additionalField = null;\r\n    let otherField;\r\n    if (props.opName === 'products') {\r\n        // setQtyN(props.oneProduct.quantity);\r\n        // setSoldPrice(props.oneProduct.price);\r\n        // setUnitPrice(props.oneProduct.buyUnitPrice);\r\n\r\n        additionalField = <FormGroup className=\"\">\r\n\r\n            <Label className=\"\"> Sold Price </Label>\r\n            <Input onChange={handleChange} value={soldPrice} name=\"soldPrice\" className=\"\" type={\"number\"}/>\r\n        </FormGroup>\r\n        otherField = <React.Fragment>\r\n            <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> unit price </Label>\r\n                <Input disabled={(disabled) ? \"disabled\" : \"\"} onChange={handleChange} value={unitPrice}\r\n                       name=\"unitPrice\" className=\"\" type={\"number\"}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label className=\"\">quantity</Label>\r\n                <Input disabled={(disabled) ? \"disabled\" : \"\"} onChange={handleChange} value={qtyN} name=\"qtyN\"\r\n                       className=\"\" type=\"number\"/>\r\n            </FormGroup>\r\n        </React.Fragment>\r\n    } else {\r\n        otherField = <React.Fragment>\r\n\r\n            <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> unit price </Label>\r\n                <Input onChange={handleChange} value={unitPrice} name=\"unitPrice\" className=\"\" type={\"number\"}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label className=\"\">quantity</Label>\r\n                <Input onChange={handleChange} value={qtyN} name=\"qtyN\" className=\"\" type=\"number\"/>\r\n            </FormGroup>\r\n        </React.Fragment>\r\n\r\n        if (props.opName === 'dailyUsage') {\r\n            additionalField = <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> goes To </Label>\r\n                <Input onChange={handleChange} value={goesTo} name=\"goesTo\" className=\"\" type={\"text\"}/>\r\n            </FormGroup>;\r\n        } else if (props.opName === 'resources') {\r\n            additionalField = <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> comes From </Label>\r\n                <Input onChange={handleChange} value={comesFrom} name=\"comesFrom\" className=\"\" type={\"text\"}/>\r\n            </FormGroup>;\r\n        }\r\n    }\r\n\r\n    let button = null;\r\n\r\n    if (behavior === 'loading') {\r\n        button = <button type=\"button\" className=\"btn btn-warning\"><span className=\"fa fa-spinner\"></span></button>\r\n    } else if (behavior === 'enable') {\r\n        button = <button type=\"button\" onClick={handleSave} className=\"btn btn-warning\"> Save</button>;\r\n    }\r\n\r\n    // if(props.behaviors.flippingCardSaveButton === 'failed'){\r\n    //     setErrorM('error occur while saving');\r\n    //     props.changeFlippingCardSaveBehavior('enable');\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className=\"back\">\r\n            <h2 className=\"bg-warning d-flex justify-content-center pb-2\"> {props.oneProduct.name} </h2>\r\n            <span className=\"text-danger\"> {errorM}</span>\r\n            <Form>\r\n\r\n\r\n                {otherField}\r\n                {additionalField}\r\n                <FormGroup>\r\n                    {button}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet ImageArea = ({oneProduct}) => {\r\n    useEffect(() => {\r\n        setImage(oneProduct.image);\r\n\r\n      });\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            <img className={\"card-image \" + oneProduct.image} src=''></img>\r\n            <h1 className=\"title\">{oneProduct.name}</h1>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nvar MainArea = ({oneProduct, opName}) => {\r\n\r\n    let field1 = null;\r\n    let field2 = null;\r\n    if(opName==='dailyUsage'){\r\n        field1 =<React.Fragment>\r\n            <div className={\"col-6\"}>\r\n            <Label className=\"\"> total Price </Label>\r\n        </div>\r\n        <div className=\"col-5 offset-1\">\r\n            <span className=\"badge badge-warning rounded\"> {oneProduct.totalCost}</span>\r\n        </div>\r\n        </React.Fragment>\r\n\r\n        field2 = <React.Fragment>\r\n            <div className={\"col-6\"}>\r\n                <Label className=\"\"> Quantity Left </Label>\r\n            </div>\r\n            <div className=\"col-5 offset-1\">\r\n                <span className=\"badge badge-warning rounded\"> {oneProduct.stockQuantity} </span>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    }else if(opName==='resources'){\r\n        field1 =<React.Fragment>\r\n            <div className={\"col-6\"}>\r\n                <Label className=\"\"> total Price </Label>\r\n            </div>\r\n            <div className=\"col-5 offset-1\">\r\n                <span className=\"badge badge-warning rounded\"> {oneProduct.totalCost}</span>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n        field2 = <React.Fragment>\r\n            <div className={\"col-6\"}>\r\n                <Label className=\"\"> Quantity Left </Label>\r\n            </div>\r\n            <div className=\"col-5 offset-1\">\r\n                <span className=\"badge badge-warning rounded\"> {oneProduct.stockQuantity} </span>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n    }else if(opName==='products'){\r\n        field1 =<React.Fragment>\r\n            <div className={\"col-6\"}>\r\n                <Label className=\"\">  Price </Label>\r\n            </div>\r\n            <div className=\"col-5 offset-1\">\r\n                <span className=\"badge badge-warning rounded\"> {oneProduct.price}</span>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n        field2 = <React.Fragment>\r\n            <div className={\"col-6\"}>\r\n                <Label className=\"\"> Quantity Left </Label>\r\n            </div>\r\n            <div className=\"col-5 offset-1\">\r\n                <span className=\"badge badge-warning rounded\"> {oneProduct.quantity} </span>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main-area\">\r\n            <div className=\"blog-post\">\r\n                <div className=\" row date\">\r\n                    {field1}\r\n\r\n                </div>\r\n                <div className=\" row date \">\r\n                    {field2}\r\n\r\n                </div>\r\n                <p className=\"read-more\">Hover to Edit...</p>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlippingCard;","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\reports\\ChooseMonth.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DailyStockUp.js",["309","310","311"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyStockUp = (props) => {\r\n    const [productToDisplay, setProductToDisplay] = useState(props.dailyStockUp.dailyStockUp);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"dailyStockUp is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((oneStockUp, index) => {\r\n            let totalPrice = parseInt(oneStockUp.quantity) * parseInt(oneStockUp.unitPrice);\r\n            return (\r\n                <tr key={oneStockUp.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{oneStockUp.resourceName}</td>\r\n                    <td>{oneStockUp.quantity}</td>\r\n                    <td> {oneStockUp.unitPrice}</td>\r\n                    <td>{totalPrice}</td>\r\n                    <td> {oneStockUp.from}</td>\r\n                    <td> {oneStockUp.newStockQuantity} </td>\r\n                    <td> --</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Stock Up </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>Resource name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th> Unit price</th>\r\n                                        <th>Total price</th>\r\n                                        <th> From</th>\r\n                                        <th> Stock comes</th>\r\n                                        <th> Created At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyStockUp\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyStockUp\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>Resource name</th>\r\n                                                            <th>Quantity</th>\r\n                                                            <th> Unit price</th>\r\n                                                            <th>Total price</th>\r\n                                                            <th> From</th>\r\n                                                            <th> Stock comes</th>\r\n                                                            <th> Created At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyStockUp;\r\n","C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\Reports\\DailyResourcesReportsComponent.js",["312","313"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\marching\\MarchResourceCard.js",["314","315"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\DishdetailComponent.js",["316","317","318"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\ContactComponent.js",["319","320","321","322","323","324","325"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\ActionCreators.js",["326","327"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\collections\\invoices.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\dailyStockUp.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\redux\\others\\dailyInvoices.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\shared\\ProductsCategories.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\homepagecomponents\\FistScreen.js",["328","329"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Receptions\\UIcomponents\\NonPaidInvoicesComponent.js",["330","331","332"],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Manager\\UIcomponents\\ItemsSold.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\cartComponent\\TableAddedCarts.js",[],"C:\\Users\\pater\\Documents\\GitHub\\resto247\\src\\components\\Navigation.js",["333","334","335","336"],{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"337","replacedBy":"341"},{"ruleId":"339","replacedBy":"342"},{"ruleId":"343","severity":1,"message":"344","line":2,"column":9,"nodeType":"345","messageId":"346","endLine":2,"endColumn":12},{"ruleId":"343","severity":1,"message":"347","line":2,"column":14,"nodeType":"345","messageId":"346","endLine":2,"endColumn":17},{"ruleId":"343","severity":1,"message":"348","line":2,"column":19,"nodeType":"345","messageId":"346","endLine":2,"endColumn":26},{"ruleId":"343","severity":1,"message":"349","line":2,"column":28,"nodeType":"345","messageId":"346","endLine":2,"endColumn":35},{"ruleId":"343","severity":1,"message":"350","line":2,"column":37,"nodeType":"345","messageId":"346","endLine":2,"endColumn":40},{"ruleId":"343","severity":1,"message":"351","line":2,"column":42,"nodeType":"345","messageId":"346","endLine":2,"endColumn":52},{"ruleId":"343","severity":1,"message":"352","line":2,"column":54,"nodeType":"345","messageId":"346","endLine":2,"endColumn":61},{"ruleId":"343","severity":1,"message":"353","line":3,"column":8,"nodeType":"345","messageId":"346","endLine":3,"endColumn":18},{"ruleId":"343","severity":1,"message":"354","line":14,"column":12,"nodeType":"345","messageId":"346","endLine":14,"endColumn":23},{"ruleId":"343","severity":1,"message":"355","line":16,"column":11,"nodeType":"345","messageId":"346","endLine":16,"endColumn":17},{"ruleId":"343","severity":1,"message":"356","line":36,"column":11,"nodeType":"345","messageId":"346","endLine":36,"endColumn":15},{"ruleId":"343","severity":1,"message":"357","line":9,"column":7,"nodeType":"345","messageId":"346","endLine":9,"endColumn":15},{"ruleId":"358","severity":1,"message":"359","line":44,"column":41,"nodeType":"360","endLine":49,"endColumn":43},{"ruleId":"358","severity":1,"message":"361","line":65,"column":41,"nodeType":"360","endLine":73,"endColumn":43},{"ruleId":"358","severity":1,"message":"362","line":89,"column":45,"nodeType":"360","endLine":90,"endColumn":93},{"ruleId":"358","severity":1,"message":"359","line":45,"column":41,"nodeType":"360","endLine":51,"endColumn":43},{"ruleId":"358","severity":1,"message":"359","line":67,"column":41,"nodeType":"360","endLine":73,"endColumn":43},{"ruleId":"358","severity":1,"message":"359","line":89,"column":41,"nodeType":"360","endLine":98,"endColumn":43},{"ruleId":"358","severity":1,"message":"359","line":117,"column":41,"nodeType":"360","endLine":122,"endColumn":43},{"ruleId":"358","severity":1,"message":"361","line":138,"column":41,"nodeType":"360","endLine":146,"endColumn":43},{"ruleId":"358","severity":1,"message":"361","line":162,"column":41,"nodeType":"360","endLine":170,"endColumn":43},{"ruleId":"358","severity":1,"message":"362","line":186,"column":45,"nodeType":"360","endLine":187,"endColumn":93},{"ruleId":"343","severity":1,"message":"363","line":5,"column":9,"nodeType":"345","messageId":"346","endLine":5,"endColumn":16},{"ruleId":"343","severity":1,"message":"364","line":7,"column":10,"nodeType":"345","messageId":"346","endLine":7,"endColumn":22},{"ruleId":"343","severity":1,"message":"365","line":3,"column":5,"nodeType":"345","messageId":"346","endLine":3,"endColumn":11},{"ruleId":"343","severity":1,"message":"366","line":6,"column":5,"nodeType":"345","messageId":"346","endLine":6,"endColumn":13},{"ruleId":"367","severity":1,"message":"368","line":134,"column":37,"nodeType":"369","messageId":"370","endLine":134,"endColumn":39},{"ruleId":"343","severity":1,"message":"371","line":43,"column":25,"nodeType":"345","messageId":"346","endLine":43,"endColumn":39},{"ruleId":"343","severity":1,"message":"355","line":84,"column":11,"nodeType":"345","messageId":"346","endLine":84,"endColumn":17},{"ruleId":"343","severity":1,"message":"371","line":40,"column":25,"nodeType":"345","messageId":"346","endLine":40,"endColumn":39},{"ruleId":"343","severity":1,"message":"355","line":81,"column":11,"nodeType":"345","messageId":"346","endLine":81,"endColumn":17},{"ruleId":"343","severity":1,"message":"372","line":8,"column":30,"nodeType":"345","messageId":"346","endLine":8,"endColumn":49},{"ruleId":"343","severity":1,"message":"373","line":9,"column":22,"nodeType":"345","messageId":"346","endLine":9,"endColumn":33},{"ruleId":"343","severity":1,"message":"374","line":59,"column":12,"nodeType":"345","messageId":"346","endLine":59,"endColumn":20},{"ruleId":"343","severity":1,"message":"375","line":59,"column":22,"nodeType":"345","messageId":"346","endLine":59,"endColumn":33},{"ruleId":"343","severity":1,"message":"371","line":62,"column":25,"nodeType":"345","messageId":"346","endLine":62,"endColumn":39},{"ruleId":"343","severity":1,"message":"355","line":102,"column":11,"nodeType":"345","messageId":"346","endLine":102,"endColumn":17},{"ruleId":"376","severity":1,"message":"377","line":6,"column":5,"nodeType":"378","messageId":"379","endLine":18,"endColumn":6},{"ruleId":"343","severity":1,"message":"380","line":1,"column":56,"nodeType":"345","messageId":"346","endLine":1,"endColumn":61},{"ruleId":"343","severity":1,"message":"381","line":1,"column":63,"nodeType":"345","messageId":"346","endLine":1,"endColumn":68},{"ruleId":"343","severity":1,"message":"382","line":3,"column":9,"nodeType":"345","messageId":"346","endLine":3,"endColumn":26},{"ruleId":"383","severity":1,"message":"384","line":13,"column":50,"nodeType":"385","messageId":"386","endLine":13,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":18,"column":49,"nodeType":"385","messageId":"386","endLine":18,"endColumn":51},{"ruleId":"383","severity":1,"message":"384","line":22,"column":55,"nodeType":"385","messageId":"386","endLine":22,"endColumn":57},{"ruleId":"343","severity":1,"message":"387","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":18},{"ruleId":"343","severity":1,"message":"388","line":70,"column":20,"nodeType":"345","messageId":"346","endLine":70,"endColumn":29},{"ruleId":"343","severity":1,"message":"389","line":73,"column":22,"nodeType":"345","messageId":"346","endLine":73,"endColumn":33},{"ruleId":"390","severity":1,"message":"391","line":225,"column":13,"nodeType":"360","endLine":225,"endColumn":70},{"ruleId":"343","severity":1,"message":"372","line":8,"column":30,"nodeType":"345","messageId":"346","endLine":8,"endColumn":49},{"ruleId":"343","severity":1,"message":"371","line":42,"column":25,"nodeType":"345","messageId":"346","endLine":42,"endColumn":39},{"ruleId":"343","severity":1,"message":"355","line":83,"column":11,"nodeType":"345","messageId":"346","endLine":83,"endColumn":17},{"ruleId":"343","severity":1,"message":"371","line":39,"column":25,"nodeType":"345","messageId":"346","endLine":39,"endColumn":39},{"ruleId":"343","severity":1,"message":"355","line":80,"column":11,"nodeType":"345","messageId":"346","endLine":80,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":55,"column":29,"nodeType":"360","endLine":55,"endColumn":127},{"ruleId":"394","severity":1,"message":"395","line":55,"column":64,"nodeType":"369","messageId":"396","endLine":55,"endColumn":65},{"ruleId":"358","severity":1,"message":"397","line":64,"column":37,"nodeType":"360","endLine":65,"endColumn":78},{"ruleId":"358","severity":1,"message":"359","line":80,"column":37,"nodeType":"360","endLine":85,"endColumn":39},{"ruleId":"358","severity":1,"message":"398","line":103,"column":37,"nodeType":"360","endLine":104,"endColumn":90},{"ruleId":"358","severity":1,"message":"359","line":78,"column":37,"nodeType":"360","endLine":84,"endColumn":39},{"ruleId":"358","severity":1,"message":"359","line":100,"column":37,"nodeType":"360","endLine":106,"endColumn":39},{"ruleId":"358","severity":1,"message":"359","line":122,"column":37,"nodeType":"360","endLine":128,"endColumn":39},{"ruleId":"358","severity":1,"message":"359","line":145,"column":37,"nodeType":"360","endLine":151,"endColumn":39},{"ruleId":"358","severity":1,"message":"362","line":167,"column":45,"nodeType":"360","endLine":169,"endColumn":47},{"ruleId":"358","severity":1,"message":"397","line":175,"column":37,"nodeType":"360","endLine":176,"endColumn":78},{"ruleId":"358","severity":1,"message":"398","line":185,"column":37,"nodeType":"360","endLine":187,"endColumn":82},{"ruleId":"343","severity":1,"message":"399","line":2,"column":25,"nodeType":"345","messageId":"346","endLine":2,"endColumn":40},{"ruleId":"343","severity":1,"message":"400","line":3,"column":8,"nodeType":"345","messageId":"346","endLine":3,"endColumn":16},{"ruleId":"343","severity":1,"message":"365","line":2,"column":9,"nodeType":"345","messageId":"346","endLine":2,"endColumn":15},{"ruleId":"343","severity":1,"message":"401","line":13,"column":19,"nodeType":"345","messageId":"346","endLine":13,"endColumn":27},{"ruleId":"343","severity":1,"message":"372","line":11,"column":30,"nodeType":"345","messageId":"346","endLine":11,"endColumn":49},{"ruleId":"343","severity":1,"message":"371","line":56,"column":25,"nodeType":"345","messageId":"346","endLine":56,"endColumn":39},{"ruleId":"343","severity":1,"message":"355","line":97,"column":11,"nodeType":"345","messageId":"346","endLine":97,"endColumn":17},{"ruleId":"343","severity":1,"message":"402","line":9,"column":5,"nodeType":"345","messageId":"346","endLine":9,"endColumn":17},{"ruleId":"343","severity":1,"message":"403","line":10,"column":5,"nodeType":"345","messageId":"346","endLine":10,"endColumn":17},{"ruleId":"343","severity":1,"message":"404","line":11,"column":5,"nodeType":"345","messageId":"346","endLine":11,"endColumn":19},{"ruleId":"343","severity":1,"message":"405","line":24,"column":5,"nodeType":"345","messageId":"346","endLine":24,"endColumn":25},"no-native-reassign",["406"],"no-negated-in-lhs",["407"],["406"],["407"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Row' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'classnames' is defined but never used.","'cathegories' is assigned a value but never used.","'toggle' is assigned a value but never used.","'menu' is assigned a value but never used.","'isNumber' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'Loading' is defined but never used.","'RenderLeader' is defined but never used.","'Button' is defined but never used.","'CardText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setItemToFetch' is assigned a value but never used.","'setProductToDisplay' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Input' is defined but never used.","'Label' is defined but never used.","'getResourceWithId' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DairyUsage' is defined but never used.","'setErrorM' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'firebaseStorage' is defined but never used.","'firebase' is defined but never used.","'setItems' is assigned a value but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]