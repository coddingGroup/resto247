[{"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\SearchFilterIn.js":"1","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionCreators.js":"2","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\configureStore.js":"3","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\MainComponent.js":"4","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\outOfStockProducts.js":"5","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\Search.js":"6","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\index.js":"7","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\MenuComponent.js":"8","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\ContactComponent.js":"9","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Login.js":"10","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HomeComponent.js":"11","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\products.js":"12","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\comments.js":"13","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\FooterComponent.js":"14","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\recommanded.js":"15","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Navigation.js":"16","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\AboutComponent.js":"17","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\DishdetailComponent.js":"18","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Forms.js":"19","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WiterHome.js":"20","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionTypes.js":"21","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\LoadingComponent.js":"22","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HeaderComponent.js":"23","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\baseUrl.js":"24","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\dishes.js":"25","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\ProductsCategories.js":"26","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\HotDeal.js":"27","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\FistScreen.js":"28","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\FlippingCard.js":"29","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\hotDealData.js":"30","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\carouselHome.js":"31","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\SearchOutputDisplay.js":"32","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Users.js":"33","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\hotdeals.js":"34","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard.js":"35","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\HotDeal.js":"36","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ReactDatePicker.js":"37","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ItemsSold.js":"38","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ReactInfiniteScroll.js":"39","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\reportWebVitals.js":"40","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard2.js":"41","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\FilterMenu.js":"42","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\CicleMenu.js":"43","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ScrollView.js":"44","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\SignUp.js":"45","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\AddedCart.js":"46","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\TableAddedCarts.js":"47","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Cart.js":"48","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\TabsMenu.js":"49","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard3.js":"50","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\PaginationComponent.js":"51","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Main.js":"52","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\SideNavigation.js":"53","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\GoogleMap.js":"54","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\AllProducts.js":"55","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WaiterCategoryButton.js":"56","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ComponentToPrint.js":"57","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\HorizontalOutOfStock.js":"58","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\IncreaseProduct.js":"59","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\StockManagement.js":"60","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\MarchProductToResources.js":"61","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchProductsCard.js":"62","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\ModalTogglerButton.js":"63","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\Dashboard.js":"64","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\resources.js":"65","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ToggleButton.js":"66","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DairyUsage.js":"67","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\config.js":"68","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\auth.js":"69","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\App.js":"70","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\firebase.js":"71","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\userCollection.js":"72","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\behaviors.js":"73","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\waiters.js":"74","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\invoices.js":"75","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\ProductSold.js":"76","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\getSoldProductDate.js":"77","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyInvoices.js":"78","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionCreator2.js":"79","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\setImage.js":"80","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyInvoicesComponent.js":"81","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyInvoiceDetails.js":"82","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyStockUp.js":"83","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyStockUp.js":"84","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyMiscellaneousComponent.js":"85","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyResourcesReportsComponent.js":"86","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\makeInvoicePaid.js":"87","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\NonPaidInvoicesComponent.js":"88","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyMiscellaneous.js":"89","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\DairyEarning.js":"90","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\otherDailyReports.js":"91","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\miscellaneous.js":"92"},{"size":3602,"mtime":1619671625354,"results":"93","hashOfConfig":"94"},{"size":43632,"mtime":1619682781671,"results":"95","hashOfConfig":"94"},{"size":2527,"mtime":1619717135029,"results":"96","hashOfConfig":"94"},{"size":17880,"mtime":1619755597749,"results":"97","hashOfConfig":"94"},{"size":727,"mtime":1619276634829,"results":"98","hashOfConfig":"94"},{"size":1385,"mtime":1619276634635,"results":"99","hashOfConfig":"94"},{"size":724,"mtime":1619276634746,"results":"100","hashOfConfig":"94"},{"size":2058,"mtime":1619671396937,"results":"101","hashOfConfig":"94"},{"size":11226,"mtime":1619674746614,"results":"102","hashOfConfig":"94"},{"size":5461,"mtime":1619667330593,"results":"103","hashOfConfig":"94"},{"size":7311,"mtime":1619765039447,"results":"104","hashOfConfig":"94"},{"size":813,"mtime":1619667329665,"results":"105","hashOfConfig":"94"},{"size":642,"mtime":1619276634819,"results":"106","hashOfConfig":"94"},{"size":2987,"mtime":1619667329699,"results":"107","hashOfConfig":"94"},{"size":657,"mtime":1619276634836,"results":"108","hashOfConfig":"94"},{"size":9292,"mtime":1619721270994,"results":"109","hashOfConfig":"94"},{"size":5466,"mtime":1619667758399,"results":"110","hashOfConfig":"94"},{"size":8394,"mtime":1619667329186,"results":"111","hashOfConfig":"94"},{"size":935,"mtime":1619667329636,"results":"112","hashOfConfig":"94"},{"size":898,"mtime":1619717135243,"results":"113","hashOfConfig":"94"},{"size":6982,"mtime":1619753832161,"results":"114","hashOfConfig":"94"},{"size":259,"mtime":1619276634132,"results":"115","hashOfConfig":"94"},{"size":4928,"mtime":1619667331642,"results":"116","hashOfConfig":"94"},{"size":50,"mtime":1619276634858,"results":"117","hashOfConfig":"94"},{"size":7174,"mtime":1619276634872,"results":"118","hashOfConfig":"94"},{"size":314,"mtime":1619276634851,"results":"119","hashOfConfig":"94"},{"size":2517,"mtime":1617705627985,"results":"120","hashOfConfig":"94"},{"size":2097,"mtime":1619667329716,"results":"121","hashOfConfig":"94"},{"size":8775,"mtime":1619667330611,"results":"122","hashOfConfig":"94"},{"size":1260,"mtime":1619276634877,"results":"123","hashOfConfig":"94"},{"size":526,"mtime":1619276634860,"results":"124","hashOfConfig":"94"},{"size":440,"mtime":1619276634329,"results":"125","hashOfConfig":"94"},{"size":788,"mtime":1618562140316,"results":"126","hashOfConfig":"94"},{"size":631,"mtime":1619276634825,"results":"127","hashOfConfig":"94"},{"size":1181,"mtime":1619667332341,"results":"128","hashOfConfig":"94"},{"size":3165,"mtime":1619276634492,"results":"129","hashOfConfig":"94"},{"size":2241,"mtime":1619695197374,"results":"130","hashOfConfig":"94"},{"size":1272,"mtime":1619750364192,"results":"131","hashOfConfig":"94"},{"size":1985,"mtime":1619675117962,"results":"132","hashOfConfig":"94"},{"size":415,"mtime":1619276634844,"results":"133","hashOfConfig":"94"},{"size":2420,"mtime":1618214464796,"results":"134","hashOfConfig":"94"},{"size":555,"mtime":1619667330860,"results":"135","hashOfConfig":"94"},{"size":32535,"mtime":1619673312479,"results":"136","hashOfConfig":"94"},{"size":1311,"mtime":1619276634540,"results":"137","hashOfConfig":"94"},{"size":11918,"mtime":1619667329228,"results":"138","hashOfConfig":"94"},{"size":426,"mtime":1619276634571,"results":"139","hashOfConfig":"94"},{"size":8792,"mtime":1619709432971,"results":"140","hashOfConfig":"94"},{"size":1493,"mtime":1619276634808,"results":"141","hashOfConfig":"94"},{"size":8805,"mtime":1619720633636,"results":"142","hashOfConfig":"94"},{"size":3717,"mtime":1619667330073,"results":"143","hashOfConfig":"94"},{"size":1750,"mtime":1619276634508,"results":"144","hashOfConfig":"94"},{"size":3925,"mtime":1619592667671,"results":"145","hashOfConfig":"94"},{"size":4326,"mtime":1619667329256,"results":"146","hashOfConfig":"94"},{"size":1162,"mtime":1619276634589,"results":"147","hashOfConfig":"94"},{"size":2949,"mtime":1619276634405,"results":"148","hashOfConfig":"94"},{"size":595,"mtime":1619276634555,"results":"149","hashOfConfig":"94"},{"size":677,"mtime":1619020329624,"results":"150","hashOfConfig":"94"},{"size":1776,"mtime":1619370211893,"results":"151","hashOfConfig":"94"},{"size":3015,"mtime":1619668991588,"results":"152","hashOfConfig":"94"},{"size":4270,"mtime":1619428689573,"results":"153","hashOfConfig":"94"},{"size":3166,"mtime":1619667329347,"results":"154","hashOfConfig":"94"},{"size":1775,"mtime":1619667329117,"results":"155","hashOfConfig":"94"},{"size":1717,"mtime":1619083354513,"results":"156","hashOfConfig":"94"},{"size":8345,"mtime":1619762527432,"results":"157","hashOfConfig":"94"},{"size":823,"mtime":1619667331462,"results":"158","hashOfConfig":"94"},{"size":1836,"mtime":1619276634553,"results":"159","hashOfConfig":"94"},{"size":892,"mtime":1619667332695,"results":"160","hashOfConfig":"94"},{"size":352,"mtime":1619276634732,"results":"161","hashOfConfig":"94"},{"size":1450,"mtime":1619276634817,"results":"162","hashOfConfig":"94"},{"size":641,"mtime":1619276634004,"results":"163","hashOfConfig":"94"},{"size":426,"mtime":1619667331171,"results":"164","hashOfConfig":"94"},{"size":807,"mtime":1619338392724,"results":"165","hashOfConfig":"94"},{"size":621,"mtime":1619667331015,"results":"166","hashOfConfig":"94"},{"size":628,"mtime":1619667332675,"results":"167","hashOfConfig":"94"},{"size":1366,"mtime":1619667329215,"results":"168","hashOfConfig":"94"},{"size":9219,"mtime":1619761523565,"results":"169","hashOfConfig":"94"},{"size":0,"mtime":1619548272162,"results":"170","hashOfConfig":"94"},{"size":678,"mtime":1619604254547,"results":"171","hashOfConfig":"94"},{"size":9670,"mtime":1619755676359,"results":"172","hashOfConfig":"94"},{"size":991,"mtime":1619519194484,"results":"173","hashOfConfig":"94"},{"size":10093,"mtime":1619667330136,"results":"174","hashOfConfig":"94"},{"size":1036,"mtime":1619667329361,"results":"175","hashOfConfig":"94"},{"size":676,"mtime":1619667329295,"results":"176","hashOfConfig":"94"},{"size":9120,"mtime":1619642137563,"results":"177","hashOfConfig":"94"},{"size":8787,"mtime":1619695484156,"results":"178","hashOfConfig":"94"},{"size":8692,"mtime":1619696855043,"results":"179","hashOfConfig":"94"},{"size":765,"mtime":1619714427610,"results":"180","hashOfConfig":"94"},{"size":9398,"mtime":1619720435723,"results":"181","hashOfConfig":"94"},{"size":721,"mtime":1619692550766,"results":"182","hashOfConfig":"94"},{"size":1322,"mtime":1619747848222,"results":"183","hashOfConfig":"94"},{"size":1350,"mtime":1619752560850,"results":"184","hashOfConfig":"94"},{"size":832,"mtime":1619667332017,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ksji1e",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"196"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"230"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"230"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"196"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"196"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"242"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"237"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"242"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"230"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"196"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"230"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\SearchFilterIn.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionCreators.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\configureStore.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\MainComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\outOfStockProducts.js",[],["399","400"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\Search.js",["401"],"import {Component} from 'react';\r\nimport '../../css/Some.css'\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.cleanSearch = this.cleanSearch.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.props.setText(event.target.value);\r\n        this.props.searchText();\r\n    }\r\n\r\n    cleanSearch(event) {\r\n        this.props.searchText('');\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        alert('A name was submitted: ' + this.state.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className={this.props.searchbar}>\r\n                        <input className=\"search_input\" type=\"text\" name=\"\"\r\n                               value={this.props.text} onChange={this.handleChange} onBlur={this.cleanSearch}\r\n                               onFocus={this.handleChange}\r\n                               placeholder=\"Search...\"/>\r\n                        <a href=\"#\" className=\"search_icon\"><i className=\"fa fa-search\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;",["402","403"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\index.js",[],["404","405"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\MenuComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\ContactComponent.js",["406","407","408","409","410","411","412"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Login.js",["413","414","415","416"],"import React, {Component} from 'react';\r\nimport {Button, Col, Label, Row} from \"reactstrap\";\r\nimport {Control, Errors, Form} from \"react-redux-form\";\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);  //regular expression   \r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n\r\n        this.props.postFeedback(values.firstname, values.lastname, values.email, values.contactType, values.telnum, values.agree);\r\n\r\n        console.log(\"Curent state is: \" + JSON.stringify(values));\r\n\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"bg-light shadow-lg mt-5 mb-5 \">\r\n\r\n\r\n                    <div className=\"p-5\">\r\n                        <div className=\"\">\r\n                            <Form model=\"login\" onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"email\" md={2}> Email </Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, validEmail\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email address'\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}> Password</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.password model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                          placeholder=\"Password\"\r\n                                                          className=\"form-control\"\r\n                                                          validators={{\r\n                                                              required,\r\n                                                              minLength: minLength(3),\r\n                                                              maxLength: maxLength(15)\r\n                                                          }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10, offset: 2}}>\r\n                                        <div className=\"form-check\">\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"/> {' '}\r\n                                            <strong>Remember password? </strong>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 7, offset: 5}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Login\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HomeComponent.js",["417","418","419","420","421","422","423","424","425","426","427"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\products.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\comments.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\FooterComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\recommanded.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Navigation.js",["428","429","430","431"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\AboutComponent.js",["432","433"],"import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Fade, Stagger} from \"react-animation-components\";\r\nimport {Loading} from \"./LoadingComponent\";\r\n\r\nfunction RenderLeader(props) {\r\n\r\n    return (\r\n\r\n        <Stagger in>\r\n            <Fade in>\r\n                <Media className=\"mt-5\" tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src=\"\" alt=\"\"/>\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>upcomming</Media>\r\n                        <p>upcomming later</p>\r\n                        <p>upcomming</p>\r\n                    </Media>\r\n                </Media>\r\n\r\n            </Fade>\r\n        </Stagger>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nconst AboutStatic = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par\r\n                        excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere\r\n                        else, it enjoys patronage from the A-list clientele in Hong Kong. Featuring four of the best\r\n                        three-star Michelin chefs in the world, you never know what will arrive on your plate the next\r\n                        time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain\r\n                        started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in\r\n                        a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction About(props) {\r\n    // const leaders = props.leaders.leaders.map((leader) => {\r\n    //     return (\r\n    //         <RenderLeader leader={leader}/>\r\n    //     );\r\n    // });\r\n    // if (props.leaders.isLoading) {\r\n    //     return (\r\n    //         <div className='container'>\r\n    //             <AboutStatic/>\r\n    //             <div className=\"row\">\r\n    //                 <Loading/>\r\n    //             </div>\r\n    //         </div>\r\n    //     );\r\n    // } else if (props.leaders.errMess) {\r\n    //     return (\r\n    //         <div className='container'>\r\n    //             <AboutStatic/>\r\n    //             <div className=\"row\">\r\n    //                 <h4>{props.leaders.errMess}</h4>\r\n    //             </div>\r\n    //         </div>\r\n    //     );\r\n    // } else\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <AboutStatic/>\r\n                <div className=\"row row-content\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            upcomming\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default About;    ","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\DishdetailComponent.js",["434","435","436"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Forms.js",[],["437","438"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WiterHome.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionTypes.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\LoadingComponent.js",[],["439","440"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HeaderComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\baseUrl.js",[],["441","442"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\dishes.js",[],["443","444"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\ProductsCategories.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\HotDeal.js",["445"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\FistScreen.js",["446"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\FlippingCard.js",["447","448","449"],"import React, {useState} from \"react\";\r\nimport '../../css/Manager.css';\r\nimport {Form, FormGroup, Input, Label} from \"reactstrap\";\r\nimport {setImage} from \"../../functions/setImage\";\r\n\r\nconst FlippingCard = ({\r\n                          increaseStock, oneProduct, showPriceField = true,\r\n                          opName, handleSaving,\r\n                          behaviors, changeFlippingCardSaveBehavior\r\n                      }) => {\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n\r\n            <BlogCard oneProduct={oneProduct}\r\n                      behaviors={behaviors}\r\n                      opName={opName}\r\n                      handleSaving={handleSaving}\r\n                      changeFlippingCardSaveBehavior={changeFlippingCardSaveBehavior}\r\n                      increaseStock={increaseStock}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst BlogCard = (props) => {\r\n\r\n    const [flipped, setFlipped] = useState(false);\r\n\r\n    let flip = () => {\r\n        setFlipped(!flipped);\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div onMouseEnter={flip} onMouseLeave={flip} className={\"card-container\" + (flipped ? \" flipped\" : \"\")}>\r\n\r\n            <Front oneProduct={props.oneProduct}/>\r\n\r\n            <Back oneProduct={props.oneProduct}\r\n                  behaviors={props.behaviors}\r\n                  opName={props.opName}\r\n                  handleSaving={props.handleSaving}\r\n                  changeFlippingCardSaveBehavior={props.changeFlippingCardSaveBehavior}\r\n                  increaseStock={props.increaseStock}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst Front = ({oneProduct}) => {\r\n\r\n    return (\r\n        <div className=\"front\">\r\n            <ImageArea oneProduct={oneProduct}/>\r\n            <MainArea oneProduct={oneProduct}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Back = (props) => {\r\n    const [qtyN, setQtyN] = useState('');\r\n    const [unitPrice, setUnitPrice] = useState(0);\r\n    const [behavior, setBehavior] = useState('enable');\r\n    const [errorM, setErrorM] = useState(null);\r\n    const [comesFrom, setComesFrom] = useState('suppler');\r\n    const [goesTo, setGoesTo] = useState('kitchen');\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [soldPrice, setSoldPrice] = useState(0);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault();\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === 'qtyN') {\r\n            setQtyN(value);\r\n        } else if (name === 'unitPrice') {\r\n            setUnitPrice(value);\r\n        } else if (name === 'goesTo') {\r\n            setGoesTo(value);\r\n        } else if (name === 'comesFrom') {\r\n            setComesFrom(value);\r\n        } else if (name === 'soldPrice') {\r\n            setSoldPrice(value);\r\n        }\r\n    }\r\n    const handleSave = (event) => {\r\n        event.preventDefault();\r\n        setBehavior('loading');\r\n        setTimeout(() => {\r\n            setBehavior('enable');\r\n        }, 2000);\r\n        if (props.opName === 'dailyUsage') {\r\n            props.handleSaving({\r\n                id: props.oneProduct.id,\r\n                unitPrice: unitPrice,\r\n                quantity: qtyN,\r\n                to: goesTo,\r\n                name: props.oneProduct.name\r\n            });\r\n        } else if (props.opName === 'resources') {\r\n            props.handleSaving({\r\n                id: props.oneProduct.id,\r\n                unitPrice: unitPrice,\r\n                quantity: qtyN,\r\n                from: comesFrom,\r\n                name: props.oneProduct.name\r\n            });\r\n            // props.increaseStock(props.oneProduct.id, unitPrice,qtyN,\"suppler\", props.oneProduct.name );\r\n        } else if (props.opName === 'products') {\r\n            props.handleSaving({\r\n                id: props.oneProduct.id,\r\n                buyUnitPrice: unitPrice,\r\n                category: props.oneProduct.category,\r\n                description: props.oneProduct.description,\r\n                featured: true,\r\n                image: props.oneProduct.image,\r\n                marched: props.oneProduct.marched,\r\n                name: props.oneProduct.name,\r\n                price: soldPrice,\r\n                quantity: qtyN\r\n            });\r\n        }\r\n    }\r\n    let additionalField = null;\r\n    let otherField;\r\n    if (props.opName === 'products') {\r\n        // setQtyN(props.oneProduct.quantity);\r\n        // setSoldPrice(props.oneProduct.price);\r\n        // setUnitPrice(props.oneProduct.buyUnitPrice);\r\n\r\n        additionalField = <FormGroup className=\"\">\r\n\r\n            <Label className=\"\"> Sold Price </Label>\r\n            <Input onChange={handleChange} value={soldPrice} name=\"soldPrice\" className=\"\" type={\"number\"}/>\r\n        </FormGroup>\r\n        otherField = <React.Fragment>\r\n            <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> unit price </Label>\r\n                <Input disabled={(disabled) ? \"disabled\" : \"\"} onChange={handleChange} value={unitPrice}\r\n                       name=\"unitPrice\" className=\"\" type={\"number\"}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label className=\"\">quantity</Label>\r\n                <Input disabled={(disabled) ? \"disabled\" : \"\"} onChange={handleChange} value={qtyN} name=\"qtyN\"\r\n                       className=\"\" type=\"number\"/>\r\n            </FormGroup>\r\n        </React.Fragment>\r\n    } else {\r\n        otherField = <React.Fragment>\r\n\r\n            <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> unit price </Label>\r\n                <Input onChange={handleChange} value={unitPrice} name=\"unitPrice\" className=\"\" type={\"number\"}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label className=\"\">quantity</Label>\r\n                <Input onChange={handleChange} value={qtyN} name=\"qtyN\" className=\"\" type=\"number\"/>\r\n            </FormGroup>\r\n        </React.Fragment>\r\n\r\n        if (props.opName === 'dailyUsage') {\r\n            additionalField = <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> goes To </Label>\r\n                <Input onChange={handleChange} value={goesTo} name=\"goesTo\" className=\"\" type={\"text\"}/>\r\n            </FormGroup>;\r\n        } else if (props.opName === 'resources') {\r\n            additionalField = <FormGroup className=\"\">\r\n\r\n                <Label className=\"\"> comes From </Label>\r\n                <Input onChange={handleChange} value={comesFrom} name=\"comesFrom\" className=\"\" type={\"text\"}/>\r\n            </FormGroup>;\r\n        }\r\n    }\r\n\r\n    let button = null;\r\n\r\n    if (behavior === 'loading') {\r\n        button = <button type=\"button\" className=\"btn btn-warning\"><span className=\"fa fa-spinner\"></span></button>\r\n    } else if (behavior === 'enable') {\r\n        button = <button type=\"button\" onClick={handleSave} className=\"btn btn-warning\"> Save</button>;\r\n    }\r\n\r\n    // if(props.behaviors.flippingCardSaveButton === 'failed'){\r\n    //     setErrorM('error occur while saving');\r\n    //     props.changeFlippingCardSaveBehavior('enable');\r\n    // }\r\n\r\n\r\n    return (\r\n        <div className=\"back\">\r\n            <h2 className=\"bg-warning d-flex justify-content-center pb-2\"> {props.oneProduct.name} </h2>\r\n            <span className=\"text-danger\"> {errorM}</span>\r\n            <Form>\r\n\r\n\r\n                {otherField}\r\n                {additionalField}\r\n                <FormGroup>\r\n                    {button}\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nlet ImageArea = ({oneProduct}) => {\r\n    setImage(oneProduct.image);\r\n\r\n    return (\r\n        <div className=\"image-container\">\r\n            <img className={\"card-image \" + oneProduct.image} src=''></img>\r\n            <h1 className=\"title\">{oneProduct.name}</h1>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nvar MainArea = ({oneProduct}) => {\r\n    return (\r\n        <div className=\"main-area\">\r\n            <div className=\"blog-post\">\r\n                <div className=\" row date\">\r\n                    <div className={\"col-6\"}>\r\n                        <Label className=\"\"> Price </Label>\r\n                    </div>\r\n                    <div className=\"col-5 offset-1\">\r\n                        <span className=\"badge badge-warning rounded\"> {oneProduct.price}</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\" row date \">\r\n                    <div className={\"col-6\"}>\r\n                        <Label className=\"\"> Quantity Left </Label>\r\n                    </div>\r\n                    <div className=\"col-5 offset-1\">\r\n                        <span className=\"badge badge-warning rounded\"> 20 </span>\r\n                    </div>\r\n\r\n                </div>\r\n                <p className=\"read-more\">Hover to Edit...</p>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlippingCard;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\hotDealData.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\carouselHome.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\SearchOutputDisplay.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Users.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\hotdeals.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\HotDeal.js",["450","451"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ReactDatePicker.js",["452"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ItemsSold.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ReactInfiniteScroll.js",["453"],"import React, {Component} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nclass ReactInfiniteScroll extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        // this.state = {\r\n        //     items2: arr,\r\n        //     hasMoreS:true,\r\n        //     itemsToFetch: lastIndex,\r\n        //     itemToStartOn: lastIndex\r\n        // };\r\n\r\n    }\r\n\r\n\r\n    fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n            // this.setState({\r\n            //\r\n            //     items2: [...this.state.items2,...this.funMenu()]\r\n            //\r\n            // });\r\n            let item2 = [...this.props.items2, ...this.props.funMenu()];\r\n\r\n            this.props.setItems2(item2);\r\n        }, 1500);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-2\">\r\n                <InfiniteScroll\r\n                    scrollableTarget={this.props.scrollableDiv}\r\n                    dataLength={this.props.items2.length}\r\n                    next={this.fetchMoreData}\r\n                    hasMore={this.props.hasMoreS}\r\n                    loader={<h4>Loading...</h4>}\r\n                    endMessage={\r\n                        <p> no more results </p>\r\n                    }\r\n\r\n                >\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.props.items2.map(\r\n                                (item, i) => {\r\n                                    return (\r\n                                        <span>{item}\r\n                                \r\n                                </span>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </InfiniteScroll>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactInfiniteScroll;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\reportWebVitals.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard2.js",["454","455"],"import { Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText,  CardImgOverlay, Button, Row, Col } from \"reactstrap\";\r\nimport { Loading } from \"../LoadingComponent\";\r\nimport { baseUrl } from \"../../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard2({ item, onClick }) {\r\n    //categorized cards\r\n\r\n    if (item.isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (item.errMess) {\r\n        return (\r\n            <h4> {item.errMess} </h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }} >\r\n                    <div className=\"m-2\"> \r\n                <Card inverse className=\"\" style={{ width: '16rem' }}>\r\n                    <CardImg width=\"100%\" src={baseUrl + item.image} alt={item.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle tag=\"h6\"  >\r\n                            <div className=\"p-1 w-100 color3\">{item.name}\r\n                                <div className=\"badge badge-warning priceInHomepage\"> 3000 RWF </div>\r\n                            </div>\r\n\r\n\r\n                        </CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : item.description}\r\n                        <CardText>\r\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                        </CardText>\r\n                    </CardImgOverlay>\r\n                    <CardBody className=\"cardBodyForProductShow\">\r\n\r\n                        <div className=\"row\">\r\n\r\n\r\n                            <Button size=\"sm\" className=\"bg-light  read-more-btn col-6 \">\r\n                                <i className=\"fa fa-lg fa-info read-more-icon\" aria-hidden=\"true\"></i> Read More\r\n                            </Button>\r\n\r\n\r\n                            <Button size=\"sm\" className=\"col-6 bg-light add-to-cart-btn\">\r\n                                <i className=\"fa fa-lg fa-cart-plus  add-to-cart-icon\" aria-hidden=\"true\"></i> Add to cart\r\n                                </Button>\r\n\r\n                        </div>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n                </div>\r\n            </FadeTransform>\r\n\r\n        );\r\n} \r\n\r\n\r\nexport default RenderCard2;",["456","457"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\FilterMenu.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\CicleMenu.js",["458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474"],"import React, {useState} from \"react\";\r\nimport '../../../css/home.css';\r\nimport {Button, Col, Label, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\r\nimport {Control, Errors, Form} from \"react-redux-form\";\r\nimport {firebaseStorage} from \"../../../firebase/firebase\";\r\n\r\nconst CircleMenu = ({items, uploadProduct, uploadResource, uploadMiscellaneous}) => {\r\n    //const [image, setImage] = useState('');\r\n\r\n\r\n    // const [category] = useState('food');\r\n    // const [description] = useState('food');\r\n    // const [image] = useState('food');\r\n    // const [productName] = useState('food');\r\n    // const [soldPrice] = useState('food');\r\n    // const [categoryR] = useState('food');\r\n    // const [descriptionR] = useState('food');\r\n    // const [imageR] = useState('food');\r\n    // const [resourceName] = useState('food');\r\n    // const [initialQuantity] = useState('food');\r\n    // const [unitPrice] = useState('food');\r\n    // const [unit] = useState('food');\r\n\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n    const minLength = (len) => (val) => (val) && (val.length >= len);\r\n    const isNumber = (val) => !isNaN(Number(val));\r\n    //const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);  //regular expression\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const togglerModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n    const [isModalOpenM, setIsModalOpenM] = useState(false);\r\n    const togglerModalM = () => setIsModalOpenM(!isModalOpenM);\r\n\r\n    const [isModalOpenR, setIsModalOpenR] = useState(false);\r\n    const togglerModalR = () => setIsModalOpenR(!isModalOpenR);\r\n\r\n\r\n    let handleProductSubmit = (values, event) => {\r\n        const file = values.image[0];\r\n\r\n        const fileName = file.name;\r\n        const fileExtension = fileName.split('.').pop();\r\n        alert(fileExtension);\r\n        const name = values.productName + '-' + (+new Date());\r\n        let ref = firebaseStorage.ref();\r\n        let imagePath = \"images/products/\" + name + '.' + fileExtension;\r\n        let fullRef = ref.child(imagePath);\r\n        const task = fullRef.put(file);\r\n        task.then((snapshot) => {\r\n            uploadProduct(values, imagePath);\r\n\r\n        });\r\n    };\r\n\r\n    let handleResourceSubmit = (values, event) => {\r\n        const file = values.image[0];\r\n\r\n        const fileName = file.name;\r\n        const fileExtension = fileName.split('.').pop();\r\n        const name = values.resourceName + '-' + (+new Date());\r\n        let ref = firebaseStorage.ref();\r\n        let imagePath = \"images/resources/\" + name + '.' + fileExtension;\r\n        let fullRef = ref.child(imagePath);\r\n        const task = fullRef.put(file);\r\n        task.then((snapshot) => {\r\n            uploadResource(values, imagePath);\r\n\r\n        });\r\n    };\r\n    let handleMiscellaneousSubmit = (values, event) => {\r\n        const file = values.proof[0];\r\n\r\n        const fileName = file.name;\r\n        const fileExtension = fileName.split('.').pop();\r\n        alert(fileExtension);\r\n        const name = values.reason + '-' + (+new Date());\r\n        let ref = firebaseStorage.ref();\r\n        let imagePath = \"images/miscellaneous/\" + name + '.' + fileExtension;\r\n        let fullRef = ref.child(imagePath);\r\n        const task = fullRef.put(file);\r\n        task.then((snapshot) => {\r\n            uploadMiscellaneous(values, imagePath);\r\n\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div class=\"panel panel-default \">\r\n            <Modal isOpen={isModalOpen} toggle={togglerModal}>\r\n                <ModalHeader toggle={togglerModal}>Add New Product</ModalHeader>\r\n                <ModalBody>\r\n                    <Form model=\"addNewProduct\" onSubmit={handleProductSubmit} encType=\"multipart/form-data\">\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"productName\" md={2}> Product Name</Label>\r\n\r\n\r\n                            <Col md={10}>\r\n                                <Control.text model=\".productName\" id=\"productName\" name=\"productName\"\r\n                                              placeholder=\"Product Name\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".productName\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"category\" md={2}> Category</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".category\" id=\"category\" name=\"category\"\r\n                                              placeholder=\"Category\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".category\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" md={2}> Description</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                              placeholder=\"description\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(4), maxLength: maxLength(30)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".description\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 4 characters',\r\n                                        maxLength: 'Must be 30 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"soldPrice\" md={2}> soldPrice</Label>\r\n                            <Col md={10}>\r\n                                <Control.text type=\"number\" model=\".soldPrice\" id=\"soldPrice\" name=\"soldPrice\"\r\n                                              placeholder=\"Sold Price\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required,\r\n                                                  minLength: minLength(3),\r\n                                                  maxLength: maxLength(5),\r\n                                                  isNumber\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".soldPrice\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 5 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"image\" md={2}> Image</Label>\r\n                            <Col md={10}>\r\n                                <Control.file model=\".image\" id=\"image\" name=\"image\"\r\n                                              placeholder=\"image\"\r\n                                              className=\"form-control\"\r\n                                              accept=\".png,.jpg,.webp,.jpeg,.gif,.dat\"\r\n                                    // validators={{\r\n                                    //     required, minLength: minLength(4), maxLength: maxLength(30)\r\n                                    // }}\r\n                                />\r\n                                {/*<Errors*/}\r\n                                {/*    className=\"text-danger\"*/}\r\n                                {/*    model=\".description\"*/}\r\n                                {/*    show=\"touched\"*/}\r\n                                {/*    messages={{*/}\r\n                                {/*        required: 'Required',*/}\r\n                                {/*        minLength: 'Must be greater than 4 characters',*/}\r\n                                {/*        maxLength: 'Must be 30 chatacters or less'*/}\r\n                                {/*    }}*/}\r\n                                {/*/>*/}\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n            <Modal isOpen={isModalOpenR} toggle={togglerModalR}>\r\n                <ModalHeader toggle={togglerModalR}>Add New resources</ModalHeader>\r\n                <ModalBody>\r\n                    <Form model=\"addNewResource\" onSubmit={handleResourceSubmit} encType=\"multipart/form-data\">\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"resourceName\" md={2}> Resource Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".resourceName\" id=\"resourceName\" name=\"resourceName\"\r\n                                              placeholder=\"Resource Name\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".resourceName\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"category\" md={2}> Category</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".category\" id=\"category\" name=\"category\"\r\n                                              placeholder=\"Category\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".category\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"unit\" md={2}> Unit</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".unit\" id=\"unit\" name=\"unit\"\r\n                                              placeholder=\"Unit\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(1), maxLength: maxLength(4)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".unit\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 1 characters',\r\n                                        maxLength: 'Must be 5 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" md={2}> Description</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                              placeholder=\"description\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(4), maxLength: maxLength(30)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".description\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 4 characters',\r\n                                        maxLength: 'Must be 30 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"initialQuantity\" md={2}> Initial Quantity</Label>\r\n                            <Col md={10}>\r\n                                <Control.text type=\"number\" model=\".initialQuantity\" id=\"initialQuantity\"\r\n                                              name=\"initialQuantity\" placeholder=\"Initial Quantity\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required,\r\n                                                  minLength: minLength(1),\r\n                                                  maxLength: maxLength(3),\r\n                                                  isNumber\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".initialQuantity\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 1 numbers',\r\n                                        maxLength: 'Must be 3 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"unitPrice\" md={2}> Unit Price</Label>\r\n                            <Col md={10}>\r\n                                <Control.text type=\"number\" model=\".unitPrice\" id=\"unitPrice\" name=\"unitPrice\"\r\n                                              placeholder=\"Unit Price\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required,\r\n                                                  minLength: minLength(3),\r\n                                                  maxLength: maxLength(5),\r\n                                                  isNumber\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".unitPrice\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 5 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"image\" md={2}> Image</Label>\r\n                            <Col md={10}>\r\n                                <Control.file model=\".image\" id=\"image\" name=\"image\"\r\n                                              placeholder=\"image\"\r\n                                              className=\"form-control\"\r\n                                    // validators={{\r\n                                    //     required, minLength: minLength(4), maxLength: maxLength(30)\r\n                                    // }}\r\n                                />\r\n                                {/*<Errors*/}\r\n                                {/*    className=\"text-danger\"*/}\r\n                                {/*    model=\".image\"*/}\r\n                                {/*    show=\"touched\"*/}\r\n                                {/*    messages={{*/}\r\n                                {/*        required: 'Required',*/}\r\n                                {/*        minLength: 'Must be greater than 4 characters',*/}\r\n                                {/*        maxLength: 'Must be 30 chatacters or less'*/}\r\n                                {/*    }}*/}\r\n                                {/*/>*/}\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n\r\n            <Modal isOpen={isModalOpenM} toggle={togglerModalM}>\r\n                <ModalHeader toggle={togglerModalM}>Add Miscellaneous</ModalHeader>\r\n                <ModalBody>\r\n                    <Form model=\"addMiscellaneous\" onSubmit={handleMiscellaneousSubmit} encType=\"multipart/form-data\">\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"reason\" md={2}> Reason</Label>\r\n\r\n\r\n                            <Col md={10}>\r\n                                <Control.text model=\".reason\" id=\"reason\" name=\"reason\"\r\n                                              placeholder=\"reason\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".reason\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"by\" md={2}> Category</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".by\" id=\"by\" name=\"by\"\r\n                                              placeholder=\"by\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".by\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"description\" md={2}> Description</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".description\" id=\"description\" name=\"description\"\r\n                                              placeholder=\"description\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required, minLength: minLength(4), maxLength: maxLength(30)\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".description\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 4 characters',\r\n                                        maxLength: 'Must be 30 chatacters or less'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"price\" md={2}> Price</Label>\r\n                            <Col md={10}>\r\n                                <Control.text type=\"number\" model=\".price\" id=\"price\" name=\"price\"\r\n                                              placeholder=\"how much?\"\r\n                                              className=\"form-control\"\r\n                                              validators={{\r\n                                                  required,\r\n                                                  minLength: minLength(2),\r\n                                                  maxLength: maxLength(5),\r\n                                                  isNumber\r\n                                              }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".price\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 5 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"proof\" md={2}> proof</Label>\r\n                            <Col md={10}>\r\n                                <Control.file model=\".proof\" id=\"proof\" name=\"proof\"\r\n                                              placeholder=\"proof\"\r\n                                              className=\"form-control\"\r\n                                    // validators={{\r\n                                    //     required, minLength: minLength(4), maxLength: maxLength(30)\r\n                                    // }}\r\n                                />\r\n                                {/*<Errors*/}\r\n                                {/*    className=\"text-danger\"*/}\r\n                                {/*    model=\".description\"*/}\r\n                                {/*    show=\"touched\"*/}\r\n                                {/*    messages={{*/}\r\n                                {/*        required: 'Required',*/}\r\n                                {/*        minLength: 'Must be greater than 4 characters',*/}\r\n                                {/*        maxLength: 'Must be 30 chatacters or less'*/}\r\n                                {/*    }}*/}\r\n                                {/*/>*/}\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            <div class=\"panel-heading\">\r\n\r\n            </div>\r\n\r\n            <div class=\"row panel-body \">\r\n\r\n                <div className=\"col \">\r\n                    <div className=\"\">\r\n                        <button onClick={togglerModal} type=\"button\" className=\"btn-warning btn btn-circle btn-xl \"><i\r\n                            className=\"fa fa-plus\"></i>\r\n                        </button>\r\n                        <span className=\"row\"> Add new Product </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col \">\r\n                    <div className=\"\">\r\n                        <button onClick={togglerModalR} type=\"button\" className=\"btn-primary btn btn-circle btn-xl \"><i\r\n                            className=\"fa fa-plus\"></i>\r\n                        </button>\r\n                        <span className=\"row\"> Add new Resources </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col \">\r\n                    <div className=\"\">\r\n                        <button onClick={togglerModalM} type=\"button\" className=\"btn-primary btn btn-circle btn-xl \"><i\r\n                            className=\"fa fa-money\"></i>\r\n                        </button>\r\n                        <span className=\"row\"> Add other expenses </span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/*<div class=\"col \">*/}\r\n                {/*    <button type=\"button\" class=\"btn btn-success btn-circle btn-xl\"><i class=\"fa fa-plus\"></i>*/}\r\n                {/*    </button>*/}\r\n                {/*    <span class=\"row\"> Add Product </span>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<div class=\"col \">*/}\r\n                {/*    <button type=\"button\" class=\"btn btn-primary btn-circle btn-xl\"><i class=\"fa fa-pencil\"></i>*/}\r\n                {/*    </button>*/}\r\n                {/*    <span class=\"row\"> Edit Product </span>*/}\r\n                {/*</div>*/}\r\n                {/*<div class=\"col \">*/}\r\n                {/*    <button type=\"button\" class=\"btn btn-danger btn-circle btn-xl\"><i class=\"fa fa-trash\"></i>*/}\r\n                {/*    </button>*/}\r\n                {/*    <span class=\"row\"> Delete Product </span>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<div class=\"col \">*/}\r\n                {/*    <button type=\"button\" class=\"btn btn-warning btn-circle btn-xl\"><i class=\"fa fa-tasks\"></i>*/}\r\n                {/*    </button>*/}\r\n                {/*    <span class=\"row\"> Stock Manager </span>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*\r\n                <button type=\"button\" class=\"btn btn-primary btn-circle btn-xl\"><i class=\"fa fa-list\"></i>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-success btn-circle btn-xl\"><i class=\"fa fa-link\"></i>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-info btn-circle btn-xl\"><i class=\"fa fa-check\"></i>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-warning btn-circle btn-xl\"><i class=\"fa fa-times\"></i>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-danger btn-circle btn-xl\"><i class=\"fa fa-heart\"></i>\r\n                </button> */}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CircleMenu;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ScrollView.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\SignUp.js",["475","476","477","478","479","480","481"],"import React, {Component} from 'react';\r\nimport {Button, Col, Label, Row} from \"reactstrap\";\r\nimport {Control, Errors, Form} from \"react-redux-form\";\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);  //regular expression\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        this.props.signUp(values, 'client');\r\n\r\n        // this.props.postFeedback(values.firstname, values.lastname, values.email, values.contactType, values.telnum, values.agree);\r\n\r\n        console.log(\"Curent state is: \" + JSON.stringify(values));\r\n\r\n        // this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"bg-light shadow-lg mt-5 mb-5 \">\r\n\r\n\r\n                    <div className=\"p-5\">\r\n                        <div className=\"\">\r\n                            <Form model=\"signUp\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"firstname\" md={2}> First Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                      placeholder=\"First Name\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".firstname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"lastname\" md={2}> Last Name</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                      placeholder=\"Last Name\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".lastname\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"telnum\" md={2}> Contact Tel</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                      placeholder=\"Tel. Number\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required,\r\n                                                          minLength: minLength(3),\r\n                                                          maxLength: maxLength(15),\r\n                                                          isNumber\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".telnum\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 numbers',\r\n                                                maxLength: 'Must be 15 numbers or less',\r\n                                                isNumber: 'Must be a number'\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"email\" md={2}> Email </Label>\r\n                                    <Col md={10}>\r\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                                      className=\"form-control\"\r\n                                                      validators={{\r\n                                                          required, validEmail\r\n                                                      }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".email\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                validEmail: 'Invalid Email address'\r\n                                            }}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"password\" md={2}> Password</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.password model=\".password\" id=\"password\" name=\"password\"\r\n                                                          placeholder=\"Password\"\r\n                                                          className=\"form-control\"\r\n                                                          validators={{\r\n                                                              required,\r\n                                                              minLength: minLength(3),\r\n                                                              maxLength: maxLength(15)\r\n                                                          }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".password\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"confirmPassword\" md={2}> Password</Label>\r\n                                    <Col md={10}>\r\n                                        <Control.password model=\".confirmPassword\" id=\"confirmPassword\"\r\n                                                          name=\"confirmPassword\" placeholder=\"Confirm Password\"\r\n                                                          className=\"form-control\"\r\n                                                          validators={{\r\n                                                              required,\r\n                                                              minLength: minLength(3),\r\n                                                              maxLength: maxLength(15)\r\n                                                          }}\r\n                                        />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".confirmPassword\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 chatacters or less'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 10, offset: 2}}>\r\n                                        <div className=\"form-check\">\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"/> {' '}\r\n                                            <strong>Remember password? </strong>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                                <Row className=\"form-group\">\r\n                                    <Col md={{size: 7, offset: 5}}>\r\n                                        <Button type=\"submit\" color=\"primary\">\r\n                                            Sign Up\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-3\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\AddedCart.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\TableAddedCarts.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Cart.js",["482","483"],"import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Cart = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    items: {},\r\n    number: 0,\r\n    id: 0,\r\n    removeId: null,\r\n    addedIds: []\r\n}, action) => {\r\n    let prev = state.items;\r\n    let addedIds = state.addedIds;\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_TO_CART:\r\n\r\n            prev[++state.id] = action.payload;\r\n            addedIds = [...addedIds, action.payload.id];\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: null,\r\n                items: prev,\r\n                number: (state.number + 1),\r\n                addedIds: addedIds\r\n            }\r\n\r\n        case ActionTypes.ADD_OR_REMOVE_TO_CART_LOADING:\r\n            return {...state, isLoading: true, errMess: null}\r\n\r\n        case ActionTypes.CART_FAIL:\r\n            return {...state, isLoading: false, errMess: action.payload}\r\n\r\n        case ActionTypes.REMOVE_TO_CART:\r\n\r\n            let ads = addedIds.filter((value) => {\r\n                return (value != action.removeId);\r\n            });\r\n            let keys = Object.keys(prev);\r\n            let deleteId = keys.filter(value => {\r\n                return prev[value].id == action.removeId\r\n            })\r\n            delete prev[deleteId[0]];\r\n\r\n            return {...state, isLoading: false, errMess: null, items: prev, addedIds: ads, number: (state.number - 1)}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\TabsMenu.js",["484","485","486"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard3.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\PaginationComponent.js",["487"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PaginationComponent from \"react-reactstrap-pagination\";\r\n\r\n\r\nclass PageComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedPage: 1\r\n        };\r\n\r\n        this.handleSelected = this.handleSelected.bind(this);\r\n    }\r\n\r\n    handleSelected(selectedPage) {\r\n        console.log(\"selected\", selectedPage);\r\n        this.setState({selectedPage: selectedPage});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid mt-2\">\r\n\r\n                <PaginationComponent\r\n                    totalItems={50}\r\n                    pageSize={3}\r\n                    onSelect={this.handleSelected}\r\n                />\r\n                <h3>Reacstrap Pagination Component</h3>\r\n                <hr/>\r\n                <h5>Selected page: {this.state.selectedPage}</h5>\r\n                <hr/>\r\n                <h5>Default maxPaginationNumbers (5)</h5>\r\n                {/* <h5>Specific maxPaginationNumbers (9) defaultActivePage (10)</h5>\r\n        <PaginationComponent\r\n          totalItems={50}\r\n          pageSize={3}\r\n          onSelect={this.handleSelected}\r\n          maxPaginationNumbers={9}\r\n          defaultActivePage={10}\r\n        />\r\n\r\n        <h5>Size lg</h5>\r\n        <PaginationComponent\r\n          size=\"lg\"\r\n          totalItems={30}\r\n          pageSize={5}\r\n          onSelect={this.handleSelected}\r\n        />\r\n\r\n        <h5>Size sm</h5>\r\n        <PaginationComponent\r\n          size=\"sm\"\r\n          totalItems={30}\r\n          pageSize={5}\r\n          onSelect={this.handleSelected}\r\n        /> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageComponent;",["488","489"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Main.js",["490","491","492","493","494","495"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\SideNavigation.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\GoogleMap.js",["496"],"import React from 'react'\r\nimport {GoogleMap, useJsApiLoader} from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '400px',\r\n    height: '400px'\r\n};\r\n\r\nconst center = {\r\n    lat: -3.745,\r\n    lng: -38.523\r\n};\r\n\r\nfunction GoogleMapExample() {\r\n    const {isLoaded} = useJsApiLoader({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: \"AIzaSyARqGl76OBuKJuriRHa9kX3kxGlAZkNfwU\"\r\n    })\r\n\r\n    const [map, setMap] = React.useState(null)\r\n\r\n    const onLoad = React.useCallback(function callback(map) {\r\n        const bounds = new window.google.maps.LatLngBounds();\r\n        map.fitBounds(bounds);\r\n        setMap(map)\r\n    }, [])\r\n\r\n    const onUnmount = React.useCallback(function callback(map) {\r\n        setMap(null)\r\n    }, [])\r\n\r\n    return isLoaded ? (\r\n\r\n        <GoogleMap\r\n            mapContainerStyle={containerStyle}\r\n            center={center}\r\n            zoom={10}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n        >\r\n            { /* Child components, such as markers, info windows, etc. */}\r\n            <></>\r\n        </GoogleMap>\r\n    ) : <></>\r\n}\r\n\r\nexport default React.memo(GoogleMapExample)",["497","498"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\AllProducts.js",["499","500","501","502","503","504","505","506"],"import React, {useState} from 'react';\r\nimport {TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport {ITEMS} from '../../shared/ProductsCategories'\r\nimport FlippingCard from \"../Manager/FlippingCard\";\r\nimport {Loading} from \"../LoadingComponent\";\r\nimport RenderCard3 from \"../homepagecomponents/RenderCard3\";\r\nimport ScrollView from \"./UIcomponents/ScrollView\";\r\n\r\n\r\nconst AllProducts = (props) => {\r\n\r\n    const [activeTab, setActiveTab] = useState('mains');\r\n    // const[cathegories,setCAthegories] = useState(ITEMS);\r\n    if (props.isLoading) {\r\n        return (\r\n            <Loading/>\r\n        );\r\n    } else if (props.errMess) {\r\n        return (\r\n            <h4> {props.errMess} </h4>\r\n        );\r\n    } else {\r\n        let keysToUse = props.allProducts.reduce(\r\n            (keysToUse, pr) => {\r\n                if (!keysToUse.includes(pr.category)) {\r\n                    keysToUse = [...keysToUse, pr.category];\r\n                }\r\n\r\n                return keysToUse;\r\n\r\n            }, []\r\n        )\r\n\r\n        let arry = {\r\n            All: []\r\n        }\r\n        for (let i = 0; i < keysToUse.length; i++) {\r\n            arry[keysToUse[i]] = [];\r\n        }\r\n\r\n\r\n        const arr = props.allProducts.reduce(\r\n            (arrayOfItems, productT) => {\r\n                arrayOfItems[productT.category] = [...arrayOfItems[productT.category],\r\n                    productT];\r\n                return arrayOfItems;\r\n            }, arry\r\n        )\r\n\r\n\r\n        const toggle = tab => {\r\n            if (activeTab !== tab) setActiveTab(tab);\r\n        }\r\n\r\n\r\n        let allNavItemNew = keysToUse.map(cathegory => {\r\n            return (\r\n                <NavItem>\r\n                    <NavLink\r\n                        className={classnames({active: activeTab === cathegory})}\r\n                        onClick={() => {\r\n                            toggle(cathegory);\r\n                        }}\r\n                    >\r\n                        {cathegory}\r\n                    </NavLink>\r\n                </NavItem>\r\n            )\r\n        })\r\n\r\n        let allTabPane = keysToUse.map(key => {\r\n            return (\r\n                <TabPane tabId={key}>\r\n                    <Row>\r\n\r\n                        <ScrollView\r\n                            cart={props.cart}\r\n                            addToCart={props.addToCart}\r\n                            removeToCart={props.removeToCart}\r\n                            products={arr[key]}/>\r\n\r\n                    </Row>\r\n                </TabPane>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <Nav pills>\r\n                    {allNavItemNew}\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                    {allTabPane}\r\n                </TabContent>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default AllProducts;",["507","508"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WaiterCategoryButton.js",["509"],"import {Button} from \"reactstrap\";\r\nimport React, {useState} from \"react\";\r\n\r\nlet WaiterCategoryButton = (props) => {\r\n    const [category, setCategory] = useState(props.category);\r\n    let handleClick = (event) => {\r\n        props.changeProductToDisplay(category);\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <Button key={props.category}\r\n                id={props.category}\r\n                onClick={handleClick}\r\n                className=\"color3\"> <i class=\"fa fa-beer text-white\" aria-hidden=\"true\"> {category}</i></Button>\r\n    )\r\n}\r\nexport default WaiterCategoryButton;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ComponentToPrint.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\HorizontalOutOfStock.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\IncreaseProduct.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\StockManagement.js",["510","511","512"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\MarchProductToResources.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchProductsCard.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\ModalTogglerButton.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\Dashboard.js",["513"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\resources.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ToggleButton.js",["514","515"],"import React, {useState} from \"react\";\r\nimport {Collapse, Button, CardBody, Card} from 'reactstrap';\r\nimport '../../../css/home.css';\r\nimport CircleMenu from \"./CicleMenu\";\r\n\r\nlet items = [\r\n    {\r\n        name: 'Add Product',\r\n        icon: 'fa fa-plus',\r\n        color: 'btn-success',\r\n        to: '/management/products'\r\n    },\r\n    {\r\n        name: 'Edit Product',\r\n        icon: 'fa fa-pencil',\r\n        color: 'btn-primary',\r\n        to: '/management/products'\r\n    },\r\n    {\r\n        name: 'Delete Product',\r\n        icon: 'fa fa-trash',\r\n        color: 'btn-danger',\r\n        to: '/management/products'\r\n    },\r\n    {\r\n        name: 'Stock IncreaseProduct',\r\n        icon: 'fa fa-tasks',\r\n        color: 'btn-warning',\r\n        to: '/management/products'\r\n    }\r\n];\r\n\r\nconst ToggleButton = () => {\r\n\r\n    const [collapse, setCollapse] = useState(true);\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    const onEntering = () => setStatus('');\r\n\r\n    const onEntered = () => setStatus('');\r\n\r\n    const onExiting = () => setStatus('');\r\n\r\n    const onExited = () => setStatus(' ');\r\n\r\n    const toggle = () => setCollapse(!collapse);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Button className=\"color3\" onClick={toggle}\r\n                    style={{marginTop: '1rem', marginLeft: '1rem'}}>Manage</Button>{' '}\r\n\r\n            <h5> {status}</h5>\r\n            <Collapse\r\n                isOpen={collapse}\r\n                onEntering={onEntering}\r\n                onEntered={onEntered}\r\n                onExiting={onExiting}\r\n                onExited={onExited}\r\n            >\r\n                <div className=\"col-12 col-md-11 offset-md-1\">\r\n\r\n                    <CircleMenu items={items}/>\r\n                </div>\r\n\r\n            </Collapse>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ToggleButton;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DairyUsage.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\config.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\auth.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\App.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\firebase.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\userCollection.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\behaviors.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\waiters.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\invoices.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\ProductSold.js",["516","517","518","519","520","521"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\getSoldProductDate.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyInvoices.js",[],["522","523"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionCreator2.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\setImage.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyInvoicesComponent.js",["524","525","526","527","528","529","530"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyInvoicesComponent = (props) => {\r\n    let allTr = props.dailyInvoices.dailyInvoices.map((invoice, index) => {\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{invoice.clientName}</td>\r\n                <td>{invoice.id}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n\r\n    let initial_values = () => {\r\n        let opElement1New = props.dailyInvoices.dailyInvoices.slice(0, numberOfItem);\r\n        let menu1New = opElement1New.map((invoice, index) => {\r\n            return (\r\n                <tr key={invoice.id}>\r\n                    <th> {index + 1}</th>\r\n                    <td>{invoice.receptionistName}</td>\r\n                    <td>{invoice.waiterName}</td>\r\n                    <td> {invoice.clientName}</td>\r\n                    <td> {invoice.totalPrice}</td>\r\n                    <td> {invoice.paymentStatus} </td>\r\n                    <td> --</td>\r\n                    <td>--</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [productToDisplay, setProductToDisplay] = useState(props.dailyInvoices.dailyInvoices);\r\n    const [category, setCategory] = useState('All');\r\n\r\n\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n\r\n    // let keysToUseNew = props.dailyInvoices.dailyInvoices.reduce(\r\n    //     (keysToUse, pr) => {\r\n    //         if (!keysToUse.includes(pr.receptionistName) && !keysToUse.includes(pr.waiterName)) {\r\n    //             keysToUse = [...keysToUse, pr.waiterName, pr.receptionistName];\r\n    //         }\r\n    //\r\n    //         return keysToUse;\r\n    //\r\n    //     }, []\r\n    // );\r\n\r\n\r\n    let funMenuNew = (dailyUsange = props.dailyInvoices.dailyInvoices, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            let opElement = dailyUsange.slice(start, lastIndex);\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = opElement.map((invoice, index) => {\r\n                return (\r\n                    <tr key={invoice.id}>\r\n\r\n                        <th> {++indexing}</th>\r\n                        <td>{invoice.receptionistName}</td>\r\n                        <td>{invoice.waiterName}</td>\r\n                        <td> {invoice.clientName}</td>\r\n                        <td> {invoice.totalPrice}</td>\r\n                        <td> {invoice.paymentStatus} </td>\r\n                        <td> --</td>\r\n                        <td>--</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Invoices </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th> Receptionist Name</th>\r\n                                        <th> Waiter Name</th>\r\n                                        <th> Client Name</th>\r\n                                        <th> Total Price</th>\r\n                                        <th> Payment Status</th>\r\n                                        <th> Create At</th>\r\n                                        <th>Update At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyInvoice\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyInvoice\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th> Receptionist Name</th>\r\n                                                            <th> Waiter Name</th>\r\n                                                            <th> Client Name</th>\r\n                                                            <th> Total Price</th>\r\n                                                            <th> Payment Status</th>\r\n                                                            <th> Create At</th>\r\n                                                            <th>Update At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyInvoicesComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyInvoiceDetails.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyStockUp.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyStockUp.js",["531","532","533","534","535","536","537","538","539","540","541","542","543"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyMiscellaneousComponent.js",["544","545"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyMiscellaneousComponent = (props) => {\r\n    const [productToDisplay] = useState(props.dailyMiscellaneous.dailyMiscellaneous);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"dailyStockUp is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((miscellaneous, index) => {\r\n            return (\r\n                <tr key={miscellaneous.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{miscellaneous.by}</td>\r\n                    <td>{miscellaneous.price}</td>\r\n                    <td> {miscellaneous.reason}</td>\r\n                    <td> {miscellaneous.description}</td>\r\n                    <td> proof </td>\r\n                    <td> --</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Miscellaneous </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>by</th>\r\n                                        <th>How much</th>\r\n                                        <th> Reason</th>\r\n                                        <th> Description</th>\r\n                                        <th> Proof </th>\r\n                                        <th>Created At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyMiscellaneous\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyMiscellaneous\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>by</th>\r\n                                                            <th>How much</th>\r\n                                                            <th> Reason</th>\r\n                                                            <th> Description</th>\r\n                                                            <th> Proof </th>\r\n                                                            <th>created At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyMiscellaneousComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyResourcesReportsComponent.js",["546","547"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyResourcesReportsComponent = (props) => {\r\n    const [productToDisplay] = useState(props.dailyResourcesReports.dailyResourcesReports);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"dailyStockUp is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((oneResourceReport, index) => {\r\n            return (\r\n                <tr key={oneResourceReport.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{oneResourceReport.resourceName}</td>\r\n                    <td>{oneResourceReport.quantity}</td>\r\n                    <td>{oneResourceReport.unitPrice}</td>\r\n                    <td> {oneResourceReport.to}</td>\r\n                    <td> -- </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Resources Stock OUt </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>Resource Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit Price</th>\r\n                                        <th> goes to</th>\r\n                                        <th> created At </th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyResourcesReports\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyResourcesReports\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>Resource Name</th>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Unit Price</th>\r\n                                                            <th> goes to</th>\r\n                                                            <th> created At </th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyResourcesReportsComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\makeInvoicePaid.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\NonPaidInvoicesComponent.js",["548","549","550"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyMiscellaneous.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\DairyEarning.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\otherDailyReports.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\miscellaneous.js",[],{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"555","severity":1,"message":"556","line":36,"column":25,"nodeType":"557","endLine":36,"endColumn":61},{"ruleId":"551","replacedBy":"558"},{"ruleId":"553","replacedBy":"559"},{"ruleId":"551","replacedBy":"560"},{"ruleId":"553","replacedBy":"561"},{"ruleId":"562","severity":1,"message":"563","line":83,"column":37,"nodeType":"557","endLine":89,"endColumn":39},{"ruleId":"562","severity":1,"message":"563","line":105,"column":37,"nodeType":"557","endLine":111,"endColumn":39},{"ruleId":"562","severity":1,"message":"563","line":128,"column":37,"nodeType":"557","endLine":136,"endColumn":39},{"ruleId":"562","severity":1,"message":"563","line":154,"column":37,"nodeType":"557","endLine":159,"endColumn":39},{"ruleId":"562","severity":1,"message":"564","line":175,"column":41,"nodeType":"557","endLine":176,"endColumn":89},{"ruleId":"562","severity":1,"message":"565","line":182,"column":37,"nodeType":"557","endLine":183,"endColumn":78},{"ruleId":"562","severity":1,"message":"566","line":192,"column":37,"nodeType":"557","endLine":193,"endColumn":91},{"ruleId":"567","severity":1,"message":"568","line":9,"column":7,"nodeType":"569","messageId":"570","endLine":9,"endColumn":15},{"ruleId":"562","severity":1,"message":"563","line":44,"column":41,"nodeType":"557","endLine":49,"endColumn":43},{"ruleId":"562","severity":1,"message":"571","line":65,"column":41,"nodeType":"557","endLine":73,"endColumn":43},{"ruleId":"562","severity":1,"message":"564","line":89,"column":45,"nodeType":"557","endLine":90,"endColumn":93},{"ruleId":"567","severity":1,"message":"572","line":2,"column":9,"nodeType":"569","messageId":"570","endLine":2,"endColumn":12},{"ruleId":"567","severity":1,"message":"573","line":2,"column":14,"nodeType":"569","messageId":"570","endLine":2,"endColumn":17},{"ruleId":"567","severity":1,"message":"574","line":2,"column":19,"nodeType":"569","messageId":"570","endLine":2,"endColumn":26},{"ruleId":"567","severity":1,"message":"575","line":2,"column":28,"nodeType":"569","messageId":"570","endLine":2,"endColumn":35},{"ruleId":"567","severity":1,"message":"576","line":2,"column":37,"nodeType":"569","messageId":"570","endLine":2,"endColumn":40},{"ruleId":"567","severity":1,"message":"577","line":2,"column":42,"nodeType":"569","messageId":"570","endLine":2,"endColumn":52},{"ruleId":"567","severity":1,"message":"578","line":2,"column":54,"nodeType":"569","messageId":"570","endLine":2,"endColumn":61},{"ruleId":"567","severity":1,"message":"579","line":3,"column":8,"nodeType":"569","messageId":"570","endLine":3,"endColumn":18},{"ruleId":"567","severity":1,"message":"580","line":14,"column":12,"nodeType":"569","messageId":"570","endLine":14,"endColumn":23},{"ruleId":"567","severity":1,"message":"581","line":16,"column":11,"nodeType":"569","messageId":"570","endLine":16,"endColumn":17},{"ruleId":"567","severity":1,"message":"582","line":36,"column":11,"nodeType":"569","messageId":"570","endLine":36,"endColumn":15},{"ruleId":"567","severity":1,"message":"583","line":9,"column":5,"nodeType":"569","messageId":"570","endLine":9,"endColumn":17},{"ruleId":"567","severity":1,"message":"584","line":10,"column":5,"nodeType":"569","messageId":"570","endLine":10,"endColumn":17},{"ruleId":"567","severity":1,"message":"585","line":11,"column":5,"nodeType":"569","messageId":"570","endLine":11,"endColumn":19},{"ruleId":"567","severity":1,"message":"586","line":24,"column":5,"nodeType":"569","messageId":"570","endLine":24,"endColumn":25},{"ruleId":"567","severity":1,"message":"587","line":5,"column":9,"nodeType":"569","messageId":"570","endLine":5,"endColumn":16},{"ruleId":"567","severity":1,"message":"588","line":7,"column":10,"nodeType":"569","messageId":"570","endLine":7,"endColumn":22},{"ruleId":"562","severity":1,"message":"565","line":64,"column":37,"nodeType":"557","endLine":65,"endColumn":78},{"ruleId":"562","severity":1,"message":"563","line":80,"column":37,"nodeType":"557","endLine":85,"endColumn":39},{"ruleId":"562","severity":1,"message":"566","line":103,"column":37,"nodeType":"557","endLine":104,"endColumn":90},{"ruleId":"551","replacedBy":"589"},{"ruleId":"553","replacedBy":"590"},{"ruleId":"551","replacedBy":"591"},{"ruleId":"553","replacedBy":"592"},{"ruleId":"551","replacedBy":"593"},{"ruleId":"553","replacedBy":"594"},{"ruleId":"551","replacedBy":"595"},{"ruleId":"553","replacedBy":"596"},{"ruleId":"567","severity":1,"message":"597","line":19,"column":19,"nodeType":"569","messageId":"570","endLine":19,"endColumn":27},{"ruleId":"567","severity":1,"message":"597","line":13,"column":19,"nodeType":"569","messageId":"570","endLine":13,"endColumn":27},{"ruleId":"567","severity":1,"message":"598","line":67,"column":20,"nodeType":"569","messageId":"570","endLine":67,"endColumn":29},{"ruleId":"567","severity":1,"message":"599","line":70,"column":22,"nodeType":"569","messageId":"570","endLine":70,"endColumn":33},{"ruleId":"600","severity":1,"message":"601","line":219,"column":13,"nodeType":"557","endLine":219,"endColumn":70},{"ruleId":"567","severity":1,"message":"602","line":11,"column":9,"nodeType":"569","messageId":"570","endLine":11,"endColumn":14},{"ruleId":"567","severity":1,"message":"603","line":13,"column":9,"nodeType":"569","messageId":"570","endLine":13,"endColumn":16},{"ruleId":"555","severity":1,"message":"604","line":48,"column":106,"nodeType":"557","endLine":49,"endColumn":44},{"ruleId":"605","severity":1,"message":"606","line":6,"column":5,"nodeType":"607","messageId":"608","endLine":18,"endColumn":6},{"ruleId":"567","severity":1,"message":"576","line":1,"column":95,"nodeType":"569","messageId":"570","endLine":1,"endColumn":98},{"ruleId":"567","severity":1,"message":"572","line":1,"column":100,"nodeType":"569","messageId":"570","endLine":1,"endColumn":103},{"ruleId":"551","replacedBy":"609"},{"ruleId":"553","replacedBy":"610"},{"ruleId":"562","severity":1,"message":"563","line":102,"column":33,"nodeType":"557","endLine":108,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":124,"column":33,"nodeType":"557","endLine":130,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":147,"column":33,"nodeType":"557","endLine":153,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":170,"column":33,"nodeType":"557","endLine":179,"endColumn":35},{"ruleId":"562","severity":1,"message":"611","line":197,"column":33,"nodeType":"557","endLine":204,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":237,"column":33,"nodeType":"557","endLine":243,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":259,"column":33,"nodeType":"557","endLine":265,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":282,"column":33,"nodeType":"557","endLine":288,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":305,"column":33,"nodeType":"557","endLine":311,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":328,"column":33,"nodeType":"557","endLine":337,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":355,"column":33,"nodeType":"557","endLine":364,"endColumn":35},{"ruleId":"562","severity":1,"message":"611","line":382,"column":33,"nodeType":"557","endLine":388,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":424,"column":33,"nodeType":"557","endLine":430,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":446,"column":33,"nodeType":"557","endLine":452,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":469,"column":33,"nodeType":"557","endLine":475,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":492,"column":33,"nodeType":"557","endLine":501,"endColumn":35},{"ruleId":"562","severity":1,"message":"611","line":519,"column":33,"nodeType":"557","endLine":525,"endColumn":35},{"ruleId":"562","severity":1,"message":"563","line":45,"column":41,"nodeType":"557","endLine":51,"endColumn":43},{"ruleId":"562","severity":1,"message":"563","line":67,"column":41,"nodeType":"557","endLine":73,"endColumn":43},{"ruleId":"562","severity":1,"message":"563","line":89,"column":41,"nodeType":"557","endLine":98,"endColumn":43},{"ruleId":"562","severity":1,"message":"563","line":117,"column":41,"nodeType":"557","endLine":122,"endColumn":43},{"ruleId":"562","severity":1,"message":"571","line":138,"column":41,"nodeType":"557","endLine":146,"endColumn":43},{"ruleId":"562","severity":1,"message":"571","line":162,"column":41,"nodeType":"557","endLine":170,"endColumn":43},{"ruleId":"562","severity":1,"message":"564","line":186,"column":45,"nodeType":"557","endLine":187,"endColumn":93},{"ruleId":"612","severity":1,"message":"613","line":37,"column":31,"nodeType":"614","messageId":"615","endLine":37,"endColumn":33},{"ruleId":"612","severity":1,"message":"616","line":41,"column":39,"nodeType":"614","messageId":"615","endLine":41,"endColumn":41},{"ruleId":"567","severity":1,"message":"617","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":11},{"ruleId":"567","severity":1,"message":"618","line":6,"column":5,"nodeType":"569","messageId":"570","endLine":6,"endColumn":13},{"ruleId":"612","severity":1,"message":"616","line":134,"column":37,"nodeType":"614","messageId":"615","endLine":134,"endColumn":39},{"ruleId":"567","severity":1,"message":"619","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":16},{"ruleId":"551","replacedBy":"620"},{"ruleId":"553","replacedBy":"621"},{"ruleId":"567","severity":1,"message":"622","line":1,"column":16,"nodeType":"569","messageId":"570","endLine":1,"endColumn":24},{"ruleId":"567","severity":1,"message":"623","line":5,"column":8,"nodeType":"569","messageId":"570","endLine":5,"endColumn":23},{"ruleId":"567","severity":1,"message":"624","line":8,"column":9,"nodeType":"569","messageId":"570","endLine":8,"endColumn":22},{"ruleId":"567","severity":1,"message":"625","line":8,"column":24,"nodeType":"569","messageId":"570","endLine":8,"endColumn":39},{"ruleId":"567","severity":1,"message":"626","line":10,"column":9,"nodeType":"569","messageId":"570","endLine":10,"endColumn":27},{"ruleId":"567","severity":1,"message":"627","line":11,"column":8,"nodeType":"569","messageId":"570","endLine":11,"endColumn":17},{"ruleId":"567","severity":1,"message":"628","line":20,"column":12,"nodeType":"569","messageId":"570","endLine":20,"endColumn":15},{"ruleId":"551","replacedBy":"629"},{"ruleId":"553","replacedBy":"630"},{"ruleId":"567","severity":1,"message":"631","line":2,"column":53,"nodeType":"569","messageId":"570","endLine":2,"endColumn":57},{"ruleId":"567","severity":1,"message":"617","line":2,"column":59,"nodeType":"569","messageId":"570","endLine":2,"endColumn":65},{"ruleId":"567","severity":1,"message":"632","line":2,"column":67,"nodeType":"569","messageId":"570","endLine":2,"endColumn":76},{"ruleId":"567","severity":1,"message":"618","line":2,"column":78,"nodeType":"569","messageId":"570","endLine":2,"endColumn":86},{"ruleId":"567","severity":1,"message":"572","line":2,"column":93,"nodeType":"569","messageId":"570","endLine":2,"endColumn":96},{"ruleId":"567","severity":1,"message":"602","line":4,"column":9,"nodeType":"569","messageId":"570","endLine":4,"endColumn":14},{"ruleId":"567","severity":1,"message":"633","line":5,"column":8,"nodeType":"569","messageId":"570","endLine":5,"endColumn":20},{"ruleId":"567","severity":1,"message":"634","line":7,"column":8,"nodeType":"569","messageId":"570","endLine":7,"endColumn":19},{"ruleId":"551","replacedBy":"635"},{"ruleId":"553","replacedBy":"636"},{"ruleId":"567","severity":1,"message":"637","line":5,"column":22,"nodeType":"569","messageId":"570","endLine":5,"endColumn":33},{"ruleId":"567","severity":1,"message":"638","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":14},{"ruleId":"567","severity":1,"message":"639","line":4,"column":8,"nodeType":"569","messageId":"570","endLine":4,"endColumn":17},{"ruleId":"567","severity":1,"message":"640","line":7,"column":8,"nodeType":"569","messageId":"570","endLine":7,"endColumn":18},{"ruleId":"567","severity":1,"message":"641","line":2,"column":8,"nodeType":"569","messageId":"570","endLine":2,"endColumn":18},{"ruleId":"567","severity":1,"message":"642","line":2,"column":27,"nodeType":"569","messageId":"570","endLine":2,"endColumn":35},{"ruleId":"567","severity":1,"message":"631","line":2,"column":37,"nodeType":"569","messageId":"570","endLine":2,"endColumn":41},{"ruleId":"567","severity":1,"message":"643","line":8,"column":30,"nodeType":"569","messageId":"570","endLine":8,"endColumn":49},{"ruleId":"567","severity":1,"message":"644","line":9,"column":22,"nodeType":"569","messageId":"570","endLine":9,"endColumn":33},{"ruleId":"567","severity":1,"message":"645","line":59,"column":12,"nodeType":"569","messageId":"570","endLine":59,"endColumn":20},{"ruleId":"567","severity":1,"message":"637","line":59,"column":22,"nodeType":"569","messageId":"570","endLine":59,"endColumn":33},{"ruleId":"567","severity":1,"message":"646","line":62,"column":25,"nodeType":"569","messageId":"570","endLine":62,"endColumn":39},{"ruleId":"567","severity":1,"message":"581","line":102,"column":11,"nodeType":"569","messageId":"570","endLine":102,"endColumn":17},{"ruleId":"551","replacedBy":"647"},{"ruleId":"553","replacedBy":"648"},{"ruleId":"567","severity":1,"message":"649","line":8,"column":9,"nodeType":"569","messageId":"570","endLine":8,"endColumn":14},{"ruleId":"567","severity":1,"message":"650","line":43,"column":12,"nodeType":"569","messageId":"570","endLine":43,"endColumn":28},{"ruleId":"567","severity":1,"message":"643","line":43,"column":30,"nodeType":"569","messageId":"570","endLine":43,"endColumn":49},{"ruleId":"567","severity":1,"message":"645","line":44,"column":12,"nodeType":"569","messageId":"570","endLine":44,"endColumn":20},{"ruleId":"567","severity":1,"message":"637","line":44,"column":22,"nodeType":"569","messageId":"570","endLine":44,"endColumn":33},{"ruleId":"567","severity":1,"message":"646","line":48,"column":25,"nodeType":"569","messageId":"570","endLine":48,"endColumn":39},{"ruleId":"567","severity":1,"message":"581","line":117,"column":11,"nodeType":"569","messageId":"570","endLine":117,"endColumn":17},{"ruleId":"567","severity":1,"message":"617","line":2,"column":5,"nodeType":"569","messageId":"570","endLine":2,"endColumn":11},{"ruleId":"567","severity":1,"message":"631","line":3,"column":5,"nodeType":"569","messageId":"570","endLine":3,"endColumn":9},{"ruleId":"567","severity":1,"message":"642","line":4,"column":5,"nodeType":"569","messageId":"570","endLine":4,"endColumn":13},{"ruleId":"567","severity":1,"message":"618","line":5,"column":5,"nodeType":"569","messageId":"570","endLine":5,"endColumn":13},{"ruleId":"567","severity":1,"message":"632","line":6,"column":5,"nodeType":"569","messageId":"570","endLine":6,"endColumn":14},{"ruleId":"567","severity":1,"message":"573","line":8,"column":5,"nodeType":"569","messageId":"570","endLine":8,"endColumn":8},{"ruleId":"567","severity":1,"message":"574","line":9,"column":5,"nodeType":"569","messageId":"570","endLine":9,"endColumn":12},{"ruleId":"567","severity":1,"message":"575","line":10,"column":5,"nodeType":"569","messageId":"570","endLine":10,"endColumn":12},{"ruleId":"567","severity":1,"message":"577","line":12,"column":5,"nodeType":"569","messageId":"570","endLine":12,"endColumn":15},{"ruleId":"567","severity":1,"message":"578","line":13,"column":5,"nodeType":"569","messageId":"570","endLine":13,"endColumn":12},{"ruleId":"567","severity":1,"message":"643","line":21,"column":30,"nodeType":"569","messageId":"570","endLine":21,"endColumn":49},{"ruleId":"567","severity":1,"message":"646","line":56,"column":25,"nodeType":"569","messageId":"570","endLine":56,"endColumn":39},{"ruleId":"567","severity":1,"message":"581","line":97,"column":11,"nodeType":"569","messageId":"570","endLine":97,"endColumn":17},{"ruleId":"567","severity":1,"message":"646","line":40,"column":25,"nodeType":"569","messageId":"570","endLine":40,"endColumn":39},{"ruleId":"567","severity":1,"message":"581","line":81,"column":11,"nodeType":"569","messageId":"570","endLine":81,"endColumn":17},{"ruleId":"567","severity":1,"message":"646","line":39,"column":25,"nodeType":"569","messageId":"570","endLine":39,"endColumn":39},{"ruleId":"567","severity":1,"message":"581","line":80,"column":11,"nodeType":"569","messageId":"570","endLine":80,"endColumn":17},{"ruleId":"567","severity":1,"message":"643","line":11,"column":30,"nodeType":"569","messageId":"570","endLine":11,"endColumn":49},{"ruleId":"567","severity":1,"message":"646","line":56,"column":25,"nodeType":"569","messageId":"570","endLine":56,"endColumn":39},{"ruleId":"567","severity":1,"message":"581","line":97,"column":11,"nodeType":"569","messageId":"570","endLine":97,"endColumn":17},"no-native-reassign",["651"],"no-negated-in-lhs",["652"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["651"],["652"],["651"],["652"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'isNumber' is assigned a value but never used.","Identifier","unusedVar","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","'Col' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Row' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'classnames' is defined but never used.","'cathegories' is assigned a value but never used.","'toggle' is assigned a value but never used.","'menu' is assigned a value but never used.","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'Loading' is defined but never used.","'RenderLeader' is defined but never used.",["651"],["652"],["651"],["652"],["651"],["652"],["651"],["652"],"'setItems' is assigned a value but never used.","'setErrorM' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ITEMS' is defined but never used.","'baseUrl' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["651"],["652"],"Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'Button' is defined but never used.","'CardText' is defined but never used.","'ReactDOM' is defined but never used.",["651"],["652"],"'useState' is defined but never used.","'IncreaseProduct' is defined but never used.","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.","'changeDailyInvoice' is defined but never used.","'WiterHome' is defined but never used.","'map' is assigned a value but never used.",["651"],["652"],"'Card' is defined but never used.","'CardTitle' is defined but never used.","'FlippingCard' is defined but never used.","'RenderCard3' is defined but never used.",["651"],["652"],"'setCategory' is assigned a value but never used.","'SignUp' is defined but never used.","'Dashboard' is defined but never used.","'Navigation' is defined but never used.","'DairyUsage' is defined but never used.","'CardBody' is defined but never used.","'setProductToDisplay' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'category' is assigned a value but never used.","'setItemToFetch' is assigned a value but never used.",["651"],["652"],"'allTr' is assigned a value but never used.","'productToDisplay' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]