[{"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\reportWebVitals.js":"1","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\behaviors.js":"2","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WiterHome.js":"3","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\userCollection.js":"4","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\marchResourceToProducts.js":"5","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyMiscellaneous.js":"6","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyInvoiceDetails.js":"7","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\reports.js":"8","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\SearchFilterIn.js":"9","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\ProductsCategories.js":"10","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\firebase.js":"11","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\AddedCart.js":"12","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\SideNavigation.js":"13","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\Dashboard.js":"14","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\config.js":"15","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyMiscellaneousComponent.js":"16","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyInvoicesComponent.js":"17","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\IncreaseProduct.js":"18","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DairyUsage.js":"19","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\ChooseMonth.js":"20","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\FilterMenu.js":"21","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchProductToResources.js":"22","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\makeInvoicePaid.js":"23","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WaiterCategoryButton.js":"24","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchProductsCard.js":"25","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\MainComponent.js":"26","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\App.js":"27","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\comments.js":"28","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\outOfStockProducts.js":"29","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\invoices.js":"30","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\LoadingComponent.js":"31","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HeaderComponent.js":"32","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\setImage.js":"33","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\Search.js":"34","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\ReportsMainComponent.js":"35","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\FistScreen.js":"36","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyResourcesReportsComponent.js":"37","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ReactDatePicker.js":"38","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\NonPaidInvoicesComponent.js":"39","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\HorizontalOutOfStock.js":"40","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchResourceCard.js":"41","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\index.js":"42","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\ContactComponent.js":"43","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\SignUp.js":"44","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\miscellaneous.js":"45","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Navigation.js":"46","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionTypes.js":"47","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\TabsMenu.js":"48","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\StockManagement.js":"49","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\FlippingCard.js":"50","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ScrollView.js":"51","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\carouselHome.js":"52","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\configureStore.js":"53","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\DishdetailComponent.js":"54","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\AboutComponent.js":"55","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HomeComponent.js":"56","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\FooterComponent.js":"57","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionCreators.js":"58","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\resources.js":"59","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Main.js":"60","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyStockUp.js":"61","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard3.js":"62","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\ProfitCard.js":"63","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ItemsSold.js":"64","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ReactInfiniteScroll.js":"65","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\OneItemMatch.js":"66","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Forms.js":"67","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\CicleMenu.js":"68","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\ProductSold.js":"69","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\TempleteToDisplayDataInTableFromArray.js":"70","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\auth.js":"71","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\waiters.js":"72","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\nonPaidInvoices.js":"73","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\TableAddedCarts.js":"74"},{"size":415,"mtime":1619276634844,"results":"75","hashOfConfig":"76"},{"size":621,"mtime":1619667331015,"results":"77","hashOfConfig":"76"},{"size":898,"mtime":1619717135243,"results":"78","hashOfConfig":"76"},{"size":807,"mtime":1619338392724,"results":"79","hashOfConfig":"76"},{"size":936,"mtime":1620040806783,"results":"80","hashOfConfig":"76"},{"size":721,"mtime":1619692550766,"results":"81","hashOfConfig":"76"},{"size":1036,"mtime":1619667329361,"results":"82","hashOfConfig":"76"},{"size":1390,"mtime":1620136537829,"results":"83","hashOfConfig":"76"},{"size":3848,"mtime":1620106121804,"results":"84","hashOfConfig":"76"},{"size":314,"mtime":1619276634851,"results":"85","hashOfConfig":"76"},{"size":426,"mtime":1619667331171,"results":"86","hashOfConfig":"76"},{"size":426,"mtime":1619276634571,"results":"87","hashOfConfig":"76"},{"size":4469,"mtime":1620117942166,"results":"88","hashOfConfig":"76"},{"size":8345,"mtime":1619762527432,"results":"89","hashOfConfig":"76"},{"size":352,"mtime":1619276634732,"results":"90","hashOfConfig":"76"},{"size":8787,"mtime":1619695484156,"results":"91","hashOfConfig":"76"},{"size":10093,"mtime":1619667330136,"results":"92","hashOfConfig":"76"},{"size":3006,"mtime":1619773519517,"results":"93","hashOfConfig":"76"},{"size":1121,"mtime":1619757417073,"results":"94","hashOfConfig":"76"},{"size":2878,"mtime":1620142787523,"results":"95","hashOfConfig":"76"},{"size":555,"mtime":1619667330860,"results":"96","hashOfConfig":"76"},{"size":6401,"mtime":1624301609002,"results":"97","hashOfConfig":"76"},{"size":550,"mtime":1619719452756,"results":"98","hashOfConfig":"76"},{"size":595,"mtime":1619276634555,"results":"99","hashOfConfig":"76"},{"size":5770,"mtime":1620018968381,"results":"100","hashOfConfig":"76"},{"size":19957,"mtime":1624294889177,"results":"101","hashOfConfig":"76"},{"size":641,"mtime":1619276634004,"results":"102","hashOfConfig":"76"},{"size":642,"mtime":1619276634819,"results":"103","hashOfConfig":"76"},{"size":727,"mtime":1619276634829,"results":"104","hashOfConfig":"76"},{"size":1366,"mtime":1619667329215,"results":"105","hashOfConfig":"76"},{"size":259,"mtime":1619276634132,"results":"106","hashOfConfig":"76"},{"size":4928,"mtime":1619667331642,"results":"107","hashOfConfig":"76"},{"size":1068,"mtime":1619937671115,"results":"108","hashOfConfig":"76"},{"size":1385,"mtime":1619276634635,"results":"109","hashOfConfig":"76"},{"size":5504,"mtime":1620145340971,"results":"110","hashOfConfig":"76"},{"size":2486,"mtime":1619779827807,"results":"111","hashOfConfig":"76"},{"size":8692,"mtime":1619696855043,"results":"112","hashOfConfig":"76"},{"size":2309,"mtime":1619697052716,"results":"113","hashOfConfig":"76"},{"size":9398,"mtime":1619720435723,"results":"114","hashOfConfig":"76"},{"size":1776,"mtime":1619370211893,"results":"115","hashOfConfig":"76"},{"size":3869,"mtime":1624298548460,"results":"116","hashOfConfig":"76"},{"size":724,"mtime":1619276634746,"results":"117","hashOfConfig":"76"},{"size":11247,"mtime":1620046258941,"results":"118","hashOfConfig":"76"},{"size":11918,"mtime":1620048483832,"results":"119","hashOfConfig":"76"},{"size":832,"mtime":1619667332017,"results":"120","hashOfConfig":"76"},{"size":9884,"mtime":1620049159877,"results":"121","hashOfConfig":"76"},{"size":7847,"mtime":1620236515507,"results":"122","hashOfConfig":"76"},{"size":8805,"mtime":1619720633636,"results":"123","hashOfConfig":"76"},{"size":4471,"mtime":1620233111183,"results":"124","hashOfConfig":"76"},{"size":10563,"mtime":1620103930040,"results":"125","hashOfConfig":"76"},{"size":1311,"mtime":1619276634540,"results":"126","hashOfConfig":"76"},{"size":915,"mtime":1619779403117,"results":"127","hashOfConfig":"76"},{"size":2949,"mtime":1620237089567,"results":"128","hashOfConfig":"76"},{"size":8394,"mtime":1619667329186,"results":"129","hashOfConfig":"76"},{"size":5456,"mtime":1619788913850,"results":"130","hashOfConfig":"76"},{"size":7311,"mtime":1619765039447,"results":"131","hashOfConfig":"76"},{"size":2987,"mtime":1619667329699,"results":"132","hashOfConfig":"76"},{"size":52720,"mtime":1620236515482,"results":"133","hashOfConfig":"76"},{"size":1277,"mtime":1620102492930,"results":"134","hashOfConfig":"76"},{"size":6671,"mtime":1620236515221,"results":"135","hashOfConfig":"76"},{"size":676,"mtime":1619667329295,"results":"136","hashOfConfig":"76"},{"size":3831,"mtime":1624296996722,"results":"137","hashOfConfig":"76"},{"size":6412,"mtime":1620138586937,"results":"138","hashOfConfig":"76"},{"size":1272,"mtime":1619750364192,"results":"139","hashOfConfig":"76"},{"size":1985,"mtime":1619675117962,"results":"140","hashOfConfig":"76"},{"size":3560,"mtime":1624301252898,"results":"141","hashOfConfig":"76"},{"size":1019,"mtime":1620234885964,"results":"142","hashOfConfig":"76"},{"size":39039,"mtime":1620238419296,"results":"143","hashOfConfig":"76"},{"size":9219,"mtime":1619761523565,"results":"144","hashOfConfig":"76"},{"size":8183,"mtime":1620145341038,"results":"145","hashOfConfig":"76"},{"size":1520,"mtime":1619667330623,"results":"146","hashOfConfig":"76"},{"size":807,"mtime":1620236515201,"results":"147","hashOfConfig":"76"},{"size":699,"mtime":1619717135420,"results":"148","hashOfConfig":"76"},{"size":11786,"mtime":1620241078430,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"ksji1e",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"152"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"155"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"158"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"158"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"163"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"158"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"158"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"155"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\reportWebVitals.js",[],["318","319"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\behaviors.js",[],["320","321"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WiterHome.js",[],["322","323"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\userCollection.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\marchResourceToProducts.js",[],["324","325"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyMiscellaneous.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyInvoiceDetails.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\reports.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\SearchFilterIn.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\ProductsCategories.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\firebase.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\AddedCart.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\SideNavigation.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\Dashboard.js",["326"],"import React from 'react';\r\nimport DairyUsage from './DairyUsage';\r\nimport ItemsSold from '../UIcomponents/ItemsSold';\r\nimport ReactDatePicker from '../UIcomponents/ReactDatePicker';\r\nimport ProductSold from \"./ProductSold\";\r\nimport DailyInvoicesComponent from \"./DailyInvoicesComponent\";\r\nimport DailyStockUp from \"./DailyStockUp\";\r\nimport DailyMiscellaneousComponent from \"./DailyMiscellaneousComponent\";\r\nimport DailyResourcesReportsComponent from \"./DailyResourcesReportsComponent\";\r\n\r\nconst Dashboard = (props) => {\r\n    let dailyTotals = [{\r\n        icon:\"fa fa-shopping-cart\",\r\n        name:\"Sold\",\r\n        color:'badge-warning',\r\n        unit:\"Products\",\r\n        value:props.otherDailyReports.totalQuantity===null ? \"--\": props.otherDailyReports.totalQuantity\r\n    },{\r\n        icon:\"fa fa-dollar\",\r\n        name:\"Earning\",\r\n        unit: 'rwf',\r\n        color:'',\r\n        value:props.otherDailyReports.totalEarn===null ? \"--\": props.otherDailyReports.totalEarn\r\n    },{\r\n        icon:\"fa fa-dollar\",\r\n        name:\"Orders\",\r\n        unit: 'Invoices',\r\n        color:'',\r\n        value:props.otherDailyReports.totalInvoices===null ? \"--\": props.otherDailyReports.totalInvoices\r\n    },\r\n        {\r\n            icon:\"fa fa-dollar\",\r\n            name:\"Stock up\",\r\n            unit: 'rwf',\r\n            color:'badge-primary',\r\n            value:props.otherDailyReports.totalStockUpMoney===null ? \"--\": props.otherDailyReports.totalStockUpMoney\r\n        },\r\n        {\r\n            icon:\"fa fa-dollar\",\r\n            name:\"Expanses \",\r\n            unit: 'rwf',\r\n            color:'badge-danger',\r\n            value:props.otherDailyReports.totalMiscellaneousMoney===null ? \"--\": props.otherDailyReports.totalMiscellaneousMoney\r\n        },\r\n        {\r\n            icon:\"fa fa-dollar\",\r\n            name:\"Stock out \",\r\n            unit: 'rwf',\r\n            color:'badge-warning',\r\n            value:props.otherDailyReports.totalStockOutMoney===null ? \"--\": props.otherDailyReports.totalStockOutMoney\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    // let popularProductCalc = () =>{\r\n    //     let popularProduct = {\r\n    //         totalPrice:0,\r\n    //         totalQuantity: 0,\r\n    //         productName:''\r\n    //     };\r\n    //     if(props.dailyInvoiceDetails === null || props.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     else if(props.dailyInvoiceDetails.dailyInvoiceDetails === null || props.dailyInvoiceDetails.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     let products = props.dailyInvoiceDetails.products;\r\n    //      if(products === undefined || products ===null){\r\n    //         return\r\n    //     }\r\n    //     products.forEach((product) => {\r\n    //\r\n    //         let receptionist = Object.keys(props.dailyInvoices.dailyInvoices[product]);\r\n    //         let totalPrice = 0;\r\n    //         let totalQuantity = 0;\r\n    //         receptionist.forEach((rec) => {\r\n    //             totalPrice += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalPrice);\r\n    //             totalQuantity += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalQuantity);\r\n    //             if( popularProduct.totalQuantity <= totalQuantity){\r\n    //                 popularProduct.totalQuantity = totalQuantity;\r\n    //                 popularProduct.totalPrice = totalPrice;\r\n    //                 popularProduct.productName = product;\r\n    //             }\r\n    //\r\n    //\r\n    //         });\r\n    //\r\n    //\r\n    //     });\r\n    //     props.setDailyPopularProduct(popularProduct);\r\n    // }\r\n    //\r\n    //\r\n    //\r\n    // popularProductCalc();\r\n\r\n\r\n    let allCardsOfTotal = dailyTotals.map(oneDailyTotal =>{\r\n        return(\r\n            <div className=\"col\">\r\n                <ItemsSold icon={oneDailyTotal.icon} color={oneDailyTotal.color} name={oneDailyTotal.name} unit={oneDailyTotal.unit} value={oneDailyTotal.value} />\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2 mt-4\">\r\n                    <h3>Choose Date</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-8 \">\r\n                    <ReactDatePicker changeDailyDetailsInvoices={props.changeDailyDetailsInvoices}\r\n                                     changeDailyStockUp={props.changeDailyStockUp}\r\n                                     changeDailyInvoices={props.changeDailyInvoices}\r\n                                     changeDailyResourcesReports={props.changeDailyResourcesReports}\r\n                                     changeDailyMiscellaneous={props.changeDailyMiscellaneous}\r\n                    />\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <DairyVisits/>*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <ItemsSold otherDailyReports={props.otherDailyReports} />*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <DairyEarning otherDailyReports={props.otherDailyReports} />*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"col-12 col-md-3\">*/}\r\n                {/*    <ItemsSold/>*/}\r\n                {/*</div>*/}\r\n                {allCardsOfTotal}\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col\">\r\n                    <ProductSold dailyInvoices={props.dailyInvoices}\r\n                                 addToCart={props.addToCart}\r\n                                 removeToCart={props.removeToCart}\r\n                                 waiters={props.waiters}\r\n                                 cart={props.cart}\r\n                                 setDailyPopularProduct={props.setDailyPopularProduct}\r\n                                 dailyInvoiceDetails={props.dailyInvoiceDetails}\r\n                                 uploadMiscellaneous={props.uploadMiscellaneous}\r\n                                 pushInvoice={props.pushInvoice}\r\n                                 products={props.products}\r\n                                 changeDailyInvoices={props.changeDailyInvoices}/>\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    <DailyMiscellaneousComponent dailyMiscellaneous={props.dailyMiscellaneous}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col\">\r\n                    <DailyStockUp\r\n                        dailyStockUp={props.dailyStockUp}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col\">\r\n                    <DailyResourcesReportsComponent dailyResourcesReports={props.dailyResourcesReports} />\r\n                </div>\r\n            </div>\r\n\r\n            {/*<div className=\"row\">*/}\r\n            {/*    <div className=\"col-12\">*/}\r\n            {/*        <div className=\"container\">*/}\r\n            {/*            <div className=\"row\">*/}\r\n            {/*                <div className=\"col-12\">*/}\r\n            {/*                    <DairyUsage popularProduct={props.otherDailyReports.popularProduct} />*/}\r\n            {/*                </div>*/}\r\n            {/*            </div>*/}\r\n            {/*        </div>*/}\r\n\r\n            {/*    </div>*/}\r\n\r\n            {/*</div>*/}\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n\r\n\r\n                    <DailyInvoicesComponent\r\n                        dailyInvoices={props.dailyInvoices}\r\n                        addToCart={props.addToCart}\r\n                        removeToCart={props.removeToCart}\r\n                        waiters={props.waiters}\r\n                        cart={props.cart}\r\n                        uploadMiscellaneous={props.uploadMiscellaneous}\r\n                        pushInvoice={props.pushInvoice}\r\n                        products={props.products}\r\n                        changeDailyInvoices={props.changeDailyInvoices}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Dashboard;",["327","328"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\firebase\\config.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyMiscellaneousComponent.js",["329","330"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyMiscellaneousComponent = (props) => {\r\n    const [productToDisplay] = useState(props.dailyMiscellaneous.dailyMiscellaneous);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"dailyStockUp is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((miscellaneous, index) => {\r\n            return (\r\n                <tr key={miscellaneous.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{miscellaneous.by}</td>\r\n                    <td>{miscellaneous.price}</td>\r\n                    <td> {miscellaneous.reason}</td>\r\n                    <td> {miscellaneous.description}</td>\r\n                    <td> proof </td>\r\n                    <td> --</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Miscellaneous </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>by</th>\r\n                                        <th>How much</th>\r\n                                        <th> Reason</th>\r\n                                        <th> Description</th>\r\n                                        <th> Proof </th>\r\n                                        <th>Created At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyMiscellaneous\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyMiscellaneous\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>by</th>\r\n                                                            <th>How much</th>\r\n                                                            <th> Reason</th>\r\n                                                            <th> Description</th>\r\n                                                            <th> Proof </th>\r\n                                                            <th>created At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyMiscellaneousComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyInvoicesComponent.js",["331","332","333","334","335","336","337"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyInvoicesComponent = (props) => {\r\n    let allTr = props.dailyInvoices.dailyInvoices.map((invoice, index) => {\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{invoice.clientName}</td>\r\n                <td>{invoice.id}</td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n\r\n    let initial_values = () => {\r\n        let opElement1New = props.dailyInvoices.dailyInvoices.slice(0, numberOfItem);\r\n        let menu1New = opElement1New.map((invoice, index) => {\r\n            return (\r\n                <tr key={invoice.id}>\r\n                    <th> {index + 1}</th>\r\n                    <td>{invoice.receptionistName}</td>\r\n                    <td>{invoice.waiterName}</td>\r\n                    <td> {invoice.clientName}</td>\r\n                    <td> {invoice.totalPrice}</td>\r\n                    <td> {invoice.paymentStatus} </td>\r\n                    <td> --</td>\r\n                    <td>--</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [productToDisplay, setProductToDisplay] = useState(props.dailyInvoices.dailyInvoices);\r\n    const [category, setCategory] = useState('All');\r\n\r\n\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n\r\n    // let keysToUseNew = props.dailyInvoices.dailyInvoices.reduce(\r\n    //     (keysToUse, pr) => {\r\n    //         if (!keysToUse.includes(pr.receptionistName) && !keysToUse.includes(pr.waiterName)) {\r\n    //             keysToUse = [...keysToUse, pr.waiterName, pr.receptionistName];\r\n    //         }\r\n    //\r\n    //         return keysToUse;\r\n    //\r\n    //     }, []\r\n    // );\r\n\r\n\r\n    let funMenuNew = (dailyUsange = props.dailyInvoices.dailyInvoices, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            let opElement = dailyUsange.slice(start, lastIndex);\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = opElement.map((invoice, index) => {\r\n                return (\r\n                    <tr key={invoice.id}>\r\n\r\n                        <th> {++indexing}</th>\r\n                        <td>{invoice.receptionistName}</td>\r\n                        <td>{invoice.waiterName}</td>\r\n                        <td> {invoice.clientName}</td>\r\n                        <td> {invoice.totalPrice}</td>\r\n                        <td> {invoice.paymentStatus} </td>\r\n                        <td> --</td>\r\n                        <td>--</td>\r\n                    </tr>\r\n                )\r\n            })\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Invoices </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th> Receptionist Name</th>\r\n                                        <th> Waiter Name</th>\r\n                                        <th> Client Name</th>\r\n                                        <th> Total Price</th>\r\n                                        <th> Payment Status</th>\r\n                                        <th> Create At</th>\r\n                                        <th>Update At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyInvoice\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyInvoice\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th> Receptionist Name</th>\r\n                                                            <th> Waiter Name</th>\r\n                                                            <th> Client Name</th>\r\n                                                            <th> Total Price</th>\r\n                                                            <th> Payment Status</th>\r\n                                                            <th> Create At</th>\r\n                                                            <th>Update At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyInvoicesComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\IncreaseProduct.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DairyUsage.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\ChooseMonth.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\FilterMenu.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchProductToResources.js",["338","339","340","341"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\makeInvoicePaid.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\WaiterCategoryButton.js",["342"],"import {Button} from \"reactstrap\";\r\nimport React, {useState} from \"react\";\r\n\r\nlet WaiterCategoryButton = (props) => {\r\n    const [category, setCategory] = useState(props.category);\r\n    let handleClick = (event) => {\r\n        props.changeProductToDisplay(category);\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <Button key={props.category}\r\n                id={props.category}\r\n                onClick={handleClick}\r\n                className=\"color3\"> <i class=\"fa fa-beer text-white\" aria-hidden=\"true\"> {category}</i></Button>\r\n    )\r\n}\r\nexport default WaiterCategoryButton;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchProductsCard.js",["343","344"],"import {Button, Card, CardBody, CardHeader, Col, Form, Input, Label, Row} from \"reactstrap\";\r\nimport React, {useState} from \"react\";\r\nimport '../../../css/march.css';\r\n\r\nlet MarchProductsCard = (props) => {\r\n\r\n    let [index,setIndex] =useState(0) ;\r\n    let [numberOfDelete, setNumberOfDelete] = useState(0);\r\n\r\n    const [marchProduct, setMarchProduct] = useState({});\r\n    let options = '';\r\n    if(props.products.products !== undefined){\r\n         options =  props.products.products.map(product =>{\r\n            return (\r\n                <option key={product.id} value={JSON.stringify({...product})}>{product.name} </option>\r\n            )\r\n        });\r\n\r\n    }\r\n\r\n\r\n    let changeChosenProduct = (event) =>{\r\n         let product = JSON.parse(event.target.value);\r\n            let prevChosen = props.chosenProducts;\r\n            let objKey = event.target.name;\r\n            let isNotChosen = true;\r\n            for(let i in prevChosen){\r\n                if( prevChosen[i].id === product.id ){\r\n                    isNotChosen = false;\r\n                    alert(\"product already chosen, please choose again \");\r\n                    break;\r\n                }\r\n            }\r\n            if(isNotChosen){\r\n                prevChosen[objKey] = product;\r\n                console.log(JSON.stringify(prevChosen));\r\n                props.setChosenProducts({...prevChosen});\r\n            }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let OneMarchProduct = ({indexOfProduct, deleteProductItem}) =>{\r\n        let [productQuantity, setProductQuantity] = useState(0);\r\n\r\n        let handleQuantityChange = (event) =>{\r\n            //let name = event.target.name;\r\n            //let index = name.slice(8);\r\n            let prev = props.chosenProducts;\r\n            if (prev[indexOfProduct] === undefined || prev[indexOfProduct] ===null){\r\n                alert(\"choose productFirst\");\r\n            }\r\n            else if(event.target.value < 0){\r\n                alert(\"only positive numbers\");\r\n            }\r\n            else{\r\n                setProductQuantity(event.target.value);\r\n                prev[indexOfProduct].matchProductQuantity = event.target.value;\r\n            }\r\n\r\n        }\r\n        let handleDeleteClick = (event) =>{\r\n            //deleteItem(indexOfProduct);\r\n\r\n\r\n            //alert(indexOfProduct);\r\n            let prev2 = marchProduct;\r\n             //prev2.slice(indexOfProduct-numberOfDelete,1);\r\n             delete prev2[indexOfProduct] ;\r\n             //alert(JSON.stringify(prev2));\r\n\r\n            setMarchProduct({...prev2});\r\n\r\n            setNumberOfDelete(numberOfDelete + 1);\r\n            deleteProductItem(indexOfProduct);\r\n\r\n        }\r\n\r\n\r\n        return(\r\n            <React.Fragment key={index + \"anotherKey\"}>\r\n            <Col>\r\n                <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Options</label>\r\n                    </div>\r\n                    <select name={index} className=\"custom-select\" onChange={changeChosenProduct}>\r\n                        <option value=\"null\" selected>Choose...</option>\r\n                        {options}\r\n                    </select>\r\n                </div>\r\n            </Col>\r\n        <Col>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Qtn</span>\r\n                </div>\r\n                <input value={productQuantity} type=\"number\" min={0} name={\"quantity\"+index} onChange={handleQuantityChange} className=\"form-control\"\r\n                       aria-label=\"Amount (to the nearest dollar)\"/>\r\n            </div>\r\n        </Col>\r\n                <Col sm={2}>\r\n                    <span className=\"fa fa-lg fa-trash text-danger\" onClick={handleDeleteClick}>\r\n\r\n                    </span>\r\n                </Col>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    let addOtherProduct = () => {\r\n        let it =\r\n                    (<Form key={index +'addOtherProduct'}>\r\n\r\n                        <Row className=\"form-group\" >\r\n                            <OneMarchProduct indexOfProduct={index} deleteProductItem={props.deleteProductItem} />\r\n\r\n                        </Row>\r\n\r\n                    </Form>)\r\n\r\n        ;\r\n        let prevA = marchProduct;\r\n        prevA[index] = it;\r\n        setIndex(index+1);\r\n        setMarchProduct(prevA);\r\n    }\r\n\r\n    let marchProductDisplay = [];\r\n    for (let k in marchProduct){\r\n        marchProductDisplay.push(marchProduct[k]);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"march shadow-lg\">\r\n            <div className=\"marchBody\">\r\n                <Card>\r\n                    <CardHeader className=\"bg-primary text-white\">Marched Products</CardHeader>\r\n                    <CardBody>\r\n                        <div className=\"row p-1\">\r\n                            <Button onClick={addOtherProduct} className=\"btn-warning\"> <span className=\"fa fa-plus\"> Other Product</span>\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"row p-1\">\r\n                            <div className=\"col-6\">\r\n                                <h4>Names</h4>\r\n\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <h4>Quantity</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row p-1\">\r\n                                {marchProductDisplay}\r\n                        </div>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MarchProductsCard;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\MainComponent.js",[],["345","346"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\App.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\comments.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\outOfStockProducts.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\invoices.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\LoadingComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HeaderComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\functions\\setImage.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\Search.js",["347"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\ReportsMainComponent.js",["348","349","350"],"\r\nimport React, {useState} from \"react\";\r\nimport ChooseMonth from \"./ChooseMonth\";\r\nimport ProfitCard from \"./ProfitCard\";\r\nimport TempleteToDisplayDataInTableFromArray from \"./TempleteToDisplayDataInTableFromArray\";\r\n\r\nconst ReportsMainComponent = (props) => {\r\n    let date = new Date();\r\n    const [month,setMonth] = useState(date.getMonth() + 1);\r\n    const [year, setYear] = useState(date.getFullYear());\r\n\r\n    let monthExpensesOnStock = 0;\r\n    props.reports.resourceMonthReport.map(report =>{\r\n        monthExpensesOnStock += report.totalCost;\r\n    });\r\n\r\n    let monthIncome = 0;\r\n    props.reports.productMonthReport.map(report =>{\r\n        monthIncome+= report.totalPrice;\r\n    })\r\n    let monthExpenseMiscellaneous = 0;\r\n    props.reports.miscellaneousMonthReport.map(report =>{\r\n        if(report.isExpanse){\r\n            monthExpenseMiscellaneous+= report.totalMoney;\r\n        }\r\n    })\r\n\r\n    let makeFetchingAction = (mth) =>{\r\n        props.fetchResourceMonthReport(year, mth);\r\n        props.fetchProductMonthReport(year,mth);\r\n        props.fetchMiscellaneousMonthReport(year,mth);\r\n    }\r\n\r\n        // let popularProductCalc = () =>{\r\n    //     let popularProduct = {\r\n    //         totalPrice:0,\r\n    //         totalQuantity: 0,\r\n    //         productName:''\r\n    //     };\r\n    //     if(props.dailyInvoiceDetails === null || props.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     else if(props.dailyInvoiceDetails.dailyInvoiceDetails === null || props.dailyInvoiceDetails.dailyInvoiceDetails){\r\n    //         return;\r\n    //     }\r\n    //     let products = props.dailyInvoiceDetails.products;\r\n    //      if(products === undefined || products ===null){\r\n    //         return\r\n    //     }\r\n    //     products.forEach((product) => {\r\n    //\r\n    //         let receptionist = Object.keys(props.dailyInvoices.dailyInvoices[product]);\r\n    //         let totalPrice = 0;\r\n    //         let totalQuantity = 0;\r\n    //         receptionist.forEach((rec) => {\r\n    //             totalPrice += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalPrice);\r\n    //             totalQuantity += parseInt(props.dailyInvoices.dailyInvoices[product][rec].totalQuantity);\r\n    //             if( popularProduct.totalQuantity <= totalQuantity){\r\n    //                 popularProduct.totalQuantity = totalQuantity;\r\n    //                 popularProduct.totalPrice = totalPrice;\r\n    //                 popularProduct.productName = product;\r\n    //             }\r\n    //\r\n    //\r\n    //         });\r\n    //\r\n    //\r\n    //     });\r\n    //     props.setDailyPopularProduct(popularProduct);\r\n    // }\r\n    //\r\n    //\r\n    //\r\n    // popularProductCalc();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2 mt-4\">\r\n                    <h3>Choose Date</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-8 \">\r\n                    <ChooseMonth  month={month} setMonth={setMonth} year={year}\r\n                                  setYear={setYear} makeFetchingAction={makeFetchingAction}   />\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <ProfitCard monthIncone={monthIncome} monthExpensesOnStock={monthExpensesOnStock} monthExpenseMiscellaneous={monthExpenseMiscellaneous} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n\r\n\r\n                    <TempleteToDisplayDataInTableFromArray reports={props.reports} dataToDisplay={props.reports.productMonthReport}\r\n                                                           data={{name:\"name\",totalPrice:\"total Price\",totalQuantity: 'Total quantity',month:\"month\",year:\"year\"}}\r\n                                                           displayName={\"product Month Report\"}\r\n                                                           idToUse={\"scrollableDivInProductMonthReport\"}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n\r\n\r\n                    <TempleteToDisplayDataInTableFromArray reports={props.reports} dataToDisplay={props.reports.resourceMonthReport}\r\n                                                           data={{name:\"name\",totalCost:\"total Cost\",totalQuantity: 'Total quantity',month:\"month\",year:\"year\"}}\r\n                                                           displayName={\"Resource Month Report\"}\r\n                                                           idToUse={\"scrollableDivInResourceMonthReport\"}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n\r\n\r\n                    <TempleteToDisplayDataInTableFromArray reports={props.reports} dataToDisplay={props.reports.miscellaneousMonthReport}\r\n                                                           data={{reason:\"reason\",totalMoney:\"total Money\",month:\"month\",year:\"year\"}}\r\n                                                           displayName={\"Miscellaneous Month Report\"}\r\n                                                           idToUse={\"scrollableDivInMiscellaneousMonthReport\"}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default ReportsMainComponent;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\FistScreen.js",["351","352"],"import '../../css/Some.css'\r\nimport {Button, Carousel, CarouselCaption, CarouselControl, CarouselIndicators, CarouselItem} from 'reactstrap';\r\n\r\nimport {useState} from 'react';\r\nimport {ITEMS} from '../../shared/carouselHome';\r\n\r\n\r\nlet FirstScreen = (props) => {\r\n\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [items, setItems] = useState(ITEMS)\r\n\r\n    const next = () => {\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n        setActiveIndex(nextIndex);\r\n    }\r\n\r\n    const previous = () => {\r\n        if (animating) return;\r\n        const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n        setActiveIndex(nextIndex);\r\n    }\r\n\r\n    const goToIndex = (newIndex) => {\r\n        if (animating) return;\r\n        setActiveIndex(newIndex);\r\n    }\r\n\r\n    const slides = items.map((item) => {\r\n        return (\r\n\r\n            <CarouselItem className=\"mainCarouselItem\"\r\n                          onExiting={() => setAnimating(true)}\r\n                          onExited={() => setAnimating(false)}\r\n                          key={item.src}\r\n            >\r\n                <img className=\"carouselImageMain\" src={item.src} alt={item.altText}/>\r\n\r\n                <CarouselCaption captionText=\"\" captionHeader={\r\n                    <section className=\"section-intro\">\r\n                    <header>\r\n                    <h1 className=\"mb-5\">247Resto</h1>\r\n                    </header>\r\n                    <div className=\"link-to-book-wrapper\">\r\n                    <a className=\"link-to-book\" href=\"#reservations\">Order Now</a>\r\n                    </div>\r\n                    </section>\r\n\r\n\r\n                }\r\n\r\n                                 CaptionFooter={<p>Just test</p>}\r\n                />\r\n            </CarouselItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n\r\n        <Carousel id=\"mainCarousel\"\r\n                  activeIndex={activeIndex}\r\n                  next={next}\r\n                  previous={previous}\r\n        >\r\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex}/>\r\n            {slides}\r\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous}/>\r\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next}/>\r\n        </Carousel>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default FirstScreen;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\DailyResourcesReportsComponent.js",["353","354"],"import {Col, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nlet numberOfItem = 12;\r\nconst DailyResourcesReportsComponent = (props) => {\r\n    const [productToDisplay] = useState(props.dailyResourcesReports.dailyResourcesReports);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\"dailyStockUp is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((oneResourceReport, index) => {\r\n            return (\r\n                <tr key={oneResourceReport.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{oneResourceReport.resourceName}</td>\r\n                    <td>{oneResourceReport.quantity}</td>\r\n                    <td>{oneResourceReport.unitPrice}</td>\r\n                    <td> {oneResourceReport.to}</td>\r\n                    <td> -- </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>Daily Resources Stock OUt </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>Resource Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit Price</th>\r\n                                        <th> goes to</th>\r\n                                        <th> created At </th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInDailyResourcesReports\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInDailyResourcesReports\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>Resource Name</th>\r\n                                                            <th>Quantity</th>\r\n                                                            <th>Unit Price</th>\r\n                                                            <th> goes to</th>\r\n                                                            <th> created At </th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DailyResourcesReportsComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ReactDatePicker.js",["355"],"import React, {Component} from 'react'\r\nimport {Alert, FormGroup, FormText, Label} from 'reactstrap'\r\n\r\nvar DatePicker = require(\"reactstrap-date-picker\");\r\n\r\nclass ReactDatePicker extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: new Date().toISOString(),\r\n            formattedValue: 'Today',\r\n            selectedDate: false\r\n        }\r\n    }\r\n\r\n    handleChange(value, formattedValue) {\r\n        this.setState({\r\n            value: value, // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\r\n            formattedValue: formattedValue // Formatted String, ex: \"11/19/2016\"\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Access ISO String and formatted values from the DOM.\r\n        var hiddenInputElement = document.getElementById(\"example-datepicker\");\r\n        console.log(hiddenInputElement.value); // ISO String, ex: \"2016-11-19T12:00:00.000Z\"\r\n        console.log(hiddenInputElement.getAttribute('data-formattedvalue')) // Formatted String, ex: \"11/19/2016\"\r\n\r\n        let timestamp = Date.parse(hiddenInputElement.getAttribute('data-formattedvalue'));\r\n        let startDate = new Date(timestamp);\r\n        let endDate = new Date(timestamp);\r\n        startDate.setHours(0, 0, 0, 0);\r\n        endDate.setHours(23, 59, 59, 0);\r\n        console.log(\"dkfdf;lkaj;ljidklfjkgjkld;fj;ldkfj;lkdjfa;lkdjfa;lkjf;lakjf;lajf;jka;fja;lkjdf;ajf;akjf;ljf;l\");\r\n        this.props.changeDailyInvoices(startDate, endDate);\r\n        this.props.changeDailyDetailsInvoices(startDate, endDate);\r\n        this.props.changeDailyStockUp(startDate, endDate);\r\n        this.props.changeDailyMiscellaneous(startDate,endDate);\r\n        this.props.changeDailyResourcesReports(startDate,endDate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormGroup>\r\n                <Label> </Label>\r\n                <DatePicker id=\"example-datepicker\"\r\n                            value={this.state.value}\r\n                            onChange={(v, f) => this.handleChange(v, f)}/>\r\n                <FormText> <Alert color=\"info\">Selected Date: <b> {this.state.formattedValue} </b> click <a\r\n                    className=\"alert-link\">here </a> to fetch data</Alert> </FormText>\r\n            </FormGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactDatePicker;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\NonPaidInvoicesComponent.js",["356","357","358"],"import {Button, Col, Container, Row, Table} from \"reactstrap\";\r\nimport {Sticky, StickyContainer} from \"react-sticky\";\r\nimport {useState} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport makeInvoicePaid from \"../../../functions/makeInvoicePaid\";\r\n\r\nlet numberOfItem = 12;\r\nconst NonPaidInvoicesComponent = (props) => {\r\n\r\n\r\n    const [productToDisplay, setProductToDisplay] = useState(props.nonPaidInvoices.nonPaidInvoices);\r\n\r\n    let handleMakePaidClick = event =>{\r\n        alert(event.target.id)\r\n        makeInvoicePaid(event.target.id, props.changeNonPaidInvoices);\r\n\r\n    }\r\n    let handleRefresh = (event) =>{\r\n        let receptionistName = JSON.parse(localStorage.getItem('userCollection')).firstName;\r\n        props.changeNonPaidInvoices(receptionistName);\r\n    }\r\n\r\n\r\n\r\n    const [hasMoreS, setHasMoreS] = useState(true);\r\n\r\n    let initial_values = (start = 0, endIndex = numberOfItem, indexing = 0) => {\r\n        if (productToDisplay === null || productToDisplay === undefined) {\r\n            console.log(\" is undefined or null\");\r\n            return [];\r\n        }\r\n        let indexing1;\r\n\r\n        let opElement1New = productToDisplay.slice(start, endIndex);\r\n        let menu1New = opElement1New.map((oneInvoice, index) => {\r\n            return (\r\n                <tr key={oneInvoice.id}>\r\n                    <th> {indexing === 0 ? (index + 1) : (++indexing1)}</th>\r\n                    <td>{oneInvoice.waiterName}</td>\r\n                    <td>{oneInvoice.totalPrice}</td>\r\n                    <td>{oneInvoice.clientName}</td>\r\n                    <td> {oneInvoice.paymentStatus}</td>\r\n                    <td> --</td>\r\n                    <td> <Button id={oneInvoice.id} onClick={handleMakePaidClick} className='bg-warning'>Make Paid</Button> </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n\r\n        const arrNew = [...menu1New];\r\n        return arrNew;\r\n    }\r\n\r\n\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [itemToFetch, setItemToFetch] = useState(numberOfItem);\r\n    const [itemToStartOn, setItemToStartOn] = useState(numberOfItem);\r\n    const [items2, setItems2] = useState(initial_values());\r\n\r\n    let funMenuNew = (dailyUsange = productToDisplay, reset = false) => {\r\n        let start;\r\n        if (!reset) {\r\n            start = itemToStartOn;\r\n        } else {\r\n            start = 0;\r\n        }\r\n\r\n        let last = start + itemToFetch;\r\n\r\n\r\n        let lastIndex = (dailyUsange.length < last) ? dailyUsange.length : last;\r\n        if (dailyUsange.length >= lastIndex) {\r\n            let indexing = start;\r\n            // this.setState({\r\n            //     itemToStartOn:lastIndex\r\n            // }\r\n            //\r\n            //\r\n            // )\r\n            setItemToStartOn(lastIndex);\r\n            let menuNew = initial_values(start, lastIndex, indexing);\r\n            if (dailyUsange.length === lastIndex) {\r\n                // this.setState({hasMoreS: false});\r\n                setHasMoreS(false);\r\n            }\r\n            return menuNew;\r\n        } else {\r\n            // this.setState({hasMores:false});\r\n            setHasMoreS(false);\r\n            return [];\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    let fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n\r\n            let item2 = [...items2, ...funMenuNew()];\r\n\r\n            setItems2(item2);\r\n        }, 1500);\r\n    };\r\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n        <Container >\r\n            <Row> <Col md={{size: 4, offset: 8}}>\r\n                <Button onClick={handleRefresh}> <span className=\"fa fa-spinner\" >Click to refresh</span> </Button>\r\n            </Col> </Row>\r\n            <Row>\r\n\r\n                <Col sm=\"12\">\r\n                    <div className=\"d-flex justify-content-center bg-warning mt-4\">\r\n                        <h3>non paid Invoice </h3>\r\n                    </div>\r\n                    <Table responsive hover>\r\n\r\n                        <StickyContainer>\r\n\r\n                            <Sticky>\r\n                                {({\r\n                                      style,\r\n\r\n\r\n                                      isSticky,\r\n                                      wasSticky,\r\n                                      distanceFromTop,\r\n                                      distanceFromBottom,\r\n                                      calculatedHeight\r\n                                  }) => (\r\n                                    // <header style={style}>\r\n                                    //     {<FilterMenu categories={keysToUse}\r\n                                    //                  category={category}\r\n                                    //                  changeProductToDisplay={changeProductToDisplay}\r\n                                    //                  setCategory={setCategory}/>\r\n                                    //\r\n                                    //     }\r\n                                    // </header>\r\n\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th> Id</th>\r\n                                        <th>WaiterName</th>\r\n                                        <th>TotalPrice</th>\r\n                                        <th>ClientName</th>\r\n                                        <th> PaymentStatus</th>\r\n                                        <th> created At</th>\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n\r\n                                )}\r\n\r\n\r\n                            </Sticky>\r\n\r\n                            <div>\r\n\r\n                                <div id=\"scrollableDivInReports\"\r\n                                     className=\"card fixedDiv square scrollbar-cyan bordered-cyan\">\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"mt-2\">\r\n                                            <InfiniteScroll\r\n                                                scrollableTarget={\"scrollableDivInReports\"}\r\n                                                dataLength={items2.length}\r\n                                                next={fetchMoreData}\r\n                                                hasMore={hasMoreS}\r\n                                                loader={<span\r\n                                                    className=\"fa fa-lg fa-spinner text-warning\"><b>Loading</b></span>}\r\n                                                endMessage={\r\n                                                    <p> no more results </p>\r\n                                                }\r\n\r\n                                            >\r\n                                                <div className=\"\">\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th> Id</th>\r\n                                                            <th>WaiterName</th>\r\n                                                            <th>TotalPrice</th>\r\n                                                            <th>ClientName</th>\r\n                                                            <th> PaymentStatus</th>\r\n                                                            <th> created At</th>\r\n\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {\r\n\r\n                                                            items2.map(\r\n                                                                (item, i) => {\r\n                                                                    return (\r\n                                                                        item\r\n\r\n                                                                    )\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </InfiniteScroll>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </StickyContainer>\r\n                    </Table>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NonPaidInvoicesComponent;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\HorizontalOutOfStock.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\MarchResourceCard.js",["359","360"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\index.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\ContactComponent.js",["361","362","363","364","365","366","367"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            KK 8 AVE Road<br/>\r\n                            1*58'56.8''S   30*06'12.5''E<br/>\r\n                            KICUKIRO<br/>\r\n                            <i className=\"fa fa-phone\"></i>: +250 7828 76343<br/>\r\n                            <i className=\"fa fa-fax\"></i>: +250 7828 76343<br/>\r\n                            <i className=\"fa fa-envelope\"></i>: <a\r\n                            href=\"mailto:habimanamoise11@gmail.com\">habimanamoise11@gmail.com</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:++250 7828 76343\"><i\r\n                                className=\"fa fa-phone\"></i> Call</a>\r\n                            <a href=\"www.skype.com\" role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:habimanamoise11@gmail.com\"><i\r\n                                className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                                  placeholder=\"First Name\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                                  placeholder=\"Last Name\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                  placeholder=\"Tel. Number\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                                  placeholder=\"Email\"\r\n                                                  className=\"form-control\"\r\n                                                  validators={{\r\n                                                      required, validEmail\r\n                                                  }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                              className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                                    className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                                      rows=\"12\"\r\n                                                      className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\SignUp.js",["368","369","370","371","372","373","374"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\miscellaneous.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Navigation.js",["375","376","377","378"],"import React, {useState} from 'react';\r\nimport '../css/Some.css';\r\nimport Search from './homepagecomponents/Search';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AddedCart from \"./cartComponent/AddedCart\";\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    NavItem,\r\n    UncontrolledDropdown\r\n} from 'reactstrap';\r\nimport SearchOutputDisplay from \"./Manager/SearchOutputDisplay\";\r\n\r\n\r\nlet Navigation = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [searchOutput, setSearchOutput] = useState([]);\r\n    const searchText = (txt = text) => {\r\n        let output = props.products.products.reduce(\r\n            (result, oneProduct) => {\r\n                if (oneProduct.name.toLowerCase().includes(txt.toLowerCase()) || oneProduct.category.toLowerCase().includes(txt.toLowerCase())) {\r\n                    result = [...result, oneProduct];\r\n                }\r\n                return result;\r\n            }, []\r\n        );\r\n        if (txt === '') {\r\n            setSearchOutput([]);\r\n        } else {\r\n            setSearchOutput(output);\r\n        }\r\n\r\n    }\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const toggleModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n    const handleLogin = (event) => {\r\n        toggleModal();\r\n        props.loginUser({username: username, password: password});\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    function handleGoogleLogin(event) {\r\n        toggleModal();\r\n        props.googleLogin();\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleLogout() {\r\n        props.logoutUser();\r\n    }\r\n\r\n    const handleChangeOfUsername = (event) => {\r\n        setUsername(event.target.value);\r\n    }\r\n    const handleChangeOfPassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    const handleChangeOfRemember = (event) => {\r\n        setRemember(event.target.value);\r\n    }\r\n    const getLink = (typeOfUser) => {\r\n        if (typeOfUser === 'receptionist') {\r\n            return <NavItem><NavLink className=\"nav-link\" to=\"/witer\">\r\n                <span className=\"fa fa-list fa-lg\"> Waiter </span>\r\n            </NavLink> </NavItem>\r\n\r\n        } else if (typeOfUser === 'stockManager') {\r\n            return <NavItem><NavLink className=\"nav-link\" to=\"/management\">\r\n                <span className=\"fa fa-list fa-lg\"> Management </span>\r\n            </NavLink></NavItem>\r\n        } else {\r\n            return <NavLink to=\"/profile\"> Profile </NavLink>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\"><img src=\"https://firebasestorage.googleapis.com/v0/b/resto247-2c1f2.appspot.com/o/images%2Flogo.jpg?alt=media&token=6296ddb1-0cda-4a2a-8956-50209dc3a992\" width=\"40px\" alt=\"logo\"/> 24/7 Resto</NavbarBrand>\r\n                <NavbarToggler onClick={toggle}/>\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"> Home </span>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\"> About Us </span>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem><NavLink className=\"nav-link\" to=\"/menu\">\r\n                            <span className=\"fa fa-list fa-lg\"> Menu </span>\r\n                        </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                <span className=\"fa fa-address-card fa-lg\"> Contact Us </span>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        {/*<UncontrolledDropdown nav inNavbar>*/}\r\n                        {/*    <DropdownToggle nav caret>*/}\r\n                        {/*        Options*/}\r\n                        {/*    </DropdownToggle>*/}\r\n                        {/*    <DropdownMenu right>*/}\r\n                        {/*        <DropdownItem> Option 1</DropdownItem>*/}\r\n                        {/*        <DropdownItem> Option 2</DropdownItem>*/}\r\n                        {/*        <DropdownItem divider/>*/}\r\n                        {/*        <DropdownItem> Reset </DropdownItem>*/}\r\n                        {/*    </DropdownMenu>*/}\r\n                        {/*</UncontrolledDropdown>*/}\r\n\r\n                    </Nav>\r\n                    <span className=\"mr-5\"> <Search searchText={searchText}  setText={setText} text={text} searchbar=\"searchbar\"/></span>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button className=\"bg-light\">\r\n                                <AddedCart cart={props.cart}/>\r\n                            </Button>\r\n                        </NavItem>\r\n                        {!(localStorage.getItem('user') !== null) ? <span>\r\n                            <Button outline onClick={toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                {props.auth.isFetching ?\r\n                                    <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                    : null\r\n                                }\r\n                            </Button>\r\n                            <Button outline>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span> <NavLink to=\"/signup\">Sign up</NavLink>\r\n                                {props.auth.isFetching ?\r\n                                    <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                    : null\r\n                                }\r\n                            </Button>\r\n\r\n                            </span>\r\n                            :\r\n                            <React.Fragment>\r\n                                {getLink(props.userCollection.userCollection.typeOfUser)}\r\n                                {/*<div className=\"navbar-text mr-3\">*/}\r\n                                {/*    {props.userCollection.userCollection.firstName === null? \"no first\" : props.userCollection.userCollection.firstName} */}\r\n                                {/*</div>*/}\r\n                                <NavItem>\r\n                                    <Button outline onClick={handleLogout}>\r\n                                        <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                        {props.auth.isFetching ?\r\n                                            <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                            : null\r\n                                        }\r\n                                    </Button>\r\n                                </NavItem>\r\n\r\n                            </React.Fragment>\r\n                        }\r\n\r\n\r\n                    </Nav>\r\n                </Collapse>\r\n\r\n\r\n\r\n\r\n\r\n                {/* <a href=\"\" data-toggle=\"modal\" data-target= \"#loginModal\">\r\n                        <span class=\"fa fa-sign-in\"></span> Login\r\n                    </a> */}\r\n            </Navbar>\r\n            <SearchOutputDisplay output={searchOutput}/>\r\n            <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n                <ModalHeader toggle={toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Email</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                   value={username}\r\n                                   onChange={handleChangeOfUsername}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                   value={password}\r\n                                   onChange={handleChangeOfPassword}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                       value={remember}\r\n                                       onChange={handleChangeOfRemember}\r\n                                />\r\n                                Remember me\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                    <p></p>\r\n                    <Button color=\"danger\" onClick={handleGoogleLogin}><span\r\n                        className=\"fa fa-google fa-lg\"></span> Login with Google</Button>\r\n                </ModalBody>\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Navigation;","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionTypes.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\TabsMenu.js",["379","380","381"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Products\\StockManagement.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\FlippingCard.js",["382","383","384"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ScrollView.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\shared\\carouselHome.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\configureStore.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\DishdetailComponent.js",["385","386","387"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\AboutComponent.js",["388","389"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\HomeComponent.js",["390","391","392","393","394","395","396","397","398","399","400"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\FooterComponent.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\ActionCreators.js",["401","402"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\resources.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Main.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\dailyStockUp.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\homepagecomponents\\RenderCard3.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\ProfitCard.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\UIcomponents\\ItemsSold.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\ReactInfiniteScroll.js",["403"],"import React, {Component} from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nclass ReactInfiniteScroll extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n        // this.state = {\r\n        //     items2: arr,\r\n        //     hasMoreS:true,\r\n        //     itemsToFetch: lastIndex,\r\n        //     itemToStartOn: lastIndex\r\n        // };\r\n\r\n    }\r\n\r\n\r\n    fetchMoreData = () => {\r\n\r\n        // a fake async api call like which sends\r\n        // 20 more records in 1.5 secs\r\n        setTimeout(() => {\r\n            // this.setState({\r\n            //\r\n            //     items2: [...this.state.items2,...this.funMenu()]\r\n            //\r\n            // });\r\n            let item2 = [...this.props.items2, ...this.props.funMenu()];\r\n\r\n            this.props.setItems2(item2);\r\n        }, 1500);\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-2\">\r\n                <InfiniteScroll\r\n                    scrollableTarget={this.props.scrollableDiv}\r\n                    dataLength={this.props.items2.length}\r\n                    next={this.fetchMoreData}\r\n                    hasMore={this.props.hasMoreS}\r\n                    loader={<h4>Loading...</h4>}\r\n                    endMessage={\r\n                        <p> no more results </p>\r\n                    }\r\n\r\n                >\r\n                    <div className=\"row\">\r\n                        {\r\n                            this.props.items2.map(\r\n                                (item, i) => {\r\n                                    return (\r\n                                        <span>{item}\r\n                                \r\n                                </span>\r\n                                    )\r\n                                }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </InfiniteScroll>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactInfiniteScroll;\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\marching\\OneItemMatch.js",["404"],"import React, {useEffect} from 'react'\r\nimport {setImage} from \"../../../functions/setImage\";\r\nimport {\r\n    \r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    \r\n    Row\r\n} from \"reactstrap\";\r\nexport default function OneItemMatch(doc) {\r\n    useEffect(() => {\r\n        setImage(doc.image);\r\n      });\r\n\r\n    let resourceSide = (<div className=\"mb-3\">\r\n                <div key={doc.id} className=\"march shadow-lg\">\r\n                    <div className=\"marchBody\">\r\n                        <div className=\"\">\r\n                            <h2 className=\"d-flex justify-content-center color2 pb-1\"> Resources</h2>\r\n                            <div className=\"resourcesPart\">\r\n                                <img src=\"\" className={doc.image +\" marchImage mr-2\"} alt=\"Card image cap\" />\r\n                                <div className=\"marchDescription\">\r\n                                    <h3 tag=\"h5\">Name : {doc.resourceName}</h3>\r\n                                    <h5 tag=\"h6\" className=\"mb-2 text-muted\">Quantity: {doc.resourceQuantity}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clear\"></div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n\r\n\r\n            if(doc === undefined || doc.products === undefined || doc.products === null){\r\n                return;\r\n            }\r\n            let allProducts = doc.products.map(product =>{\r\n                return (\r\n                    <React.Fragment>\r\n                        <dt className=\"col-6\">{product.name}</dt>\r\n                        <dd className=\"col-6\">{product.quantity}</dd>\r\n                    </React.Fragment>\r\n                )\r\n            });\r\n            let productsSide = (\r\n                <div>\r\n\r\n\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Marched Products</CardHeader>\r\n                        <CardBody>\r\n                            <div className=\"row p-1\">\r\n                                <div className=\"col-6\">\r\n                                    <h4>Names</h4>\r\n\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <h4>Quantity</h4>\r\n                                </div>\r\n                            </div>\r\n                            <dl className=\"row p-1\">\r\n                                {allProducts}\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <Row className=\"\">\r\n                            <Col md={5}>\r\n                                {resourceSide}\r\n                            </Col>\r\n                            <Col md={2} className=\"d-flex align-items-center justify-content-center\">\r\n                                <div>\r\n                                    <button type=\"button\" className=\" btn-circle btn btn-xl\"><i\r\n                                        className=\"fa fa-lg fa-gg\"></i>\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            <Col md={5}>\r\n                                {productsSide}\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            );\r\n    \r\n}\r\n","C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\Forms.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Receptions\\UIcomponents\\CicleMenu.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\ProductSold.js",["425","426","427","428","429","430"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\Manager\\Reports\\reports\\TempleteToDisplayDataInTableFromArray.js",["431","432"],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\auth.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\collections\\waiters.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\redux\\others\\nonPaidInvoices.js",[],"C:\\Users\\paterne\\Desktop\\oop\\projects\\React\\resto_v1.0\\resto\\src\\components\\cartComponent\\TableAddedCarts.js",[],{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"433","replacedBy":"437"},{"ruleId":"435","replacedBy":"438"},{"ruleId":"433","replacedBy":"439"},{"ruleId":"435","replacedBy":"440"},{"ruleId":"433","replacedBy":"441"},{"ruleId":"435","replacedBy":"442"},{"ruleId":"443","severity":1,"message":"444","line":2,"column":8,"nodeType":"445","messageId":"446","endLine":2,"endColumn":18},{"ruleId":"433","replacedBy":"447"},{"ruleId":"435","replacedBy":"448"},{"ruleId":"443","severity":1,"message":"449","line":40,"column":25,"nodeType":"445","messageId":"446","endLine":40,"endColumn":39},{"ruleId":"443","severity":1,"message":"450","line":81,"column":11,"nodeType":"445","messageId":"446","endLine":81,"endColumn":17},{"ruleId":"443","severity":1,"message":"451","line":8,"column":9,"nodeType":"445","messageId":"446","endLine":8,"endColumn":14},{"ruleId":"443","severity":1,"message":"452","line":43,"column":12,"nodeType":"445","messageId":"446","endLine":43,"endColumn":28},{"ruleId":"443","severity":1,"message":"453","line":43,"column":30,"nodeType":"445","messageId":"446","endLine":43,"endColumn":49},{"ruleId":"443","severity":1,"message":"454","line":44,"column":12,"nodeType":"445","messageId":"446","endLine":44,"endColumn":20},{"ruleId":"443","severity":1,"message":"455","line":44,"column":22,"nodeType":"445","messageId":"446","endLine":44,"endColumn":33},{"ruleId":"443","severity":1,"message":"449","line":48,"column":25,"nodeType":"445","messageId":"446","endLine":48,"endColumn":39},{"ruleId":"443","severity":1,"message":"450","line":117,"column":11,"nodeType":"445","messageId":"446","endLine":117,"endColumn":17},{"ruleId":"443","severity":1,"message":"456","line":8,"column":5,"nodeType":"445","messageId":"446","endLine":8,"endColumn":9},{"ruleId":"443","severity":1,"message":"457","line":9,"column":5,"nodeType":"445","messageId":"446","endLine":9,"endColumn":10},{"ruleId":"443","severity":1,"message":"458","line":10,"column":5,"nodeType":"445","messageId":"446","endLine":10,"endColumn":10},{"ruleId":"459","severity":1,"message":"460","line":57,"column":33,"nodeType":"461","endLine":57,"endColumn":110},{"ruleId":"443","severity":1,"message":"455","line":5,"column":22,"nodeType":"445","messageId":"446","endLine":5,"endColumn":33},{"ruleId":"443","severity":1,"message":"457","line":1,"column":56,"nodeType":"445","messageId":"446","endLine":1,"endColumn":61},{"ruleId":"443","severity":1,"message":"458","line":1,"column":63,"nodeType":"445","messageId":"446","endLine":1,"endColumn":68},{"ruleId":"433","replacedBy":"462"},{"ruleId":"435","replacedBy":"463"},{"ruleId":"464","severity":1,"message":"465","line":36,"column":25,"nodeType":"461","endLine":36,"endColumn":61},{"ruleId":"466","severity":1,"message":"467","line":13,"column":50,"nodeType":"468","messageId":"469","endLine":13,"endColumn":52},{"ruleId":"466","severity":1,"message":"467","line":18,"column":49,"nodeType":"468","messageId":"469","endLine":18,"endColumn":51},{"ruleId":"466","severity":1,"message":"467","line":22,"column":55,"nodeType":"468","messageId":"469","endLine":22,"endColumn":57},{"ruleId":"443","severity":1,"message":"470","line":2,"column":9,"nodeType":"445","messageId":"446","endLine":2,"endColumn":15},{"ruleId":"443","severity":1,"message":"471","line":13,"column":19,"nodeType":"445","messageId":"446","endLine":13,"endColumn":27},{"ruleId":"443","severity":1,"message":"449","line":39,"column":25,"nodeType":"445","messageId":"446","endLine":39,"endColumn":39},{"ruleId":"443","severity":1,"message":"450","line":80,"column":11,"nodeType":"445","messageId":"446","endLine":80,"endColumn":17},{"ruleId":"464","severity":1,"message":"472","line":49,"column":106,"nodeType":"461","endLine":50,"endColumn":44},{"ruleId":"443","severity":1,"message":"453","line":11,"column":30,"nodeType":"445","messageId":"446","endLine":11,"endColumn":49},{"ruleId":"443","severity":1,"message":"449","line":56,"column":25,"nodeType":"445","messageId":"446","endLine":56,"endColumn":39},{"ruleId":"443","severity":1,"message":"450","line":97,"column":11,"nodeType":"445","messageId":"446","endLine":97,"endColumn":17},{"ruleId":"459","severity":1,"message":"460","line":55,"column":29,"nodeType":"461","endLine":55,"endColumn":127},{"ruleId":"473","severity":1,"message":"474","line":55,"column":64,"nodeType":"475","messageId":"476","endLine":55,"endColumn":65},{"ruleId":"477","severity":1,"message":"478","line":78,"column":37,"nodeType":"461","endLine":84,"endColumn":39},{"ruleId":"477","severity":1,"message":"478","line":100,"column":37,"nodeType":"461","endLine":106,"endColumn":39},{"ruleId":"477","severity":1,"message":"478","line":122,"column":37,"nodeType":"461","endLine":128,"endColumn":39},{"ruleId":"477","severity":1,"message":"478","line":145,"column":37,"nodeType":"461","endLine":151,"endColumn":39},{"ruleId":"477","severity":1,"message":"479","line":167,"column":45,"nodeType":"461","endLine":169,"endColumn":47},{"ruleId":"477","severity":1,"message":"480","line":175,"column":37,"nodeType":"461","endLine":176,"endColumn":78},{"ruleId":"477","severity":1,"message":"481","line":185,"column":37,"nodeType":"461","endLine":187,"endColumn":82},{"ruleId":"477","severity":1,"message":"478","line":45,"column":41,"nodeType":"461","endLine":51,"endColumn":43},{"ruleId":"477","severity":1,"message":"478","line":67,"column":41,"nodeType":"461","endLine":73,"endColumn":43},{"ruleId":"477","severity":1,"message":"478","line":89,"column":41,"nodeType":"461","endLine":98,"endColumn":43},{"ruleId":"477","severity":1,"message":"478","line":117,"column":41,"nodeType":"461","endLine":122,"endColumn":43},{"ruleId":"477","severity":1,"message":"482","line":138,"column":41,"nodeType":"461","endLine":146,"endColumn":43},{"ruleId":"477","severity":1,"message":"482","line":162,"column":41,"nodeType":"461","endLine":170,"endColumn":43},{"ruleId":"477","severity":1,"message":"479","line":186,"column":45,"nodeType":"461","endLine":187,"endColumn":93},{"ruleId":"443","severity":1,"message":"483","line":9,"column":5,"nodeType":"445","messageId":"446","endLine":9,"endColumn":17},{"ruleId":"443","severity":1,"message":"484","line":10,"column":5,"nodeType":"445","messageId":"446","endLine":10,"endColumn":17},{"ruleId":"443","severity":1,"message":"485","line":11,"column":5,"nodeType":"445","messageId":"446","endLine":11,"endColumn":19},{"ruleId":"443","severity":1,"message":"486","line":24,"column":5,"nodeType":"445","messageId":"446","endLine":24,"endColumn":25},{"ruleId":"443","severity":1,"message":"470","line":3,"column":5,"nodeType":"445","messageId":"446","endLine":3,"endColumn":11},{"ruleId":"443","severity":1,"message":"487","line":6,"column":5,"nodeType":"445","messageId":"446","endLine":6,"endColumn":13},{"ruleId":"488","severity":1,"message":"489","line":134,"column":37,"nodeType":"475","messageId":"490","endLine":134,"endColumn":39},{"ruleId":"443","severity":1,"message":"491","line":70,"column":20,"nodeType":"445","messageId":"446","endLine":70,"endColumn":29},{"ruleId":"443","severity":1,"message":"492","line":73,"column":22,"nodeType":"445","messageId":"446","endLine":73,"endColumn":33},{"ruleId":"493","severity":1,"message":"494","line":222,"column":13,"nodeType":"461","endLine":222,"endColumn":70},{"ruleId":"477","severity":1,"message":"480","line":64,"column":37,"nodeType":"461","endLine":65,"endColumn":78},{"ruleId":"477","severity":1,"message":"478","line":80,"column":37,"nodeType":"461","endLine":85,"endColumn":39},{"ruleId":"477","severity":1,"message":"481","line":103,"column":37,"nodeType":"461","endLine":104,"endColumn":90},{"ruleId":"443","severity":1,"message":"495","line":5,"column":9,"nodeType":"445","messageId":"446","endLine":5,"endColumn":16},{"ruleId":"443","severity":1,"message":"496","line":7,"column":10,"nodeType":"445","messageId":"446","endLine":7,"endColumn":22},{"ruleId":"443","severity":1,"message":"497","line":2,"column":9,"nodeType":"445","messageId":"446","endLine":2,"endColumn":12},{"ruleId":"443","severity":1,"message":"498","line":2,"column":14,"nodeType":"445","messageId":"446","endLine":2,"endColumn":17},{"ruleId":"443","severity":1,"message":"499","line":2,"column":19,"nodeType":"445","messageId":"446","endLine":2,"endColumn":26},{"ruleId":"443","severity":1,"message":"500","line":2,"column":28,"nodeType":"445","messageId":"446","endLine":2,"endColumn":35},{"ruleId":"443","severity":1,"message":"501","line":2,"column":37,"nodeType":"445","messageId":"446","endLine":2,"endColumn":40},{"ruleId":"443","severity":1,"message":"502","line":2,"column":42,"nodeType":"445","messageId":"446","endLine":2,"endColumn":52},{"ruleId":"443","severity":1,"message":"503","line":2,"column":54,"nodeType":"445","messageId":"446","endLine":2,"endColumn":61},{"ruleId":"443","severity":1,"message":"504","line":3,"column":8,"nodeType":"445","messageId":"446","endLine":3,"endColumn":18},{"ruleId":"443","severity":1,"message":"505","line":14,"column":12,"nodeType":"445","messageId":"446","endLine":14,"endColumn":23},{"ruleId":"443","severity":1,"message":"450","line":16,"column":11,"nodeType":"445","messageId":"446","endLine":16,"endColumn":17},{"ruleId":"443","severity":1,"message":"506","line":36,"column":11,"nodeType":"445","messageId":"446","endLine":36,"endColumn":15},{"ruleId":"443","severity":1,"message":"507","line":2,"column":25,"nodeType":"445","messageId":"446","endLine":2,"endColumn":40},{"ruleId":"443","severity":1,"message":"508","line":3,"column":8,"nodeType":"445","messageId":"446","endLine":3,"endColumn":16},{"ruleId":"509","severity":1,"message":"510","line":6,"column":5,"nodeType":"511","messageId":"512","endLine":18,"endColumn":6},{"ruleId":"459","severity":1,"message":"460","line":23,"column":33,"nodeType":"461","endLine":23,"endColumn":110},{"ruleId":"477","severity":1,"message":"478","line":147,"column":33,"nodeType":"461","endLine":153,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":169,"column":33,"nodeType":"461","endLine":175,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":192,"column":33,"nodeType":"461","endLine":198,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":215,"column":33,"nodeType":"461","endLine":224,"endColumn":35},{"ruleId":"477","severity":1,"message":"513","line":242,"column":33,"nodeType":"461","endLine":249,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":282,"column":33,"nodeType":"461","endLine":288,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":304,"column":33,"nodeType":"461","endLine":310,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":327,"column":33,"nodeType":"461","endLine":333,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":350,"column":33,"nodeType":"461","endLine":356,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":373,"column":33,"nodeType":"461","endLine":382,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":400,"column":33,"nodeType":"461","endLine":409,"endColumn":35},{"ruleId":"477","severity":1,"message":"513","line":427,"column":33,"nodeType":"461","endLine":433,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":469,"column":33,"nodeType":"461","endLine":475,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":491,"column":33,"nodeType":"461","endLine":497,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":514,"column":33,"nodeType":"461","endLine":520,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":537,"column":33,"nodeType":"461","endLine":546,"endColumn":35},{"ruleId":"477","severity":1,"message":"513","line":564,"column":33,"nodeType":"461","endLine":570,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":606,"column":33,"nodeType":"461","endLine":612,"endColumn":35},{"ruleId":"477","severity":1,"message":"478","line":628,"column":33,"nodeType":"461","endLine":634,"endColumn":35},{"ruleId":"477","severity":1,"message":"513","line":652,"column":33,"nodeType":"461","endLine":658,"endColumn":35},{"ruleId":"443","severity":1,"message":"453","line":8,"column":30,"nodeType":"445","messageId":"446","endLine":8,"endColumn":49},{"ruleId":"443","severity":1,"message":"514","line":9,"column":22,"nodeType":"445","messageId":"446","endLine":9,"endColumn":33},{"ruleId":"443","severity":1,"message":"454","line":59,"column":12,"nodeType":"445","messageId":"446","endLine":59,"endColumn":20},{"ruleId":"443","severity":1,"message":"455","line":59,"column":22,"nodeType":"445","messageId":"446","endLine":59,"endColumn":33},{"ruleId":"443","severity":1,"message":"449","line":62,"column":25,"nodeType":"445","messageId":"446","endLine":62,"endColumn":39},{"ruleId":"443","severity":1,"message":"450","line":102,"column":11,"nodeType":"445","messageId":"446","endLine":102,"endColumn":17},{"ruleId":"443","severity":1,"message":"449","line":43,"column":25,"nodeType":"445","messageId":"446","endLine":43,"endColumn":39},{"ruleId":"443","severity":1,"message":"450","line":84,"column":11,"nodeType":"445","messageId":"446","endLine":84,"endColumn":17},"no-native-reassign",["515"],"no-negated-in-lhs",["516"],["515"],["516"],["515"],["516"],["515"],["516"],"no-unused-vars","'DairyUsage' is defined but never used.","Identifier","unusedVar",["515"],["516"],"'setItemToFetch' is assigned a value but never used.","'toggle' is assigned a value but never used.","'allTr' is assigned a value but never used.","'productToDisplay' is assigned a value but never used.","'setProductToDisplay' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["515"],["516"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","'setItems' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","'DropdownItem' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownToggle' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'CardText' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'setErrorM' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Loading' is defined but never used.","'RenderLeader' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Row' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'classnames' is defined but never used.","'cathegories' is assigned a value but never used.","'menu' is assigned a value but never used.","'firebaseStorage' is defined but never used.","'firebase' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Imported JSX component file must be in PascalCase or SCREAMING_SNAKE_CASE","'setProducts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]